{
    "0.0.1": {
        "info": {
            "author": "nielstron",
            "author_email": "n.muendler@web.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Compilers"
            ],
            "description": "Eopsin\n======\n\nThis is a prototypical implementation of smart contracts\nfor Cardano which are written in a very strict subset of valid Python.\nThe general philosphy of this project is to write a compiler that \nensure the following:\n\nIf the program compiles then:\n1. it is a valid Python program\n2. the output running it with python is the same as running it on-chain.\n\nThis specificially means that _not every valid python program is a valid smart contract_.\nNot all language features of python will or can be supported.\nThe reasons are mainly of practical nature (i.e. we can't infer types when functions like `eval` are allowed).\n\nSpecifically, only a pure subset of python is allowed.\nFurther, only immutable objects may be generated.\n\nFor your program to be accepted, make sure to only make use of language constructs supported by the compiler.\nYou will be notified of which constructs are not supported when trying to compile.\n\n## Architecture\n\nThis program consists of a few independent components:\n1. An aggressive static type inferencer\n2. Rewriting tools to simplify complex python expressions\n3. A compiler from a subset of python into UPLC\n\n## Installation\n\nInstall Python 3.10. Then run\n\n```bash\npython3 -m pip install eopsin-lang\n```\n\n## Running\n\nWrite your program in python. You may start with the `example.py`.\n\nThen run \n```bash\npython3 -m eopsin compile example.py\n```\n\n\n## Name\n\n> Eopsin (Korean: \uc5c5\uc2e0; Hanja: \u696d\u795e) is the goddess of the storage and wealth in Korean mythology and shamanism. [[1]](https://en.wikipedia.org/wiki/Eopsin)\n\nSince this tries to merge Python (a large serpent) and Pluto/Plutus (Greek wealth gods), the name appears fitting.\nAlso there are no naming conflicts.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imperatorlang/uplc",
            "keywords": "python cardano smart contract blockchain verification haskell",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eopsin-lang",
            "package_url": "https://pypi.org/project/eopsin-lang/",
            "platform": null,
            "project_url": "https://pypi.org/project/eopsin-lang/",
            "project_urls": {
                "Homepage": "https://github.com/imperatorlang/uplc"
            },
            "release_url": "https://pypi.org/project/eopsin-lang/0.0.1/",
            "requires_dist": [
                "pluthon",
                "uplc"
            ],
            "requires_python": ">=3",
            "summary": "A simple pythonic programming language for Smart Contracts on Cardano",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16303715,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "2bc4c4c2c3d76ae9b508dbf9ed7a7764598cfcc1269f5a8225b686c123bed17f",
                    "md5": "6bbad8b2aaadcccff7732df3eac21e70",
                    "sha256": "6a860e997e6c31fd73b3fabaf728a5da58773a6cb79d8ca7a6d324a27931c37e"
                },
                "downloads": -1,
                "filename": "eopsin_lang-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6bbad8b2aaadcccff7732df3eac21e70",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 15218,
                "upload_time": "2023-01-04T15:47:09",
                "upload_time_iso_8601": "2023-01-04T15:47:09.664878Z",
                "url": "https://files.pythonhosted.org/packages/2b/c4/c4c2c3d76ae9b508dbf9ed7a7764598cfcc1269f5a8225b686c123bed17f/eopsin_lang-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "c323e3cbfdda3595da45188b3ab114c22d09ade56eb1f1375404f57e5331e0a1",
                    "md5": "9081e8c66efb0c6e1b87edd29e077d8b",
                    "sha256": "2fc5f3c331d9cd4d2ff6f06b4a9b962712f4c1b150c58ea7c2e9f6a83df9cb4a"
                },
                "downloads": -1,
                "filename": "eopsin-lang-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9081e8c66efb0c6e1b87edd29e077d8b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 13987,
                "upload_time": "2023-01-04T15:47:12",
                "upload_time_iso_8601": "2023-01-04T15:47:12.227346Z",
                "url": "https://files.pythonhosted.org/packages/c3/23/e3cbfdda3595da45188b3ab114c22d09ade56eb1f1375404f57e5331e0a1/eopsin-lang-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}