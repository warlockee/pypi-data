{
    "0.0.1": {
        "info": {
            "author": "Teddy Oweh",
            "author_email": "teddyoweh@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "![logo](https://www.beardb.net/assets/logo.d0f8a85f.png)\n# bearDB\nDatabase system implementing AES encrypted versions JSON of data. Easy to access, manage and deploy remotely\n\n[Web Documentation](https://beardb.net)\n\n ## Database Architecture\n \n ```\nProject\n  -Database\n    -Bucket\n       -Data\n ```\n## Outline\n- [Install Libraries](#install-libraries)\n- [Import Libraries](#import-libraries)\n- [Initialize Project](#initialize-project)\n- [Insert Data into Bucket](#insert-data-into-bucket)\n- [Fetch Data From ID](#fetch-data-from-id)\n- [Fetch Data From Query](#fetch-data-from-query)\n- [Updata Data in Bucket From Query](#updata-data-in-bucket-from-query)\n- [Update Data From Bucket From ID](#update-data-from-bucket-from-id)\n- [Delete Data From Bucket From Query](#delete-data-from-bucket-from-query)\n- [Working With BeardbAPI](#working-with-beardbapi)\n\n### Install Libraries\n```sh\n$ python3 -m pip install bearDB\n```\n\n#### Import Libraries\n```py\nfrom beardb import Beardb\nfrom beardb import Bucket\n```\n#### Initialize Project\n```py\n\nproject = Beardb('projectname')\nproject.load_database('class') \n```\n#### Initialize Bucket(DataBase File)\n\n```py\nusers = Bucket(project=project, bucket_name='users') # Project variable defined in the initialization \n```\n\n#### Insert Data into Bucket\n```py\ndata = {\n       'name':'Teddy Oweh',\n       'Random Data':'Golf'\n}\nusers.insert(data=data)\n \n```\n \n \n\n#### Fetch Data From ID\n```py\n\nuserinfo = users.fetchbyID(id=\"ae0ca44e-5301-11ed-8d24-a6bd5a94b3a6\")\n\n```\n\n\n#### Fetch Data From Query\n```py\nquery= {\n       'name':'Teddy Oweh',\n       'Random Data':'Golf'\n}\nuserinfo = users.fetchData(query=query)\n\n```\n\n#### Updata Data in Bucket From Query\n```py\nquery= {\n       'name':'Teddy Oweh',\n       'Random Data':'Golf'\n}\nnewdata = {\n       'name':'Teddy Oweh',\n       'Random Data':'Ping Pong',\n       'Added Data':'College'\n       \n}\n\nusers.update(query=query,data=newdata)\n\n```\n\n#### Update Data From Bucket From ID\n```py\n  \nnewdata = {\n       'name':'Teddy Oweh',\n       'Random Data':'Ping Pong',\n       'Added Data':'College'\n       \n}\n\nusers.updatebyId(id='ae0ca44e-5301-11ed-8d24-a6bd5a94b3a6',data=newdata})\n```\n\n#### Delete Data From Bucket From Query\n\n```py\nquery= {\n       'name':'Teddy Oweh',\n       'Random Data':'Golf'\n}\n \n\nusers.delete(query=query})\n \n```\n#### Delete Data From Bucket From ID\n\n```py\n\nusers.deletebyId(id=\"ae0ca44e-5301-11ed-8d24-a6bd5a94b3a6\")\n\n\n### Test Code\n```py\nbeardb_ = Beardb('projects')\nbeardb_.load_database('computers')\ncomputers=Bucket(beardb_,'computers')\ncomputers.insert({'model':'lenovo','ram':'8gb','hdd':'1tb','processor':'i5'})\n\n\n```\n## Working with BeardbAPI\n\nIn Order to communicate with the microservice [beardbAPI](https://github.com/teddyoweh/beardb-api) deploys when launched. This client Library consumes APIs effienctly and returns the data and status code.\n\n## Outline\n- [Import Library](#importing-library)\n- [Initialize Client Object](#initialize-client-object)\n- [Get User Data](#get-user-data)\n- [Create New Project](#create-new-project)\n- [Create New Database](#create-new-database)\n- [Create New Bucket](#create-new-bucket)\n- [Insert Data](#insert-data)\n- [Fetch Data by Query](#fetch-data-by-query)\n- [Fetch Data by ID](#fetch-data-by-id)\n- [Update Data by Query](#update-data-by-query)\n- [Update Data by ID](#update-data-by-id)\n- [Delete Data by Query](#delete-data-by-query)\n- [Delete Data by ID](#delete-data-by-id)\n- [Get Buckets](#get-buckets)\n- [Get Databases](#get-databases)\n- [Get Projects](#get-projects)\n\n\n### Importing Library\n```py\nfrom beardb import Client\n```\n\n### Initialize Client Object\nWhenever a new user is created, is always returns the secret to be able to access the data.\n\n```py\nhost='127.0.0.1'\nport=5555\nemail='teddyoweh@gmail.com'\nsecret='3687065edf2fdc64bbeb8cdac409ac352fdb65f01423159842d19283309cb70c'\nclient = Client(\n                host=host,\n                port=port,\n                email=email,\n                secret=secret\n              )           \n```\n\n### Get User Data\n```py\ncient.mydata()\n```\n\n### Create New User\n```py\nemail='teddyoweh@gmail.com'\npassword='myrealpassword'\nfullname='Teddy Oweh'\n\nclient.createnewuser(\n                     fullname=fullname\n                     email=email\n                     password=password\n)\n```\n\n### Create New Project\n```py\nproject='TestProject'\nclient.createnewproject(\n                       project=project\n)\n```\n### Create New Database\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nclient.createnewdatabase(\n                         project=project,\n                         database=database\n)   \n```\n\n### Create New Bucket\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\nclient.createnewbucket(\n                         project=project,\n                         database=database,\n                         bucket=bucket\n)   \n```\n### Insert Data\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\ndata={'name':'teddy',age:1}\nclient.insertdata(\n                         project=project,\n                         database=database,\n                         bucket=bucket\n)   \n```\n\n### Fetch Data by Query\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\nquery={'name':'teddy',age:1}\nclient.fetchdata(\n                         project=project,\n                         database=database,\n                         bucket=bucket,\n                         query=query\n)   \n```\n\n### Fetch Data by ID\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\nid='b419840a-7e04-11ed-84f8-324d38bf6d75'\nclient.fetchBYID(\n                         project=project,\n                         database=database,\n                         bucket=bucket,\n                         id=id\n)   \n```\n\n\n### Update Data by Query\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\ndata={'name':'teddy',age:1}\nquery='{name':'teddy'}\nclient.updatedata(\n                         project=project,\n                         database=database,\n                         bucket=bucket,\n                         data=data,\n                         query=query\n)   \n```\n\n\n### Update Data by ID\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\ndata={'name':'teddy',age:1}\nid='b419840a-7e04-11ed-84f8-324d38bf6d75'\nclient.updatebyid(\n                         project=project,\n                         database=database,\n                         bucket=bucket,\n                         data=data,\n                         id=id\n)   \n```\n\n### Delete Data by Query\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\nquery={'name':'teddy',age:1}\nclient.deletedata(\n                         project=project,\n                         database=database,\n                         bucket=bucket,\n                         query=query\n)   \n```\n\n### Delete Data by ID\n```py\nproject='TestProject'\ndatabase='TestDatabase'\nbucket='TestBucket'\nid='b419840a-7e04-11ed-84f8-324d38bf6d75'\nclient.deletebyid(\n                         project=project,\n                         database=database,\n                         bucket=bucket,\n                         id=id\n)   \n```\n\n### Get Buckets\n```py\nclient.getbuckets()\n```\n\n### Get Databases\n```py\nclient.getdatabases()\n```\n\n### Get Projects\n```py\ncient.getprojects()\n```\nLicense\n----\n\nMIT License\n\nCopyright (c) 2022 Teddy Oweh\n\n`teddyoweh built it`\ndi\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/teddyoweh/Beardb",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "Teddy Oweh <teddy@teddyoweh.net>",
            "name": "beardb",
            "package_url": "https://pypi.org/project/beardb/",
            "platform": null,
            "project_url": "https://pypi.org/project/beardb/",
            "project_urls": {
                "Bug Tracker": "https://github.com/teddyoweh/Beardb/issues",
                "Homepage": "https://github.com/teddyoweh/Beardb",
                "documentation": "https://beardb.net"
            },
            "release_url": "https://pypi.org/project/beardb/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Database system implementing encrypted versions JSON of data. Easy to access, manage and deploy remotely",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16198344,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fdba0a6096ab570af2e0d49d2df055f0",
                    "sha256": "a1ee4dfd37c53f3b99a3d019c0a7f66184177a852fe2054f7844248e6c4b64c5"
                },
                "downloads": -1,
                "filename": "beardb-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "fdba0a6096ab570af2e0d49d2df055f0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 3793,
                "upload_time": "2022-12-23T15:32:50",
                "upload_time_iso_8601": "2022-12-23T15:32:50.198795Z",
                "url": "https://files.pythonhosted.org/packages/1f/21/11a273765e57fde3bd62386e9c0844d6082198f610dece1b954157fb60c6/beardb-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}