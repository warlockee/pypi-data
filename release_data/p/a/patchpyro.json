{
    "2.0.0": {
        "info": {
            "author": "Cezar H. & adityaprasad502",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/adityaprasad502/patchpyro",
            "keywords": "",
            "license": "LGPLv3+",
            "maintainer": "",
            "maintainer_email": "",
            "name": "patchpyro",
            "package_url": "https://pypi.org/project/patchpyro/",
            "platform": null,
            "project_url": "https://pypi.org/project/patchpyro/",
            "project_urls": {
                "Homepage": "https://github.com/adityaprasad502/patchpyro"
            },
            "release_url": "https://pypi.org/project/patchpyro/2.0.0/",
            "requires_dist": [
                "pyrogram (>=2.0.69)"
            ],
            "requires_python": ">=3.9",
            "summary": "A modified pyromod by www.da.gd/aditya",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16223222,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c8c1c4544fac5ae5502a1a464852a0a",
                    "sha256": "92a22ed5a3ab5a1b8b9b722be46789bd5ded2d2c18118ec441d2acd9bf92f076"
                },
                "downloads": -1,
                "filename": "patchpyro-2.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8c8c1c4544fac5ae5502a1a464852a0a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 26993,
                "upload_time": "2022-12-26T08:13:10",
                "upload_time_iso_8601": "2022-12-26T08:13:10.942373Z",
                "url": "https://files.pythonhosted.org/packages/cb/45/1ca81759eff44a4897abfd7a1d1142b41fde76de148dd8712451560c636e/patchpyro-2.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.1": {
        "info": {
            "author": "Cezar H. & adityaprasad502",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# PatchPyro\r\n### This is a fork of pyromod (renamed as patchpyro) for personal usecases.\r\n\r\n### Remember that this fork contains only conversation patch.\r\n\r\n# Requirements:\r\n ~~~python\r\n pyrogram>=2.0.69\r\n python>=3.9\r\n ~~~\r\n\r\n # Installation:\r\n```\r\npython -m pip install patchpyro\r\n```\r\n \r\n# Usage:\r\nImport `patchpyro` at least one time in your script, so you'll be able to use modified pyrogram in all files of the same proccess. \r\nExample:\r\n\r\n```python\r\n# config.py\r\nfrom patchpyro import listen # or import patchpyro.listen\r\nfrom pyrogram import Client\r\n\r\nmybot = Client(\"mysession\")\r\n```\r\n\r\n```python\r\n# any other .py\r\nfrom config import mybot\r\n# no need to import patchpyro again pyrogram is already monkeypatched globally (at the same proccess)\r\n```\r\n\r\n## `patchpyro.listen`\r\nJust import it, it will automatically do the monkeypatch and you'll get these new methods:\r\n\r\n- Available bound methods::\r\n  - `Chat.listen, User.listen`\r\n\r\n    - `await mybot.listen(chat_id, filters=None, timeout=30)`\r\n    - raises `asyncio.TimeoutError` if timeout (optional parameter)\r\n    - Awaits for a new message in the specified chat and returns it.\r\n    - You can pass Update Filters to the filters parameter just like you do for the update handlers.\r\n    - E.g. `filters=filters.photo & filters.bot`\r\n  - `Chat.ask, User.ask`\r\n\r\n    - `await mybot.ask(text, chat_id, filters=None, timeout=30)`\r\n    - Same of `.listen()` above, but sends a message before awaiting.\r\n    - You can pass custom parameters to its send_message() call. Check the example below.\r\n    \r\n  - `Chat.asker, User.asker`\r\n     - `await mybot.asker(chat_id, filters=None, timeout=36)` \r\n     - same as `.listen()` but `.asker()` returns `None` instead of raising `asyncio.TimeoutError`.\r\n     - Found useful in some cases for me, `.asker()` has a default timeout of 2 minutes. \r\n     - You can adjust it by passing as a argument. Refer the example code given below.\r\n\r\n# Examples:\r\n### For .asker():\r\n```python\r\n...\r\n    sendx = await client.send_message(chat_id, \"`Send me your name:`\")\r\n    answer = await client.asker(chat_id, filters=None, timeout=60)\r\n    if not answer: # `None` if timeout if no reply received.\r\n        return await sendx.reply_text(\"How long should I wait?, Eh! Bye!\")\r\n    await answer.reply_text(f\"{answer.text}, That's a cool name!\")\r\n...\r\n```\r\n### For .ask():\r\n```python\r\n...\r\n    answer = await client.ask(chat_id, '*Send me your name:*', parse_mode='Markdown')\r\n    await client.send_message(chat_id, f'Your name is: {answer.text}')\r\n...\r\n```\r\n\r\n\r\n### Copyright & License\r\nThis project may include snippets of Pyrogram code\r\n- Pyrogram - Telegram MTProto API Client Library for Python. Copyright (C) 2017-2022 Dan <<https://github.com/delivrance>>\r\n\r\nLicensed under the terms of the [GNU Lesser General Public License v3 or later (LGPLv3+)](COPYING.lesser)\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/adityaprasad502/patchpyro",
            "keywords": "",
            "license": "LGPLv3+",
            "maintainer": "",
            "maintainer_email": "",
            "name": "patchpyro",
            "package_url": "https://pypi.org/project/patchpyro/",
            "platform": null,
            "project_url": "https://pypi.org/project/patchpyro/",
            "project_urls": {
                "Homepage": "https://github.com/adityaprasad502/patchpyro"
            },
            "release_url": "https://pypi.org/project/patchpyro/2.0.1/",
            "requires_dist": [
                "pyrogram (>=2.0.69)"
            ],
            "requires_python": ">=3.9",
            "summary": "A modified pyromod by www.da.gd/aditya",
            "version": "2.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16223222,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6e82b7a4fb865f5e9893996d37eda71e",
                    "sha256": "fec6519c3643885db396b870e38a4a5085fe13c8563e1976ec61ac442b2684f9"
                },
                "downloads": -1,
                "filename": "patchpyro-2.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6e82b7a4fb865f5e9893996d37eda71e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 22845,
                "upload_time": "2022-12-27T10:32:09",
                "upload_time_iso_8601": "2022-12-27T10:32:09.673264Z",
                "url": "https://files.pythonhosted.org/packages/fa/31/ddf37ed933124c809b11cb849480e29994bc90e4304f113c3193efc85056/patchpyro-2.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b4e5d072120f5184055a6284e6229f66",
                    "sha256": "cd7846b67713a1a9b8da5e31535ae5f2cf9a989e4f2d9b7f2939b85ac4841da4"
                },
                "downloads": -1,
                "filename": "patchpyro-2.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b4e5d072120f5184055a6284e6229f66",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 18898,
                "upload_time": "2022-12-27T10:32:14",
                "upload_time_iso_8601": "2022-12-27T10:32:14.229486Z",
                "url": "https://files.pythonhosted.org/packages/5d/0d/d18afb2be200d8cb0c74fd23d816613aae83285a52b2aa30364cca972726/patchpyro-2.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}