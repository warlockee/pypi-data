{
    "0.1.4": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/invoke-ai/PyPatchMatch",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pypatchmatch",
            "package_url": "https://pypi.org/project/pypatchmatch/",
            "platform": null,
            "project_url": "https://pypi.org/project/pypatchmatch/",
            "project_urls": {
                "Homepage": "https://github.com/invoke-ai/PyPatchMatch"
            },
            "release_url": "https://pypi.org/project/pypatchmatch/0.1.4/",
            "requires_dist": [
                "numpy",
                "pillow",
                "tqdm"
            ],
            "requires_python": ">=3.9",
            "summary": "This library implements the PatchMatch based inpainting algorithm.",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16269418,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3d8380869f75bc779f8561e7cdff0f5f",
                    "sha256": "f676139096ebd30743b025221006a2602c551e000325bc00d857a2601871bac9"
                },
                "downloads": -1,
                "filename": "pypatchmatch-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3d8380869f75bc779f8561e7cdff0f5f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 18566,
                "upload_time": "2022-12-29T11:28:25",
                "upload_time_iso_8601": "2022-12-29T11:28:25.772074Z",
                "url": "https://files.pythonhosted.org/packages/c8/7d/05d662f6f46cf1ad6aea0ddefe133f8966d289efa2f5f576efcab9386d0b/pypatchmatch-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ac86414f09034c048fd131159fc9f26e",
                    "sha256": "ee699782ad1f6ed11e3d892de1aa52cef710e9ff2f30ddbd7e89f6d4388942ec"
                },
                "downloads": -1,
                "filename": "pypatchmatch-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "ac86414f09034c048fd131159fc9f26e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 16095,
                "upload_time": "2022-12-29T11:28:27",
                "upload_time_iso_8601": "2022-12-29T11:28:27.300115Z",
                "url": "https://files.pythonhosted.org/packages/b6/36/8b6ff5790e4d29ec6f98356288c6454c85f292df456c96997aef85ff3102/pypatchmatch-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.5": {
        "info": {
            "author": "",
            "author_email": "The InvokeAI Project <lincoln.stein@gmail.com>, Younesse ANDAM <younesse.andam@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# PatchMatch based Inpainting\nThis library implements the PatchMatch based inpainting algorithm. It provides both C++ and Python interfaces.\nThis implementation is heavily based on the implementation by Younesse ANDAM:\n(younesse-cv/PatchMatch)[https://github.com/younesse-cv/PatchMatch], with some bug fixes, and updates.\n\n## Usage\n\nYou need to first install OpenCV to compile the C++ libraries. Then, run `make` to compile the\nshared library `libpatchmatch.so`.\n\nFor Python users (example available at `examples/py_example.py`)\n\n```python\nimport patch_match\n\nif patch_match.patchmatch_available:\n    image = ...  # either a numpy ndarray or a PIL Image object.\n    mask = ...   # either a numpy ndarray or a PIL Image object.\n    result = patch_match.inpaint(image, mask, patch_size=3)\n```\n\nFor C++ users (examples available at `examples/cpp_example.cpp`)\n\n```cpp\n#include \"inpaint.h\"\n\nint main() {\n    cv::Mat image = ...\n    cv::Mat mask = ...\n\n    cv::Mat result = Inpainting(image, mask, 5).run();\n\n    return 0;\n}\n```\n\n\n## README and COPYRIGHT by Younesse ANDAM\n@Author: Younesse ANDAM\n\n@Contact: younesse.andam@gmail.com\n\nDescription: This project is a personal implementation of an algorithm called PATCHMATCH that restores missing areas in an image.\nThe algorithm is presented in the following paper\n PatchMatch  A Randomized Correspondence Algorithm\n               for Structural Image Editing\n   by C.Barnes,E.Shechtman,A.Finkelstein and Dan B.Goldman\n   ACM Transactions on Graphics (Proc. SIGGRAPH), vol.28, aug-2009\n\n For more information please refer to\n http://www.cs.princeton.edu/gfx/pubs/Barnes_2009_PAR/index.php\n\nCopyright (c) 2010-2011\n\n\n## Requirements\n\nTo run the project you need to install Opencv library and link it to your project.\nOpencv can be download it here\nhttp://opencv.org/downloads.html\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT License  Copyright (c) 2020 Jiayuan Mao  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pypatchmatch",
            "package_url": "https://pypi.org/project/pypatchmatch/",
            "platform": null,
            "project_url": "https://pypi.org/project/pypatchmatch/",
            "project_urls": {
                "Source Code": "https://github.com/invoke-ai/PyPatchMatch"
            },
            "release_url": "https://pypi.org/project/pypatchmatch/0.1.5/",
            "requires_dist": [
                "numpy",
                "pillow",
                "tqdm"
            ],
            "requires_python": ">=3.9",
            "summary": "This library implements the PatchMatch based inpainting algorithm.",
            "version": "0.1.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16269418,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a71c829faf94158d7cf50c9fdade1d6d",
                    "sha256": "70264cf7493fc96c57db8677bf79666270028fc5d5c27e3bc22db1fede2eee04"
                },
                "downloads": -1,
                "filename": "pypatchmatch-0.1.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a71c829faf94158d7cf50c9fdade1d6d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 19296,
                "upload_time": "2023-01-01T00:23:17",
                "upload_time_iso_8601": "2023-01-01T00:23:17.469770Z",
                "url": "https://files.pythonhosted.org/packages/81/2d/eec2ceb67f7f9ef1488319573c9035124aabb851394a931104439c99cc18/pypatchmatch-0.1.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "81eb4a22e53b88e93e7c7af0a5fd7ce4",
                    "sha256": "9ac72ce0873dc0eab85d61b59aff1ab2d51808f30c55bfae9383e033ec9ef512"
                },
                "downloads": -1,
                "filename": "pypatchmatch-0.1.5.tar.gz",
                "has_sig": false,
                "md5_digest": "81eb4a22e53b88e93e7c7af0a5fd7ce4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 17023,
                "upload_time": "2023-01-01T00:23:18",
                "upload_time_iso_8601": "2023-01-01T00:23:18.926861Z",
                "url": "https://files.pythonhosted.org/packages/26/1e/0214197c319e9dc02dadaaeb3a3b0f3f7f572f25e527568effedd9035509/pypatchmatch-0.1.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}