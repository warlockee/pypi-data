{
    "0.1.0": {
        "info": {
            "author": "nahco314",
            "author_email": "nahco3_ta@yahoo.co.jp",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# type-yaml\n\nDescribes a yaml schema using Python types.\n\nSimple Python types such as `list[str]` or `dict[int, list[str]]` that allow yaml to verify that the type fits and parse values based on it.\n\n## Requirements\n- Python 3.8+\n- PyYAML\n\n## Install\n```commandline\npip install type-yaml\n```\n\n## Features:\n- `int`\n- `float`\n- `str`\n- `bool`\n- `list` / `typing.List`\n- `dict` / `typing.Dict`\n- `set` / `typing.Set`\n- `tuple` / `typing.Tuple`\n- `dataclass`\n  - default values and default-factory\n  - special notation in yaml with metadata\n- `operator |`/ `typing.Union`\n- `typing.Any`\n- lazy evaluation by string representation of type\n\n## Examples\n\n```python\nfrom dataclasses import dataclass\n\nfrom type_yaml import load\n\n\n@dataclass\nclass Point:\n    x: int\n    y: int\n\n\nprint(load(list[Point], open(\"points.yaml\")))\n# >>> [Point(x=1, y=2), Point(x=3, y=4)]\n```\n\n```yaml\n# points.yaml\n-\n  x: 1\n  y: 2\n-\n  x: 3\n  y: 4\n```\n\n## Usage\n\nFunctions such as `load`, `loads`, `dump`, and `dumps` can be imported from type_yaml. The details of each are as follows.\n\n- `load(type, stream, **kwargs)`\n  - Load a yaml file and parse it into a Python object.\n  - `type` is a type that can be parsed by type_yaml.\n  - `stream` is a text stream. e.g. `open(\"file.yaml\")`\n  - options\n    - `loader`: yaml loader of PyYAML. default: `yaml.SafeLoader`\n    - `true_strings`: list of strings that are parsed as `True`. default: `(\"true\", \"yes\", \"on\", \"1\")`\n    - `false_strings`: list of strings that are parsed as `False`. default: `(\"false\", \"no\", \"off\", \"0\")`\n    - `type_name_map`, `globalns`, `localns`: a dictionary or namespace of variable names is given to allow interpretation of the string representation of the type\n- `loads(type, string, **kwargs)`\n  - Load a yaml string and parse it into a Python object.\n  - `type` is a type that can be parsed by type_yaml.\n  - `string` is a yaml string.\n  - options is same as `load`\n- `dump(value, stream, **kwargs)`\n  - Dump a Python object to a yaml file.\n  - `value` is a Python object that can be parsed by type_yaml.\n  - `stream` is a text stream. e.g. `open(\"file.yaml\")`\n  - options\n    - `dumper`: yaml dumper of PyYAML. default: `type_yaml.yaml_interpreter.RealYamlDumper\n- `dumps(value, **kwargs)`\n  - Dump a Python object to a yaml string.\n  - `value` is a Python object that can be parsed by type_yaml.\n  - options is same as `dump`\n\n## Other\n\nThe license is the MIT License.\n\nIf you have any bugs, mistakes, feature suggestions, etc., issues and pull requests are welcome.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "type-yaml",
            "package_url": "https://pypi.org/project/type-yaml/",
            "platform": null,
            "project_url": "https://pypi.org/project/type-yaml/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/type-yaml/0.1.0/",
            "requires_dist": [
                "pyyaml (>=6.0,<7.0)"
            ],
            "requires_python": ">=3.8.1,<4.0.0",
            "summary": "",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16248411,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "19d5de844574a743c4065538e3e3cce3",
                    "sha256": "16a361c8e7ca2bac890029d9e4753b561298a00ea18e3dc212e9f6e71fbfa441"
                },
                "downloads": -1,
                "filename": "type_yaml-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "19d5de844574a743c4065538e3e3cce3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8.1,<4.0.0",
                "size": 11603,
                "upload_time": "2022-12-29T11:57:44",
                "upload_time_iso_8601": "2022-12-29T11:57:44.646271Z",
                "url": "https://files.pythonhosted.org/packages/dd/a8/ad5a8dd9d252137d05d0390eb29928fc55b0848a1cf08b57a17ed500aff9/type_yaml-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e170c78c91ed47c19fd51db057a0a7c5",
                    "sha256": "638f29b2197cc182bd71e4f0f1a0384b2916fc960f281d30bf7c92add0f4948d"
                },
                "downloads": -1,
                "filename": "type_yaml-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e170c78c91ed47c19fd51db057a0a7c5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8.1,<4.0.0",
                "size": 11123,
                "upload_time": "2022-12-29T11:57:46",
                "upload_time_iso_8601": "2022-12-29T11:57:46.649629Z",
                "url": "https://files.pythonhosted.org/packages/e3/e3/f99624042a62f331509de62e66a8d390c77649fa0b6984b1bc622702cbc8/type_yaml-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}