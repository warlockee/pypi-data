{
    "1.0.5.1.1": {
        "info": {
            "author": "Kentaro Wada",
            "author_email": "www.kentaro.wada@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "<h1 align=\"center\">\n  <img src=\"labelme/icons/icon.png\"><br/>labelme\n</h1>\n\n<h4 align=\"center\">\n  Image Polygonal Annotation with Python\n</h4>\n\n<div align=\"center\">\n  <a href=\"https://pypi.python.org/pypi/labelme\"><img src=\"https://img.shields.io/pypi/v/labelme.svg\"></a>\n  <a href=\"https://pypi.org/project/labelme\"><img src=\"https://img.shields.io/pypi/pyversions/labelme.svg\"></a>\n  <a href=\"https://github.com/wkentaro/labelme/actions\"><img src=\"https://github.com/wkentaro/labelme/workflows/ci/badge.svg?branch=main&event=push\"></a>\n</div>\n\n<div align=\"center\">\n  <a href=\"#installation\"><b>Installation</b></a> |\n  <a href=\"#usage\"><b>Usage</b></a> |\n  <a href=\"https://github.com/wkentaro/labelme/tree/main/examples/tutorial#tutorial-single-image-example\"><b>Tutorial</b></a> |\n  <a href=\"https://github.com/wkentaro/labelme/tree/main/examples\"><b>Examples</b></a> |\n  <a href=\"https://github.com/wkentaro/labelme/discussions\"><b>Discussions</b></a> |\n  <a href=\"https://www.youtube.com/playlist?list=PLI6LvFw0iflh3o33YYnVIfOpaO0hc5Dzw\"><b>Youtube FAQ</b></a>\n</div>\n\n<br/>\n\n<div align=\"center\">\n  <img src=\"examples/instance_segmentation/.readme/annotation.jpg\" width=\"70%\">\n</div>\n\n## Description\n\nLabelme is a graphical image annotation tool inspired by <http://labelme.csail.mit.edu>.  \nIt is written in Python and uses Qt for its graphical interface.\n\n<img src=\"examples/instance_segmentation/data_dataset_voc/JPEGImages/2011_000006.jpg\" width=\"19%\" /> <img src=\"examples/instance_segmentation/data_dataset_voc/SegmentationClassPNG/2011_000006.png\" width=\"19%\" /> <img src=\"examples/instance_segmentation/data_dataset_voc/SegmentationClassVisualization/2011_000006.jpg\" width=\"19%\" /> <img src=\"examples/instance_segmentation/data_dataset_voc/SegmentationObjectPNG/2011_000006.png\" width=\"19%\" /> <img src=\"examples/instance_segmentation/data_dataset_voc/SegmentationObjectVisualization/2011_000006.jpg\" width=\"19%\" />  \n<i>VOC dataset example of instance segmentation.</i>\n\n<img src=\"examples/semantic_segmentation/.readme/annotation.jpg\" width=\"30%\" /> <img src=\"examples/bbox_detection/.readme/annotation.jpg\" width=\"30%\" /> <img src=\"examples/classification/.readme/annotation_cat.jpg\" width=\"35%\" />  \n<i>Other examples (semantic segmentation, bbox detection, and classification).</i>\n\n<img src=\"https://user-images.githubusercontent.com/4310419/47907116-85667800-de82-11e8-83d0-b9f4eb33268f.gif\" width=\"30%\" /> <img src=\"https://user-images.githubusercontent.com/4310419/47922172-57972880-deae-11e8-84f8-e4324a7c856a.gif\" width=\"30%\" /> <img src=\"https://user-images.githubusercontent.com/14256482/46932075-92145f00-d080-11e8-8d09-2162070ae57c.png\" width=\"32%\" />  \n<i>Various primitives (polygon, rectangle, circle, line, and point).</i>\n\n\n## Features\n\n- [x] Image annotation for polygon, rectangle, circle, line and point. ([tutorial](examples/tutorial))\n- [x] Image flag annotation for classification and cleaning. ([#166](https://github.com/wkentaro/labelme/pull/166))\n- [x] Video annotation. ([video annotation](examples/video_annotation))\n- [x] GUI customization (predefined labels / flags, auto-saving, label validation, etc). ([#144](https://github.com/wkentaro/labelme/pull/144))\n- [x] Exporting VOC-format dataset for semantic/instance segmentation. ([semantic segmentation](examples/semantic_segmentation), [instance segmentation](examples/instance_segmentation))\n- [x] Exporting COCO-format dataset for instance segmentation. ([instance segmentation](examples/instance_segmentation))\n\n\n\n## Requirements\n\n- Ubuntu / macOS / Windows\n- Python3\n- [PyQt5 / PySide2](http://www.riverbankcomputing.co.uk/software/pyqt/intro)\n\n\n## Installation\n\nThere are options:\n\n- Platform agnostic installation: [Anaconda](#anaconda)\n- Platform specific installation: [Ubuntu](#ubuntu), [macOS](#macos), [Windows](#windows)\n- Pre-build binaries from [the release section](https://github.com/wkentaro/labelme/releases)\n\n### Anaconda\n\nYou need install [Anaconda](https://www.continuum.io/downloads), then run below:\n\n```bash\n# python3\nconda create --name=labelme python=3\nsource activate labelme\n# conda install -c conda-forge pyside2\n# conda install pyqt\n# pip install pyqt5  # pyqt5 can be installed via pip on python3\npip install labelme\n# or you can install everything by conda command\n# conda install labelme -c conda-forge\n```\n\n### Ubuntu\n\n```bash\nsudo apt-get install labelme\n\n# or\nsudo pip3 install labelme\n\n# or install standalone executable from:\n# https://github.com/wkentaro/labelme/releases\n```\n\n### macOS\n\n```bash\nbrew install pyqt  # maybe pyqt5\npip install labelme\n\n# or\nbrew install wkentaro/labelme/labelme  # command line interface\n# brew install --cask wkentaro/labelme/labelme  # app\n\n# or install standalone executable/app from:\n# https://github.com/wkentaro/labelme/releases\n```\n\n### Windows\n\nInstall [Anaconda](https://www.continuum.io/downloads), then in an Anaconda Prompt run:\n\n```bash\nconda create --name=labelme python=3\nconda activate labelme\npip install labelme\n\n# or install standalone executable/app from:\n# https://github.com/wkentaro/labelme/releases\n```\n\n\n## Usage\n\nRun `labelme --help` for detail.  \nThe annotations are saved as a [JSON](http://www.json.org/) file.\n\n```bash\nlabelme  # just open gui\n\n# tutorial (single image example)\ncd examples/tutorial\nlabelme apc2016_obj3.jpg  # specify image file\nlabelme apc2016_obj3.jpg -O apc2016_obj3.json  # close window after the save\nlabelme apc2016_obj3.jpg --nodata  # not include image data but relative image path in JSON file\nlabelme apc2016_obj3.jpg \\\n  --labels highland_6539_self_stick_notes,mead_index_cards,kong_air_dog_squeakair_tennis_ball  # specify label list\n\n# semantic segmentation example\ncd examples/semantic_segmentation\nlabelme data_annotated/  # Open directory to annotate all images in it\nlabelme data_annotated/ --labels labels.txt  # specify label list with a file\n```\n\nFor more advanced usage, please refer to the examples:\n\n* [Tutorial (Single Image Example)](examples/tutorial)\n* [Semantic Segmentation Example](examples/semantic_segmentation)\n* [Instance Segmentation Example](examples/instance_segmentation)\n* [Video Annotation Example](examples/video_annotation)\n\n### Command Line Arguments\n- `--output` specifies the location that annotations will be written to. If the location ends with .json, a single annotation will be written to this file. Only one image can be annotated if a location is specified with .json. If the location does not end with .json, the program will assume it is a directory. Annotations will be stored in this directory with a name that corresponds to the image that the annotation was made on.\n- The first time you run labelme, it will create a config file in `~/.labelmerc`. You can edit this file and the changes will be applied the next time that you launch labelme. If you would prefer to use a config file from another location, you can specify this file with the `--config` flag.\n- Without the `--nosortlabels` flag, the program will list labels in alphabetical order. When the program is run with this flag, it will display labels in the order that they are provided.\n- Flags are assigned to an entire image. [Example](examples/classification)\n- Labels are assigned to a single polygon. [Example](examples/bbox_detection)\n\n## FAQ\n\n- **How to convert JSON file to numpy array?** See [examples/tutorial](examples/tutorial#convert-to-dataset).\n- **How to load label PNG file?** See [examples/tutorial](examples/tutorial#how-to-load-label-png-file).\n- **How to get annotations for semantic segmentation?** See [examples/semantic_segmentation](examples/semantic_segmentation).\n- **How to get annotations for instance segmentation?** See [examples/instance_segmentation](examples/instance_segmentation).\n\n\n## Developing\n\n```bash\ngit clone https://github.com/wkentaro/labelme.git\ncd labelme\n\n# Install anaconda3 and labelme\ncurl -L https://github.com/wkentaro/dotfiles/raw/main/local/bin/install_anaconda3.sh | bash -s .\nsource .anaconda3/bin/activate\npip install -e .\n```\n\n\n## How to build standalone executable\n\nBelow shows how to build the standalone executable on macOS, Linux and Windows.  \n\n```bash\n# Setup conda\nconda create --name labelme python=3.9\nconda activate labelme\n\n# Build the standalone executable\npip install .\npip install 'matplotlib<3.3.1'\npip install pyinstaller\npyinstaller labelme.spec\ndist/labelme --version\n```\n\n\n## How to contribute\n\nMake sure below test passes on your environment.  \nSee `.github/workflows/ci.yml` for more detail.\n\n```bash\npip install -r requirements-dev.txt\n\nflake8 .\nblack --line-length 79 --check labelme/\nMPLBACKEND='agg' pytest -vsx tests/\n```\n\n\n## Acknowledgement\n\nThis repo is the fork of [mpitid/pylabelme](https://github.com/mpitid/pylabelme).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/wkentaro/labelme",
            "keywords": "Image Annotation,Machine Learning",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "labelmeAMIT",
            "package_url": "https://pypi.org/project/labelmeAMIT/",
            "platform": null,
            "project_url": "https://pypi.org/project/labelmeAMIT/",
            "project_urls": {
                "Homepage": "https://github.com/wkentaro/labelme"
            },
            "release_url": "https://pypi.org/project/labelmeAMIT/1.0.5.1.1/",
            "requires_dist": [
                "imgviz (>=0.11)",
                "matplotlib",
                "natsort (>=7.1.0)",
                "numpy",
                "Pillow (>=2.8)",
                "PyYAML",
                "qtpy (!=1.11.2)",
                "termcolor"
            ],
            "requires_python": "",
            "summary": "Image Polygonal Annotation with Python",
            "version": "1.0.5.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16203502,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32888863b86dc56be82c8ca3c387b4d7",
                    "sha256": "8d3ca4e6255ff4fbfabbf1f81ac7a727341368a22755459a3ddce2db7cbba429"
                },
                "downloads": -1,
                "filename": "labelmeAMIT-1.0.5.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "32888863b86dc56be82c8ca3c387b4d7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 1466691,
                "upload_time": "2022-12-24T05:41:39",
                "upload_time_iso_8601": "2022-12-24T05:41:39.108225Z",
                "url": "https://files.pythonhosted.org/packages/da/94/5a10e42c5965285a381c9ef956f36c5a32fa83a796d127fba0911caddada/labelmeAMIT-1.0.5.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3701cd310eb1c2e8882a440de4470156",
                    "sha256": "bd11a2c571a3dbb0d1cc3f6bc91bf90e42b68c0b849f06e4b2b0fb1eb24e9a6d"
                },
                "downloads": -1,
                "filename": "labelmeAMIT-1.0.5.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "3701cd310eb1c2e8882a440de4470156",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 1464698,
                "upload_time": "2022-12-24T05:41:48",
                "upload_time_iso_8601": "2022-12-24T05:41:48.380479Z",
                "url": "https://files.pythonhosted.org/packages/22/8c/f043b1251b25340b2ee50755e9f0f09811e0d2504e6f5a6a803b845c5874/labelmeAMIT-1.0.5.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}