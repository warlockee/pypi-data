{
    "0.0.3": {
        "info": {
            "author": "TotvsLabs",
            "author_email": "info@totvslabs.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/totvslabs/assistant-fulfillment-helper",
            "keywords": "assistant fulfillment helper carol totvs carolina carolapp",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "assistant-fulfillment-helper",
            "package_url": "https://pypi.org/project/assistant-fulfillment-helper/",
            "platform": null,
            "project_url": "https://pypi.org/project/assistant-fulfillment-helper/",
            "project_urls": {
                "Homepage": "https://github.com/totvslabs/assistant-fulfillment-helper"
            },
            "release_url": "https://pypi.org/project/assistant-fulfillment-helper/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Assistant Fulfillment Helper Server",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16218622,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ad53c11d2b04a610d56acdbccfbd913d",
                    "sha256": "e7f359323cda92633f7987fb778c608c5a8a9ea07292faf15bd8c4e44edf8103"
                },
                "downloads": -1,
                "filename": "assistant-fulfillment-helper-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ad53c11d2b04a610d56acdbccfbd913d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 11482,
                "upload_time": "2022-12-23T23:11:09",
                "upload_time_iso_8601": "2022-12-23T23:11:09.701263Z",
                "url": "https://files.pythonhosted.org/packages/4b/39/782ea082510725546fad67d2abed9e1f0bedb53c07fbae8b0967ac9167fb/assistant-fulfillment-helper-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "TotvsLabs",
            "author_email": "info@totvslabs.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Assistant Fulfillment Helper\n## O que \u00e9?\nEsta biblioteta tem como objetivo facilitar a cria\u00e7\u00e3o de *webhooks* para os n\u00f3s de inten\u00e7\u00e3o da [Assistente TOTVS](https://produtos.totvs.com/ficha-tecnica/tudo-sobre-o-totvs-carol-assistente/). Com poucas linhas de c\u00f3digo, \u00e9 possivel criar uma regra de neg\u00f3cio customizada em sua propria estrutura de servidor.\n\n## Pr\u00e9-requisitos:\n- [>= Python 3.7](https://www.python.org/downloads/)\n\n## Por onde come\u00e7ar?\nCrie um projeto novo e instale o m\u00f3dulo usando PyPI:\n\n```sh\npip install assistant-fulfillment-helper\n```\n\nImporte e instancie a classe ``FulfillmentHelper`` para poder definir sua pr\u00f3pria regra de neg\u00f3cio. \n\n```python\nfh = FulfillmentHelper()\nfh.start() # Inicia um servidor local\n```\n\nO c\u00f3digo acima ir\u00e1 instanciar o m\u00f3dulo e servir\u00e1 um Webhook pronto para receber as requisi\u00e7\u00f5es dos seus n\u00f3s de inten\u00e7\u00e3o da Assistente.\n\n## Definindo uma Inten\u00e7\u00e3o\nPara definir uma inten\u00e7\u00e3o, basta chamar o m\u00e9todo ``registerIntent()`` da classe instanciada ``FulfillmentHelper()``. Por exemplo:\n\n```python\nfh = FulfillmentHelper()\n\nfh.registerIntent(\n\tcallback = my_method,\n\twebhook_token = '{token do webhook aqui}',\n\tnode_name = '{node do n\u00f3 de inten\u00e7\u00e3o}'\n)\n\nfh.start()\n```\n\n### registerIntent()\nO m\u00e9todo ``registerIntent()`` definir\u00e1 o callback pra cada inten\u00e7\u00e3o em uma lista de inten\u00e7\u00f5es. Ser\u00e1 efetuado uma chamada para o m\u00e9todo declarado como callback toda a vez que o Webhook receber uma chamada vinda de um n\u00f3 da Assistente.\n\u00c9 poss\u00edvel registrar quantos callback de inten\u00e7\u00f5es forem necess\u00e1rios, mas apenas um callback \u00e9 permitido para cada n\u00f3.\n\n**Parametros:**\n| Par\u00e2metro | Obrigat\u00f3rio? | Tipo | Descri\u00e7\u00e3o | \n|-----------|--------------|------|-----------|\n| ``callback`` | Sim | ``Method`` | M\u00e9todo que ser\u00e1 invocado quando o Webhook receber uma chamada desse n\u00f3 |\n| ``webhook_token`` | Sim | ``Str`` | Token disponibilizado pela Assistente na configura\u00e7\u00e3o do N\u00f3 de Inten\u00e7\u00e3o |\n| ``node_name`` | Sim | ``Str`` | Nome do N\u00f3 de Inten\u00e7\u00e3o cadastrado na Assistente |\n\n## Criando um callback\nNa chamada do callback, ser\u00e1 passado uma vari\u00e1vel do tipo ``Dict`` com alguns argumentos que poder\u00e3o ser utilizados na regra de neg\u00f3cio como quiser. \nExemplo de um m\u00e9todo para callback de um N\u00f3 de Inten\u00e7\u00e3o:\n```python\ndef my_method(params):\n    session = params.get('sessionId')\n    message = f\"Ol\u00e1 Usu\u00e1rio, nosso id de sess\u00e3o \u00e9: {session}\"\n    \n    return FulfillmentHelperResponse(\n        message = message\n    )\n```\n\nOs parametros passados na chamada do callback s\u00e3o:\n\n| Par\u00e2metro | Tipo | Descri\u00e7\u00e3o |\n|-----------|------|-----------|\n| intent_name | ``Str`` | Nome do n\u00f3 sendo processado |\n| parameters | ``Dict`` | Todos os parametros desse contexto de conversa |\n| sessionLog | ``List`` | Lista de ID de sess\u00f5es at\u00e9 esse ponto da conversa |\n| namedQueries | ``Dict`` | Resultados da Named Query (se houver) |\n| query | ``Str`` | Query executada (se houver) |\n| language | ``Str`` | Idioma da conversa |\n| carolOrganization | ``Str`` | Nome da Organiza\u00e7\u00e3o |\n| carolEnvironment | ``Str`` | Nome do Ambiente |\n| carolOrganizationId | ``Str`` | Id da Organiza\u00e7\u00e3o |\n| carolEnvironmentId | ``Str`` | Id do Ambiente |\n| sessionId | ``Str`` | Id da sess\u00e3o da conversa atual |\n| isProduction | ``Bool`` | Informa se a convesa est\u00e1 acontecendo em Produ\u00e7\u00e3o ou Desenvolvimento |\n| channelName | ``Str`` | Nome do canal por onde a mensagem chegou |\n\n### Retorno do Callback \nO metodo de callback deve retornar uma classe do tipo ``FulfillmentHelperResponse``, como no exemplo acima. Essa classe possui os seguintes atributos para retorno:\n\n| Par\u00e2metro | Obrigat\u00f3rio? | Tipo | Descri\u00e7\u00e3o | \n|-----------|--------------|------|-----------|\n| ``message`` | Sim | ``Str`` | Mensagem que ser\u00e1 retornada na conversa |\n| ``short_message`` | N\u00e3o | ``Str`` | Mensagem curta de retorno |\n| ``jump_to`` | N\u00e3o | ``Str`` | Nome do n\u00f3 para o qual a conversa ser\u00e1 direcionada |\n| ``options`` | N\u00e3o | ``List[Str]`` | Lista de op\u00e7\u00f5es pr\u00e9-definidas que aparecer\u00e3o como bot\u00f5es na resposta |\n| ``logout`` | N\u00e3o | ``Bool`` | Destr\u00f3i a sess\u00e3o de usu\u00e1rio na conversa |\n| ``parameters`` | N\u00e3o | ``Dict`` | Parametros que ser\u00e3o adicionados no contexto da conversa |\n\nExemplo de uso:\n```python\ndef callback_boas_vindas(params):\n    message = f\"Ol\u00e1, o que deseja fazer agora?\"\n    \n    return FulfillmentHelperResponse(\n        message = message,\n\t\tshort_message = \"Boas vindas\",\n\t\tjump_to = \"Pedidos\",\n\t\toptions = [\n\t\t\t\"Criar Pedido\", \n\t\t\t\"Consultar Pedido\"\n\t\t\t\"Cancelar Pedido\"\n\t\t],\n\t\tlogout = True,\n\t\tparameters = { 'onboarding' : True }\n    )\n```\n\n## Iniciando um servidor local\nO m\u00e9todo ``start()`` \u00e9 responsavel por iniciar uma servidor local e deixar pronto para receber requisi\u00e7\u00f5es como um Webhook. O servidor local pode ser configurado passando algumas propriedados no momento da chamada. Por exemplo:\n\n```python\nfh = FulfillmentHelper()\n\nfh.start(\n\tdebug = True\n)\n```\n\nAs configura\u00e7\u00f5es customiz\u00e1veis para o servidor local s\u00e3o:\n\n| Par\u00e2metro | Obrigat\u00f3rio? | Tipo | Descri\u00e7\u00e3o | \n|-----------|--------------|------|-----------|\n| ``debug`` | N\u00e3o | ``Bool`` | O Debug ativo habilita verbosidade e reinicia o servidor em cada altera\u00e7\u00e3o de c\u00f3digo |\n| ``host`` | N\u00e3o | ``Str`` | Nome ou IP do host local |\n| ``port`` | N\u00e3o | ``Int`` | Porta do host local |\n\n\n## Exce\u00e7\u00f5es \nOs poss\u00edveis erros s\u00e3o tratados pelas excess\u00f5es. Aqui est\u00e1 a lista das exce\u00e7\u00f5es existentes:\n\n\n| Exce\u00e7\u00e3o | Problema | \n|-----------|--------|\n| ``DuplicatedIntentNodeException()`` |  Foi tentado adicionar dois metodos de callback para o mesmo N\u00f3 de Inten\u00e7\u00e3o |\n| ``IntentEmptyParamException()`` | Foi tentado registrar um callback de Inten\u00e7\u00e3o com algum par\u00e2metro obrigat\u00f3rio vazio |\n| ``IntentMissingParamException()`` | Foi tentado registrar um callback de Inten\u00e7\u00e3o com algum par\u00e2metro faltando |\n| ``IntentInvalidCallbackException()`` | O m\u00e9todo passado como Callback n\u00e3o pode ser invocado (*is not callable*) |\n| ``IntentResponseInstanceException()`` | O Callback invocado n\u00e3o retornou a classe de resposta esperada ( ``FulfillmentHelperResponse()``) |\n\n## Executando localmente como DEV:\n> Dica: Ao invocar o metodo ``start()`` habilite o Debug, pra um desenvolvimento mais r\u00e1pido.\n\nAo iniciar o webhook local, ser\u00e1 necessario disponibilizar a aplica\u00e7\u00e3o para fora da sua rede local. Para isso recomendamos a utiliza\u00e7\u00e3o de algum software de proxy local, como por exemplo o [ngrok](https://ngrok.com/download). Ap\u00f3s instala\u00e7\u00e3o, execute o comando abaixo em seu terminal para obter a URL p\u00fablica da sua aplica\u00e7\u00e3o. Essa URL poder\u00e1 ser adicionada como WebHook nas configura\u00e7\u00f5es dos seus n\u00f3s na Assistente para um teste local.\n\n```sh\nngrok http http://127.0.0.1:5052 \n```\n> NOTA: Informe o host e porta definida na inicialiaza\u00e7\u00e3o do servidor WebHook.\n\n## Licen\u00e7a\nMIT (LICENSE)",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/totvslabs/assistant-fulfillment-helper",
            "keywords": "assistant fulfillment helper carol totvs carolina carolapp",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "assistant-fulfillment-helper",
            "package_url": "https://pypi.org/project/assistant-fulfillment-helper/",
            "platform": null,
            "project_url": "https://pypi.org/project/assistant-fulfillment-helper/",
            "project_urls": {
                "Homepage": "https://github.com/totvslabs/assistant-fulfillment-helper"
            },
            "release_url": "https://pypi.org/project/assistant-fulfillment-helper/0.0.4/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Assistant Fulfillment Helper Server",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16218622,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0e55cfe52536361e6686c3351e851547",
                    "sha256": "beefb0207d6f6199f8dfd8dec1c48fa190d82b6bb944d95dd20884f93315feb2"
                },
                "downloads": -1,
                "filename": "assistant-fulfillment-helper-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "0e55cfe52536361e6686c3351e851547",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 12353,
                "upload_time": "2022-12-26T22:25:42",
                "upload_time_iso_8601": "2022-12-26T22:25:42.659773Z",
                "url": "https://files.pythonhosted.org/packages/72/28/67a0cc1543010800390861352583928ed23ae9c5f4fc67473eb437f33817/assistant-fulfillment-helper-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}