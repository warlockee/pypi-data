{
    "0.0.1": {
        "info": {
            "author": "Jason Duong",
            "author_email": "my.toe.ben@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "![Build Status](https://github.com/duong-jason/mpilearn/workflows/Unit%20Tests/badge.svg)\n![Build Status](https://github.com/duong-jason/mpilearn/workflows/Lint/badge.svg)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![linting: pylint](https://img.shields.io/badge/linting-pylint-yellowgreen)](https://github.com/PyCQA/pylint)\n\n\n# mpitree\n\nA Parallel Decision Tree implementation using MPI *(Message Passing Interface)*\n\n## Installation\n\n```bash\ngit clone https://github.com/duong-jason/mpitree.git\ncd mpitree\n```\n\n## Example\n\n```python\nfrom mpi4py import MPI\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\n\nfrom mpitree.parallel_decision_tree import (\n    ParallelDecisionTreeClassifier,\n    world_comm,\n    world_rank,\n)\n\nif __name__ == \"__main__\":\n    iris = load_iris(as_frame=True)\n\n    X_train, X_test, y_train, y_test = train_test_split(\n        iris.data, iris.target, test_size=0.20, random_state=42\n    )\n\n    world_comm.Barrier()\n    start_time = MPI.Wtime()\n\n    pdt = ParallelDecisionTreeClassifier(criterion={'max_depth': 3})\n    pdt.fit(X_train, y_train)\n\n    score = pdt.score(X_test, y_test)\n\n    end_time = MPI.Wtime()\n    if not world_rank:\n        print(pdt)\n        print(f\"Accuracy: {score:.2%}\")\n        print(f\"Parallel Execution Time: {end_time - start_time:.3f}s\")\n```\n\n```bash\n>>> mpiexec -n 5 python3 main.py\n\npetal length (cm) (< 2.45)\n        0\n        petal length (cm) (< 4.75)\n                petal width (cm) (< 1.65)\n                        1\n                        2\n                petal width (cm) (< 1.75)\n                        2\n                        2\nAccuracy: 96.67%\nParallel Execution Time: 1.895s\n```\n\n## Unit Tests\n```\npython3 -m pytest\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/duong-jason/mpitree",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mpitree",
            "package_url": "https://pypi.org/project/mpitree/",
            "platform": null,
            "project_url": "https://pypi.org/project/mpitree/",
            "project_urls": {
                "Homepage": "https://github.com/duong-jason/mpitree"
            },
            "release_url": "https://pypi.org/project/mpitree/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "A Parallel Decision Tree implementation using MPI",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16233112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "22cb2043012393d503e13df690a952ce",
                    "sha256": "73f11cc02a4731b4c5f69c7283a8cc9c4d3d40355da628ec8e00b43c7f58365c"
                },
                "downloads": -1,
                "filename": "mpitree-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "22cb2043012393d503e13df690a952ce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 11322,
                "upload_time": "2022-12-27T23:22:32",
                "upload_time_iso_8601": "2022-12-27T23:22:32.735604Z",
                "url": "https://files.pythonhosted.org/packages/47/1e/2986a916cbacf3bfe1f473032a2277869a2b3cd22066904649306e4df65d/mpitree-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8ddf6d18b2b0efab8c8dc67f9848fdbb",
                    "sha256": "28435878062e34cbf7ee9d8967fb175bc870ec75688df0ce5b206d98ace3f6f8"
                },
                "downloads": -1,
                "filename": "mpitree-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8ddf6d18b2b0efab8c8dc67f9848fdbb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 10650,
                "upload_time": "2022-12-27T23:22:34",
                "upload_time_iso_8601": "2022-12-27T23:22:34.634310Z",
                "url": "https://files.pythonhosted.org/packages/6e/97/6787505350005498e39656a588269f88f1eac6164b0ad05a323de967a413/mpitree-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}