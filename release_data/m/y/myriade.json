{
    "0.1.0": {
        "info": {
            "author": "Max Halford",
            "author_email": "maxhalford25@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11"
            ],
            "description": "# myriad\n\nMulticlass classification with tens of thousands of classes\n\n## Usage\n\n## Datasets\n\n| Name | Function    | Size     | Samples | Features | Labels     | Multi-label    | Labels/sample |\n|:----:|:-----------:|:---------|:-------:|:--------:|:----------:|:--------------:|:-------------:|\n| DMOZ | `load_dmoz` | 614,8 MB | 394,756 | 833,484  | 36,372     | \u2713              | 1.02          |\n| Wikipedia (small) | `load_wiki_small` | 135,5 MB | 456,886 | 2,085,165  | 36,504     | \u2713              | 1.84          |\n| Wikipedia (large) | `load_wiki_large` | 1,01 GB | 2,365,436 | 2,085,167  | 325,056     | \u2713              | 3.26          |\n\nEach `load_*` function returns two arrays which contain the features and the target classes, respectively. In the multi-label case, the target array is 2D. The arrays are sparse when applicable.\n\n```py\n>>> from myriad import datasets\n\n>>> X, y = datasets.load_dmoz()\n>>> X\n\n>>> y\n\n```\n\nThe first time you call a `load_*` function, the data will be downloaded and saved into a `.svm` file that adheres to the [LIBSVM format convention](https://www.csie.ntu.edu.tw/~cjlin/libsvm/faq.html#/Q03:_Data_preparation). The loaders will restart from scratch if you interrupt them during their work.\n\nAll of the datasets are loaded in memory with the [`svmloader`](https://github.com/yoch/svmloader/) library. The latter is much faster than the [`load_svmlight_file`](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_svmlight_file.html) function from scikit-learn. However, when working repeatedly on the same dataset, it is recommended to wrap the dataset loader with [`joblib.Memory.cache`](https://joblib.readthedocs.io/en/latest/memory.html) to store a memmapped backup of the results of the first call. This enables near instantaneous loading for subsequent calls.\n\nYou can see where the datasets are stored as so:\n\n```py\n>>> datasets.get_data_home()\n\n```\n\n## Benchmarks\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "myriade",
            "package_url": "https://pypi.org/project/myriade/",
            "platform": null,
            "project_url": "https://pypi.org/project/myriade/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/myriade/0.1.0/",
            "requires_dist": [
                "scipy (>=1.9.3,<2.0.0)",
                "scikit-learn (>=1.2.0,<2.0.0)"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "Extreme multiclass and multi-label classification",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16274671,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6a6b2b6f1b81de78c0e0206888aaffee",
                    "sha256": "db6c8155523754296f54b3d10369c536f26499660f770bdc4d21baac565998cc"
                },
                "downloads": -1,
                "filename": "myriade-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6a6b2b6f1b81de78c0e0206888aaffee",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 10886,
                "upload_time": "2023-01-01T22:51:36",
                "upload_time_iso_8601": "2023-01-01T22:51:36.895113Z",
                "url": "https://files.pythonhosted.org/packages/c4/9d/37a3240bd1ce2e38c6361fcbc0f963537e4ca927f8d663af8e3e8c39bc1a/myriade-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "70af5f97184cd26719c0c32867487e04",
                    "sha256": "5f94cff099bb37234838480c4093e84f1975beb9ebff574615a8e9c06d61fe6b"
                },
                "downloads": -1,
                "filename": "myriade-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "70af5f97184cd26719c0c32867487e04",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 9727,
                "upload_time": "2023-01-01T22:51:38",
                "upload_time_iso_8601": "2023-01-01T22:51:38.931463Z",
                "url": "https://files.pythonhosted.org/packages/be/5b/305c8decc817a1e1f757d18c20baf8a6541039dfb4e7de4ec1de9cdc8500/myriade-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}