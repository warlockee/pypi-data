{
    "1.0.2": {
        "info": {
            "author": "Dan Bryce",
            "author_email": "dbryce@sift.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "funman",
            "package_url": "https://pypi.org/project/funman/",
            "platform": null,
            "project_url": "https://pypi.org/project/funman/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/funman/1.0.2/",
            "requires_dist": [
                "model2smtlib"
            ],
            "requires_python": "",
            "summary": "Functional Model Analysis Tool",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16177893,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d0a8d770d7f5f02ecde0a6b09e608376",
                    "sha256": "fcc5ab3d5991dd57a47bfd576e125e34d7734d5487ad3ccea7362b2f2e36aa82"
                },
                "downloads": -1,
                "filename": "funman-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d0a8d770d7f5f02ecde0a6b09e608376",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22077,
                "upload_time": "2022-10-31T20:41:13",
                "upload_time_iso_8601": "2022-10-31T20:41:13.299438Z",
                "url": "https://files.pythonhosted.org/packages/75/83/ef1fc3e74506cd8e62213e2e51dc087e19d4d974b5cbe7b1f3e5611829df/funman-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5d6a93e5f42e4b64c6d7bf87fe533778",
                    "sha256": "e9c886c66d76abe8abcee7da05a3265807f07215b98f974bbf4cbf3e6b96650d"
                },
                "downloads": -1,
                "filename": "funman-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "5d6a93e5f42e4b64c6d7bf87fe533778",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 24016,
                "upload_time": "2022-10-31T20:41:14",
                "upload_time_iso_8601": "2022-10-31T20:41:14.731202Z",
                "url": "https://files.pythonhosted.org/packages/ef/27/12a03d789ebe9c44647702f7922d7ad21da0fdabd9dffacba27482e499fb/funman-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "Dan Bryce",
            "author_email": "dbryce@sift.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "funman",
            "package_url": "https://pypi.org/project/funman/",
            "platform": null,
            "project_url": "https://pypi.org/project/funman/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/funman/1.1.0/",
            "requires_dist": [
                "model2smtlib"
            ],
            "requires_python": "",
            "summary": "Functional Model Analysis Tool",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16177893,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "972c3b3a1540f53248205c02270e622b",
                    "sha256": "9fb80657325a483359381856f1e02c62aaccde3067b2b8180744d15494be3ce3"
                },
                "downloads": -1,
                "filename": "funman-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "972c3b3a1540f53248205c02270e622b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22077,
                "upload_time": "2022-10-31T21:53:40",
                "upload_time_iso_8601": "2022-10-31T21:53:40.937953Z",
                "url": "https://files.pythonhosted.org/packages/e3/55/47449bfb01265a84fa887ecf4ed637889b5b536ac32403dfc18279fa19e1/funman-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "95e7e845f6c0cd01bd88dded19393672",
                    "sha256": "c40ac163d9fbe84f4dc8e6f9fce911cf23581f68d84d526eea6ca6fefabaeee4"
                },
                "downloads": -1,
                "filename": "funman-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "95e7e845f6c0cd01bd88dded19393672",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 24056,
                "upload_time": "2022-10-31T21:53:42",
                "upload_time_iso_8601": "2022-10-31T21:53:42.168344Z",
                "url": "https://files.pythonhosted.org/packages/1c/3d/9e32518cc8b0f0836945c6af29ce3c620c3615f6b52c5ce3c90d3d59c75c/funman-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.0": {
        "info": {
            "author": "Dan Bryce",
            "author_email": "dbryce@sift.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "funman",
            "package_url": "https://pypi.org/project/funman/",
            "platform": null,
            "project_url": "https://pypi.org/project/funman/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/funman/1.2.0/",
            "requires_dist": [
                "model2smtlib"
            ],
            "requires_python": "",
            "summary": "Functional Model Analysis Tool",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16177893,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0124a28769b16de9f490c4e5682c9df2",
                    "sha256": "ca3a11014b43f513073925c43c256ae93fcdfff209092ff73c9fbb097f183e95"
                },
                "downloads": -1,
                "filename": "funman-1.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0124a28769b16de9f490c4e5682c9df2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 30817,
                "upload_time": "2022-12-01T23:19:06",
                "upload_time_iso_8601": "2022-12-01T23:19:06.446752Z",
                "url": "https://files.pythonhosted.org/packages/5a/3f/f8ea72d88298596463508d86d1e8b7e8334b7ac702deb96fd8ad69a2fc7e/funman-1.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0a9cfebe8baae126371a223e0cec27a2",
                    "sha256": "0d34652ad0baa2a37b71dec2471e4b745a48f0b84fd5acaa522154c61e905b83"
                },
                "downloads": -1,
                "filename": "funman-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0a9cfebe8baae126371a223e0cec27a2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34380,
                "upload_time": "2022-12-01T23:19:08",
                "upload_time_iso_8601": "2022-12-01T23:19:08.386856Z",
                "url": "https://files.pythonhosted.org/packages/41/08/6624e0f74ad4322a3bbdfa086768677976240366ea2e9d6c286b0e59eac8/funman-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.1": {
        "info": {
            "author": "Dan Bryce",
            "author_email": "dbryce@sift.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# funman\n\nThe `funman` package implements multiple simulator model analysis methods.\nCurrent methods include:\n- Parameter Synthesis\n- Querying a Simulation\n\n## **Use cases**\n### **Compare Translated FN to Simulator**:\n\nThis use case involves the simulator and FUNMAN reasoning about the CHIME\nSIR model.\n\nIt first runs the query_simulator function which executes the input simulator\nfunction and evaluates the input query function using the simulation results.\nIn the example below this results in the run_CHIME_SIR simulator function and\nevaluating whether or not the number of infected crosses the provided threshold.\n\nIt then constructs an instance of the QueryableGromet class using the provided\nGroMEt file. This class constructs a model from the GroMEt file that can be\nasked to answer a query with that model. In the example below the provided\nGroMET file corresponds to the CHIME_SIR simulator. The query asks whether the\nnumber of infected at any time point exceeds a specified threshold.\n\nOnce each of these steps is executed the results are compared. The test will\nsucceed if the simulator and QueryableGromet class agree on the response to the\nquery.\n\n```python\ndef compare_against_CHIME_FN(gromet_path, infected_threshold):\n    # query the simulator\n    def does_not_cross_threshold(sim_results):\n        i = sim_results[2]\n        return all(i_t <= infected_threshold for i_t in i)\n    q_sim = does_not_cross_threshold(run_CHIME_SIR())\n\n    # query the gromet file\n    gromet = QueryableGromet.from_gromet_file(gromet_path)\n    q_gromet = gromet.query(f\"(forall ((t Int)) (<= (I t) {infected_threshold}))\")\n\n    # assert the both queries returned the same result\n    return  q_sim == q_gromet\n\n# example call\ngromet = \"CHIME_SIR_while_loop--Gromet-FN-auto.json\"\ninfected_threshold = 130\nassert compare_against_CHIME_FN(gromet, infected_threshold)\n```\n\n### **Compare Constant and Time-dependent Betas**:\n\nThis use case involves two formulations of the CHIME model:\n  - the original model where Beta is a epoch-dependent constant over three\n    epochs (i.e., a triple of parameters)\n  - a modified variant of the original model using a single constant Beta over\n    the entire simulation (akin to a single epoch).\n\nThese two formulations of the CHIME model are read in from GroMEt files into\ninstances of the QueryableGromet class. These models are asked to synthesize a\nparameter space based on a query. Note that this synthesis step is stubbed in\nthis example and a more representative example of parameter synthesis can be\nfound below. Once these parameter spaces are synthesized the example then\ncompares the models by determining that the respective spaces of feasible\nparameter values intersect.\n\n```python\ndef test_parameter_synthesis():\n  ############################ Prepare Models ####################################\n  # read in the gromet files\n  # GROMET_FILE_1 is the original GroMEt extracted from the simulator\n  # It sets N_p = 3 and n_days = 20, resulting in three epochs of 0, 20, and 20 days\n  gromet_org = QueryableGromet.from_gromet_file(GROMET_FILE_1)\n  # GROMET_FILE_2 modifes sets N_p = 2 and n_days = 40, resulting in one epoch of 40 days\n  gromet_sub = QueryableGromet.from_gromet_file(GROMET_FILE_2)\n  # Scenario query threshold\n  infected_threshold = 130\n\n  ############################ Evaluate Models ###################################\n  # some test query\n  query f\"(forall ((t Int)) (<= (I t) {infected_threshold}))\"\n  # get parameter space for the original (3 epochs)\n  ps_b1_b2_b3 = gromet_org.synthesize_parameters(query)\n  # get parameter space for the constant beta variant\n  ps_bc = gromet_sub.synthesize_parameters(query)\n\n  ############################ Compare Models ####################################\n  # construct special parameter space where parameters are equal\n  ps_eq = ParameterSpace.construct_all_equal(ps_b1_b2_b3)\n  # intersect the original parameter space with the ps_eq to get the\n  # valid parameter space where (b1 == b2 == b3)\n  ps = ParameterSpace.intersect(ps_b1_b2_b3, ps_eq)\n  # assert the parameters spaces for the original and the constant beta\n  # variant are the same\n  assert(ParameterSpace.compare(ps_bc, ps))\n```\n\n### **Compare Bi-Layer Model to Bi-Layer Simulator**:\n\nThis use case compares the simulator and FUNMAN reasoning about the CHIME\nSIR model.\n\nIt first runs the query_simulator function which executes the input simulator\nfunction and evaluates the input query function using the simulation results.\nIn the example below this results in the run_CHIME_SIR_BL simulator function and\nevaluating whether or not the number of infected crosses the provided threshold.\n\nIt then constructs an instance of the QueryableBilayer class using the provided\nbilayer file. This class constructs a model from the bilayer file that can be\nasked to answer a query with that model. In the example below the provided\nbilayer file corresponds to the CHIME_SIR simulator. The query asks whether the\nnumber of infected at any time point exceeds a specified threshold.\n\nOnce each of these steps is executed the results are compared. The test will\nsucceed if the simulator and QueryableBilayer class agree on the response to the\nquery.\n\n\n```python\ndef compare_against_CHIME_bilayer(bilayer_file, infected_threshold):\n    # query the simulator\n    def does_not_cross_threshold(sim_results):\n        i = sim_results[1]\n        return (i <= infected_threshold)\n    q_sim = does_not_cross_threshold(run_CHIME_SIR_BL())\n    print(\"q_sim\", q_sim)\n\n    # query the bilayer file\n    bilayer = QueryableBilayer.from_file(bilayer_file)\n    q_bilayer = bilayer.query(f\"(i <= infected_threshold)\")\n    print(\"q_bilayer\", q_bilayer)\n\n    # assert the both queries returned the same result\n    return  q_sim == q_bilayer\n\n# example call\nbilayer_file = \"CHIME_SIR_dynamics_BiLayer.json\"\ninfected_threshold = 130\nassert compare_against_CHIME_bilayer(bilayer_file, infected_threshold)\n```\n\n### **Parameter Synthesis**\n\nThe base set of types used during Parameter Synthesis:\n- a list of Parameters representing variables to be assigned\n- a Model containing some formula \n- a Search instance representing the type of search to use during parameter synthesis\n- a Scenario container representing a set of parameters, model, and search value\n- a SearchConfig to configure search behavior\n- the Funman interface that runs analysis using scenarios and configuration data\n\nIn the following example two parameters, x and y, are constructed. A model is \nalso constructed that says 0.0 < x < 5.0 and 10.0 < y < 12.0. These parameters\nand model are used to define a scenario that will use BoxSearch to synthesize\nthe parameters. The Funman interface and a search configuration are also \ndefined. All that remains is to have Funman solve the scenario using the defined\nconfiguration.\n\n```python\ndef test_parameter_synthesis_2d():\n    # construct variables\n    x = Symbol(\"x\", REAL)\n    y = Symbol(\"y\", REAL)\n    parameters = [Parameter(\"x\", x), Parameter(\"y\", y)]\n\n    # construct model\n    # 0.0 < x < 5.0, 10.0 < y < 12.0\n    model = Model(\n        And(\n            LE(x, Real(5.0)), GE(x, Real(0.0)), LE(y, Real(12.0)), GE(y, Real(10.0))\n        )\n    )\n\n    # define scenario\n    scenario = ParameterSynthesisScenario(parameters, model, BoxSearch())\n\n    # create Funman instance and configuration\n    funman = Funman()\n    config = SearchConfig(tolerance=1e-1)\n\n    # ask Funman to solve the scenario\n    result = funman.solve(scenario, config=config)\n    assert result\n```\n\n---\n\n## Development Setup\n\n### Development Setup: Ubuntu 20.04\n```bash\n# install python 3.9\nsudo apt install python3.9 python3.9-dev\n# install dev dependencies\nsudo apt install make\npip install --user pipenv\n# install pygraphviz dependencies\nsudo apt install graphviz libgraphviz-dev pkg-config\n# Initialize development environment\nmake setup-dev-env\n```\n\n### Development Setup: OSX M1\n\n```bash\n# install python 3.9\nbrew install python@3.9 \n# install dev dependencies\nbrew install make\npip3 install --user pipenv\n# install pygraphviz dependencies\nbrew install graphviz pkg-config\n# install z3\nbrew install z3\n# install miniconda\nbrew install miniforge\n# Initialize development environment\nmake setup-conda-dev-env\n```\n\n#### **Z3 issue**\n\nOn the M1, installing with conda gets pysmt with z3 for the wrong architecture. To fix this, if it happens, replace the `z3lib.dylib` in your virtual environment (in my case this was `.venv/lib/python3.9/site-packages/z3/lib/libz3.dylib`) with a symbolic link to the library that you get from your brew install of z3.  For example\n\n    ln -s /opt/homebrew/Cellar/z3/4.11.0/lib/libz3.dylib ~/projects/askem/funman/.venv/lib/python3.9/site-packages/z3/lib/\n\n---\n#### **Pipenv issue and conda**\n\nWhen I (rpg) tried to set up the environment with only pipenv (`make setup-dev-env`), it didn't work because `pip` tried to build the pygraphviz wheel and when it did, it used the Xcode compiler, which did not work with the version of graphviz I had installed with brew.\n\nSuggest dealing with this by using `setup-CONDA-dev-env` [caps for emphasis] instead.\n\n---\n#### **Error during setup: \"Could not find a version that matches\"**\nTry updating pipenv: `pip install pipenv --upgrade`\n\n# Generating docs\n```bash\npipenv run pip install sphinx sphinx_rtd_theme matplotlib\n\n# Needed only if the gh-pages branch is not at origin\nmake init-pages \n\n# Run sphinx and pyreverse on source, generate docs/\nmake docs \n\n# push docs/ to origin\nmake deploy-pages \n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "funman",
            "package_url": "https://pypi.org/project/funman/",
            "platform": null,
            "project_url": "https://pypi.org/project/funman/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/funman/1.2.1/",
            "requires_dist": [
                "funman-dreal",
                "graphviz",
                "model2smtlib",
                "multiprocess",
                "tenacity"
            ],
            "requires_python": "",
            "summary": "Functional Model Analysis Tool",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16177893,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c4410bdf6aae8eb56935f130e51009d1",
                    "sha256": "a3ee84467668e0922392680d0c2a251a04e834e00efcebf15171b4936068d4aa"
                },
                "downloads": -1,
                "filename": "funman-1.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c4410bdf6aae8eb56935f130e51009d1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 30844,
                "upload_time": "2022-12-01T23:41:34",
                "upload_time_iso_8601": "2022-12-01T23:41:34.896255Z",
                "url": "https://files.pythonhosted.org/packages/fb/b3/0494fa9df84662e55112f9fdb7f1d98f644b27bac31c084920ba8e907002/funman-1.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "67dc832b9eff68dcbb09da0d0f083dc6",
                    "sha256": "c64dfaa708fe3e4cbb5dd54b0466f246185d3dde016186ffe5f35e64e20d5c58"
                },
                "downloads": -1,
                "filename": "funman-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "67dc832b9eff68dcbb09da0d0f083dc6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34458,
                "upload_time": "2022-12-01T23:41:36",
                "upload_time_iso_8601": "2022-12-01T23:41:36.143094Z",
                "url": "https://files.pythonhosted.org/packages/11/ba/865209868251ed5179638cb22cf7657775af60ded244bc44d056ac6e7d79/funman-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}