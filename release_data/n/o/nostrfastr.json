{
    "0.0.1": {
        "info": {
            "author": "Ryan Armstrong",
            "author_email": "ryscar13@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "nostrfastr\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n### What is this?\n\n- This package attempts to be a well documented and tested instance of a\n  very basic client framework in nostr that can help others understand\n  nostr quickly or get started sending messages in minutes.\n- Contained is a collection of tools built on top of this basic\n  [`Client`](https://armstrys.github.io/nostrfastr/client.html#client)\n  class showing some potential uses of nostr any how quickly we can\n  build on it in python.\n  - A \u201csentinel\u201d node that serves as a barebones client to rebroadcast\n    user data across additional nostr relays. While this is a relatively\n    simple concept I haven\u2019t seen much discussion around the potential\n    benefits and implications.\n  - `notifyr` - a decorator that will alert on success or failure of any\n    decorated function via nostr DM\n  - a vanity address generator decorated with the notifyr function so\n    you can leave it running and get notified when it finishes\n\n### Why nbdev?\n\nThis library uses the [nbdev](https://nbdev.fast.ai/) framework to\naggregate some useful tools from\n[python-nostr](https://github.com/jeffthibault/python-nostr) into a more\nstructured `client` class that could serve as the basis for other python\ntools. `nbdev` is great because it allows for relatively easy\ndevelopment of code in-line with readable and explanatory documentation.\nThis webpage is a rendering of the same notebooks that are exported to\nform the package code. If you clone the Github repository you can view\nand run the code you see in the documentation. It will almost certainly\nnot be the most perfomant way to implement much of what I am doing here,\nbut I hope it can make the\n[nostr](https://github.com/nostr-protocol/nostr) protocol more\naccessible to a wider audience.\n\n## Install\n\n``` sh\npip install nostrfastr\n```\n\nor alternatively, clone the github repositor [and refer to this\nguide](https://nbdev.fast.ai/tutorials/tutorial.html) to get started\nworking in nbdev.\n\n## How to use\n\n``` python\nfrom nostrfastr.client import Client\n```\n\nConnect and perform an operation\u2026\n\n``` python\nwith Client(relay_urls=['wss://relay.damus.io']) as client:\n    print('Are we connected?')\n    print('\\t', client.relay_manager.connection_statuses)\nprint('Are we connected?')\nprint('\\t', client.relay_manager.connection_statuses)\n```\n\n    Are we connected?\n         {'wss://relay.damus.io': True}\n    Are we connected?\n         {'wss://relay.damus.io': False}\n\nAnd use the client to build something useful with nostr - like a bot\nthat notifies you of your python processing status on long code runs\n\n``` python\nfrom nostrfastr.notifyr import notifyr\n```\n\n``` python\n@notifyr\ndef raise_error():\n    raise Exception('Oh no! Process failed!')\n\n@notifyr\ndef success():\n    return 1+1\n```\n\nOr generate an vanity address and have it notify you at another nostr\naddress when it\u2019s done\n\n``` python\nfrom nostrfastr.vanity import vanity_notifyr\n\nvanity_notifyr(startswith='23', style='npub')\n```\n\n    /Users/ryanarmstrong/python/nostrfastr/nostrfastr/client.py:479: UserWarning: the current implementation of messages should be used with caution\n                        see https://github.com/nostr-protocol/nips/issues/107\n      warnings.warn('''the current implementation of messages should be used with caution\n\n    PrivateKey(npub123kyc...nwdqt768zj)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/armstrys/nostrfastr",
            "keywords": "nostr nbdev jupyter notebook python",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nostrfastr",
            "package_url": "https://pypi.org/project/nostrfastr/",
            "platform": null,
            "project_url": "https://pypi.org/project/nostrfastr/",
            "project_urls": {
                "Homepage": "https://github.com/armstrys/nostrfastr"
            },
            "release_url": "https://pypi.org/project/nostrfastr/0.0.1/",
            "requires_dist": [
                "nostr",
                "appdirs",
                "pandas",
                "keyring",
                "notebook ; extra == 'dev'",
                "nostr-relay ; extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Getting users into nostr, fastr. A basic nostr `Client` class built in the nbdev (fast) framework to get people started nostr.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16312554,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "50d676f63448131d7bad02fcb5b6c89a8358bc88f6a315c698fd5ee8c230487f",
                    "md5": "5f2ea5c63b5657ca1bf157dcab728fca",
                    "sha256": "dcab2405f88bc9824fd51d70cb683030a8586a1f37aa5e2f88e5499a9326e69d"
                },
                "downloads": -1,
                "filename": "nostrfastr-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5f2ea5c63b5657ca1bf157dcab728fca",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 14529,
                "upload_time": "2023-01-05T04:41:16",
                "upload_time_iso_8601": "2023-01-05T04:41:16.764595Z",
                "url": "https://files.pythonhosted.org/packages/50/d6/76f63448131d7bad02fcb5b6c89a8358bc88f6a315c698fd5ee8c230487f/nostrfastr-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "a33adb6aa8ed008a7ff3efedda4c22af50f362ff3aa92eda538d2d525d38e14c",
                    "md5": "5218c7c4d40cd67291bd63d5db2e08ae",
                    "sha256": "5341061f70d97aee40d5ef9bf01f5680b18f83122cd86b3d3f4f6efbfca07b2b"
                },
                "downloads": -1,
                "filename": "nostrfastr-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5218c7c4d40cd67291bd63d5db2e08ae",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 15542,
                "upload_time": "2023-01-05T04:41:18",
                "upload_time_iso_8601": "2023-01-05T04:41:18.688722Z",
                "url": "https://files.pythonhosted.org/packages/a3/3a/db6aa8ed008a7ff3efedda4c22af50f362ff3aa92eda538d2d525d38e14c/nostrfastr-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}