{
    "0.0.1": {
        "info": {
            "author": "Ciro Spaciari",
            "author_email": "Ciro Spaciari <ciro.spaciari@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# socketify.py\n\n\n<p align=\"center\">\n  <a href=\"https://github.com/cirospaciari/socketify.py\"><img src=\"https://raw.githubusercontent.com/cirospaciari/socketify.py/main/misc/logo.png\" alt=\"Logo\" height=170></a>\n  <br />\n  <br />\n  <a href=\"https://github.com/cirospaciari/socketify.py/actions/workflows/linux.yml\" target=\"_blank\"><img src=\"https://github.com/cirospaciari/socketify.py/actions/workflows/linux.yml/badge.svg\" /></a>\n  <a href=\"https://github.com/cirospaciari/socketify.py/actions/workflows/windows.yml\" target=\"_blank\"><img src=\"https://github.com/cirospaciari/socketify.py/actions/workflows/windows.yml/badge.svg\" /></a>\n<a href=\"https://github.com/cirospaciari/socketify.py/actions/workflows/macos.yml\" target=\"_blank\"><img src=\"https://github.com/cirospaciari/socketify.py/actions/workflows/macos.yml/badge.svg\" /></a>\n  <a href=\"https://github.com/cirospaciari/socketify.py/actions/workflows/macos_arm64.yml\" target=\"_blank\"><img src=\"https://github.com/cirospaciari/socketify.py/actions/workflows/macos_arm64.yml/badge.svg\" /></a>\n  <br/>\n<a href='https://github.com/cirospaciari/socketify.py'><img alt='GitHub Clones' src='https://img.shields.io/badge/dynamic/json?color=success&label=Clones&query=count&url=https://gist.githubusercontent.com/cirospaciari/2243d59951f4abe4fd2000f1e20bc561/raw/clone.json&logo=github'></a>\n<a href=\"https://github.com/sponsors/cirospaciari/\" target=\"_blank\"><img src=\"https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&link=https://github.com/sponsors/cirospaciari\"/></a>\n\n\n</p>\n\n\n\n## \ud83d\udca1 Features\n\n- WebSocket with pub/sub support\n- Fast and reliable Http/Https\n- Support for Windows, Linux and macOS Silicon & x64\n- Support for [`PyPy3`](https://www.pypy.org/) and [`CPython`](https://github.com/python/cpython)\n- Dynamic URL Routing with Wildcard & Parameter support\n- Sync and Async Function Support\n- Really Simple API\n- Fast and Encrypted TLS 1.3 quicker than most alternative servers can do even unencrypted, cleartext messaging\n- Per-SNI HttpRouter Support\n- Proxy Protocol v2\n- Shared or Dedicated Compression Support\n- Max Backpressure, Max Timeout, Max Payload and Idle Timeout Support\n- Automatic Ping / Pong Support\n- Per Socket Data\n- Middlewares\n- Templates Support (examples with [`Mako`](https://github.com/cirospaciari/socketify.py/tree/main/examples/template_mako.py) and [`Jinja2`](https://github.com/cirospaciari/socketify.py/tree/main/examples/template_jinja2.py))\n- ASGI Server with pub/sub extension for Falcon\n- WSGI Server\n\n## :mag_right: Upcoming Features\n- In-Memory Cache Tools\n- Fetch like API powered by libuv\n- Async file IO powered by libuv\n- Full asyncio integration with libuv\n- SSGI Server spec and support\n- RSGI Server support\n- Full Http3 support\n- [`HPy`](https://hpyproject.org/) integration to better support [`CPython`](https://github.com/python/cpython), [`PyPy`](https://www.pypy.org/) and [`GraalPython`](https://github.com/oracle/graalpython)\n- Hot Reloading\n\nWe created and adapted the full C API from [uNetworking/uWebSockets](https://github.com/uNetworking/uWebSockets) and will integrate libuv powered fetch and file IO, this same C API is used by [Bun](https://bun.sh/)\n\nJoin Github [`Discussions`](https://github.com/cirospaciari/socketify.py/discussions) or [`Discord`](https://discord.socketify.dev/) for help and have a look at the development progress.\n\n## :zap: Benchmarks\nSocketify WebFramework HTTP requests per second (Linux x64)\n\n![image](https://raw.githubusercontent.com/cirospaciari/socketify.py/main/misc/bench-bar-graph-general.png)\n\nWSGI Server requests per second (Linux x64)\n\n![image](https://raw.githubusercontent.com/cirospaciari/socketify.py/main/misc/bench-bar-graph-wsgi.png)\n\nASGI Server requests per second (Linux x64)\n\n![image](https://raw.githubusercontent.com/cirospaciari/socketify.py/main/misc/bench-bar-graph-asgi.png)\n\nWebSocket messages per second (Linux x64)\n\n![image](https://raw.githubusercontent.com/cirospaciari/socketify.py/main/misc/bench-bar-graph-websockets.png)\n\n\nHttp tested with TFB tool plaintext benchmark<br/>\nWebSocket tested with [Bun.sh](https://bun.sh) bench chat-client <br/>\nSource code in [bench](https://github.com/cirospaciari/socketify.py/tree/main/bench) and in [TechEmPower](https://github.com/TechEmpower/FrameworkBenchmarks)<br/>\n\nMachine OS: Debian GNU/Linux bookworm/sid x86_64 Kernel: 6.0.0-2-amd64 CPU: Intel i7-7700HQ (8) @ 3.800GHz Memory: 32066MiB \n\n## \ud83d\udce6 Installation\nFor macOS x64 & Silicon, Linux x64, Windows\n\n```bash\npip install git+https://github.com/cirospaciari/socketify.py.git\n#or specify PyPy3\npypy3 -m pip install git+https://github.com/cirospaciari/socketify.py.git\n#or in editable mode\npypy3 -m pip install -e git+https://github.com/cirospaciari/socketify.py.git@main#egg=socketify\n```\n\nUsing install via requirements.txt\n```text\ngit+https://github.com/cirospaciari/socketify.py.git@main#socketify\n```\n```bash\npip install -r ./requirements.txt \n#or specify PyPy3\npypy3 -m pip install -r ./requirements.txt \n```\n\nIf you are using linux or macOS, you may need to install libuv and zlib in your system\n\nmacOS\n```bash\nbrew install libuv\nbrew install zlib\n```\n\nLinux\n```bash\napt install libuv1 zlib1g\n```\n\n## \ud83e\udd14 Usage\n\nHello world app\n```python\nfrom socketify import App\n\napp = App()\napp.get(\"/\", lambda res, req: res.end(\"Hello World socketify from Python!\"))\napp.listen(3000, lambda config: print(\"Listening on port http://localhost:%d now\\n\" % config.port))\napp.run()\n```\n\nSSL version sample\n``` python\nfrom socketify import App, AppOptions\n\napp = App(AppOptions(key_file_name=\"./misc/key.pem\", cert_file_name=\"./misc/cert.pem\", passphrase=\"1234\"))\napp.get(\"/\", lambda res, req: res.end(\"Hello World socketify from Python!\"))\napp.listen(3000, lambda config: print(\"Listening on port http://localhost:%d now\\n\" % config.port))\napp.run()\n```\n\nWebSockets\n```python\nfrom socketify import App, AppOptions, OpCode, CompressOptions\n\ndef ws_open(ws):\n    print('A WebSocket got connected!')\n    ws.send(\"Hello World!\", OpCode.TEXT)\n\ndef ws_message(ws, message, opcode):\n    #Ok is false if backpressure was built up, wait for drain\n    ok = ws.send(message, opcode)\n    \napp = App()    \napp.ws(\"/*\", {\n    'compression': CompressOptions.SHARED_COMPRESSOR,\n    'max_payload_length': 16 * 1024 * 1024,\n    'idle_timeout': 12,\n    'open': ws_open,\n    'message': ws_message,\n    'drain': lambda ws: print('WebSocket backpressure: %i' % ws.get_buffered_amount()),\n    'close': lambda ws, code, message: print('WebSocket closed')\n})\napp.any(\"/\", lambda res,req: res.end(\"Nothing to see here!'\"))\napp.listen(3000, lambda config: print(\"Listening on port http://localhost:%d now\\n\" % (config.port)))\napp.run()\n```\n\nWe have more than 20 examples [click here](https://github.com/cirospaciari/socketify.py/tree/main/examples) for more\n\n## :hammer: Building from source\n```bash\n#clone and update submodules\ngit clone https://github.com/cirospaciari/socketify.py.git\ncd ./socketify.py\ngit submodule update --init --recursive --remote\n#you can use make linux, make macos or call Make.bat from Visual Studio Development Prompt to build\ncd ./src/socketify/native/ && make linux && cd ../../../\n#install local pip\npypy3 -m pip install .\n#install in editable mode\npypy3 -m pip install -e .\n#if you want to remove\npypy3 -m pip uninstall socketify\n```\n\n## :briefcase: Commercially supported\nI'm a Brazilian consulting & contracting company dealing with anything related with [socketify.py](https://github.com/cirospaciari/socketify.py) and [socketify.rb](https://github.com/cirospaciari/socketify.rb)\n\nDon't hesitate sending a mail if you are in need of advice, support, or having other business inquiries in mind. We'll figure out what's best for both parties.\n\nSpecial thank's to [uNetworking AB](https://github.com/uNetworking) to develop [uWebSockets](https://github.com/uNetworking/uWebSockets), [uSockets](https://github.com/uNetworking/uSockets) and allow us to bring this features and performance to Python and PyPy\n\n## :heart: Sponsors\nIf you like to see this project thrive, you can sponsor us on GitHub too. We need all the help we can get \n\n<a href=\"https://github.com/sponsors/cirospaciari/\" target=\"_blank\"><img src=\"https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&link=https://github.com/sponsors/cirospaciari\"/></a>\n\n## :star: Stargazers\n[![Stargazers repo roster for @cirospaciari/socketify.py](https://reporoster.com/stars/dark/cirospaciari/socketify.py)](https://github.com/cirospaciari/socketify.py/stargazers)\n\n## :wrench: Forkers\n[![Forkers repo roster for @cirospaciari/socketify.py](https://reporoster.com/forks/dark/cirospaciari/socketify.py)](https://github.com/cirospaciari/socketify.py/network/members)\n\n\n## :question: socketify.py vs japronto\n\nPeople really want to compare with japronto, but this projects are not really comparable. Socketify is an active project and will be maintained over time with security updates and new features, japronto don't get any github updates since 2020 and don't get any src update since 2018, japronto don't support SSL, WebSockets, [`PyPy3`](https://www.pypy.org/), Windows or macOS Silicon, socketify will support Http3 and a lot more features. \n\nAnd yes, we can be faster than japronto when all our features and goals are achieved, and we are probably faster than any current maintained solution out there.\n\n## :grey_question: uvloop\nWe don't use uvloop, because uvloop don't support Windows and PyPy3 at this moment, this can change in the future, but right now we want to implement our own libuv + asyncio solution, and a lot more.\n\n## :dizzy: CFFI vs Cython vs HPy\nCython performs really well on Python3 but really bad on PyPy3, CFFI are chosen for better support PyPy3 until we got our hands on an stable [`HPy`](https://hpyproject.org/) integration.\n\n## :bookmark_tabs: Documentation\nSee the full docs in [docs.socketify.dev](https://docs.socketify.dev) or in [/docs/README.md](docs/README.md)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cirospaciari/socketify.py",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "socketify",
            "package_url": "https://pypi.org/project/socketify/",
            "platform": "any",
            "project_url": "https://pypi.org/project/socketify/",
            "project_urls": {
                "Bug Tracker": "https://github.com/cirospaciari/socketify.py/issues",
                "Homepage": "https://github.com/cirospaciari/socketify.py"
            },
            "release_url": "https://pypi.org/project/socketify/0.0.1/",
            "requires_dist": [
                "cffi (>=1.0)",
                "setuptools (>=58.1.0)"
            ],
            "requires_python": ">=3.7",
            "summary": "Bringing WebSockets, Http/Https High Performance servers for PyPy3 and Python3",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16294996,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "0ff55f473412d32a560991617f49c8aecd0a7e0e0d047f7016c0fd36a4ca8a29",
                    "md5": "1eaebbab859e1d3ec9f6ab631f036f74",
                    "sha256": "d2793fb599192bc630c02fa2974a5dfe1a4107a63c244b74d98f1b2a99fd8b1e"
                },
                "downloads": -1,
                "filename": "socketify-0.0.1-cp310-cp310-any.whl",
                "has_sig": false,
                "md5_digest": "1eaebbab859e1d3ec9f6ab631f036f74",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": ">=3.7",
                "size": 5456228,
                "upload_time": "2023-01-03T21:15:39",
                "upload_time_iso_8601": "2023-01-03T21:15:39.307370Z",
                "url": "https://files.pythonhosted.org/packages/0f/f5/5f473412d32a560991617f49c8aecd0a7e0e0d047f7016c0fd36a4ca8a29/socketify-0.0.1-cp310-cp310-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "a9c62d0e6d99249be80bc47400e4d80ad75a35c18f631df0da54dabb4ee0eca0",
                    "md5": "11264e5647be1e3661b99760dcf5120f",
                    "sha256": "bb29476ae47ff8161f6083df506a4e581881ce2a25968bff400bdf1dad2bc5af"
                },
                "downloads": -1,
                "filename": "socketify-0.0.1-pp39-pypy39_pp73-any.whl",
                "has_sig": false,
                "md5_digest": "11264e5647be1e3661b99760dcf5120f",
                "packagetype": "bdist_wheel",
                "python_version": "pp39",
                "requires_python": ">=3.7",
                "size": 5456239,
                "upload_time": "2023-01-03T21:15:45",
                "upload_time_iso_8601": "2023-01-03T21:15:45.744542Z",
                "url": "https://files.pythonhosted.org/packages/a9/c6/2d0e6d99249be80bc47400e4d80ad75a35c18f631df0da54dabb4ee0eca0/socketify-0.0.1-pp39-pypy39_pp73-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "5d5e6315ce1bd5c5f4164ed817aaa7e74c89ab1eeb255cfe6b13202f1f49b7e8",
                    "md5": "8e85a4820893ba48b5a323c2da801cd5",
                    "sha256": "792f5304fe0787cfd779b4859e6985813b78dff2316015db35ea83e4dddc5b68"
                },
                "downloads": -1,
                "filename": "socketify-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8e85a4820893ba48b5a323c2da801cd5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5351456,
                "upload_time": "2023-01-03T21:15:50",
                "upload_time_iso_8601": "2023-01-03T21:15:50.243458Z",
                "url": "https://files.pythonhosted.org/packages/5d/5e/6315ce1bd5c5f4164ed817aaa7e74c89ab1eeb255cfe6b13202f1f49b7e8/socketify-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}