{
    "1.0.0": {
        "info": {
            "author": "Nikita Minaev",
            "author_email": "<nikita@minaev.su>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Operating System :: MacOS :: MacOS X",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: Unix",
                "Programming Language :: Python :: 3"
            ],
            "description": "\n<div align=\"left\">\n    <h1>Search4FacesAPI <img src=\"https://search4faces.com/favicon.ico\" width=30 height=30></h1>\n    <p align=\"left\" >\n        <a href=\"https://pypi.org/project/Search4Faces/\">\n            <img src=\"https://img.shields.io/pypi/v/Search4Faces?style=flat-square\" alt=\"PyPI\">\n        </a>\n        <a href=\"https://pypi.org/project/Search4Faces/\">\n            <img src=\"https://img.shields.io/pypi/dd/Search4Faces?style=flat-square\" alt=\"PyPI\">\n        </a>\n    </p>\n</div>\n\nA simple library with async capabilities to interact with Search4Faces [API](https://search4faces.com/api.html)\n\n\n## Usage\n\nWith ``SearchClient`` you can easily find social media profiles with similar faces. It is a great tool for finding duplicates, finding people, and more.'\n\n## Documentation\n\nOfficial docs can be found on the [API's webpage](https://search4faces.com/api.html)\n\n## Installation\n\n```bash\npip install Search4Faces\n```\n\n## Requirements\n\n - ``Python 3.9+``\n - ``httpx``\n - ``pydantic``\n\n## Features\n\n - ``Async capabilities``\n - ``Exception handling``\n - ``Pydantic return model``\n - ``LightWeight``\n\n## Examples\n\n```python\nimport asyncio\n\nfrom Search4Faces import (\n    SearchClient, \n    SearchAPIError, \n    MatchedPerson,\n    sources,\n)\n\nTOKEN = 'your-token'\nclient = SearchClient(TOKEN) # if token is invalid, raises SearchAPIError\n\n# you can use photo's url - client will fetch the image for you\nphoto_url = 'https://imgur.com/XYZ.jpg'\nresponse: list[MatchedPerson] = client.find_similar(\n    photo_url,\n    source=sources.VK_OK_NEW_AVATAR, # you can specify the image database to search in\n    show_hidden=True,                # or define if you want hidden profiles to show up\n    results=25,                      # and choose how many results you want back (max 500)\n)\n\n# you can also provide a file / io.BytesIO object\nresponse: list[MatchedPerson] = client.find_similar(\n    open('photo.jpg', 'rb'),\n)\n\n# you can do some exception handling\ntry:\n\n    response: list[MatchedPerson] = client.find_similar(photo_url)\n\nexcept SearchAPIError as exc:\n\n    print(exc)\n\n# you can use some async methods\nasyncio.run(\n    client.find_similar_async(photo_url)\n)\n```\n\nDeveloped by Nikita Minaev (c) 2022\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nikitalm8/Search4FacesAPI",
            "keywords": "python,face recognition,search4faces,ai",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Search4Faces",
            "package_url": "https://pypi.org/project/Search4Faces/",
            "platform": null,
            "project_url": "https://pypi.org/project/Search4Faces/",
            "project_urls": {
                "Homepage": "https://github.com/nikitalm8/Search4FacesAPI"
            },
            "release_url": "https://pypi.org/project/Search4Faces/1.0.0/",
            "requires_dist": [
                "httpx",
                "pydantic"
            ],
            "requires_python": "",
            "summary": "Face recognition via Search4Faces API",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16258442,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0ada08db709428477215c2cdc7a71016",
                    "sha256": "9157e4b94473bbae75e8ca20a6d13ba0d4f84b7cf40a8a18761f4946f65edd9d"
                },
                "downloads": -1,
                "filename": "Search4Faces-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0ada08db709428477215c2cdc7a71016",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5099,
                "upload_time": "2022-12-30T14:03:50",
                "upload_time_iso_8601": "2022-12-30T14:03:50.723293Z",
                "url": "https://files.pythonhosted.org/packages/58/12/3100a5cbd519d27c9a440415f5cf6af9bbfc3e529351c3d3be31bc248811/Search4Faces-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5d64815c6df338d275f67e19244262db",
                    "sha256": "6098d1533f966956ec3e2c47358fb7c04a1d2178764551dc7975aecccdbb8f12"
                },
                "downloads": -1,
                "filename": "Search4Faces-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "5d64815c6df338d275f67e19244262db",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4229,
                "upload_time": "2022-12-30T14:03:52",
                "upload_time_iso_8601": "2022-12-30T14:03:52.399500Z",
                "url": "https://files.pythonhosted.org/packages/ad/2e/d7ca49e581296bbedd8b394a2aabace025d0a10a3a8011c75becd4105bd4/Search4Faces-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}