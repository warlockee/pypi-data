{
    "1.1.82": {
        "info": {
            "author": "Michael Costa, Florent Chevalier",
            "author_email": "michael.costa@mcos.nc, florent.chevalier@gouv.nc",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Software Development :: Libraries :: Application Frameworks"
            ],
            "description": "![Build Status](https://drone.mcos.nc/api/badges/scrippy/scrippy-template/status.svg) ![License](https://img.shields.io/static/v1?label=license&color=orange&message=MIT) ![Language](https://img.shields.io/static/v1?label=language&color=informational&message=Python)\n\n\n![Scrippy, mon ami le scrangourou](./scrippy-template.png \"Scrippy, mon ami le scrangourou\")\n\n# `scrippy_template`\n\nGestion simplifi\u00e9e des fichiers mod\u00e8les pour le cadriciel [`Scrippy`](https://codeberg.org/scrippy).\n\n## Pr\u00e9requis\n\n### Modules Python\n\n#### Liste des modules n\u00e9cessaires\n\nLes modules list\u00e9s ci-dessous seront automatiquement install\u00e9s.\n\n- jinja2\n\n## Installation\n\n### Manuelle\n\n```bash\ngit clone https://codeberg.org/scrippy/scrippy-template.git\ncd scrippy-template.git\nsudo python3 -m pip install -r requirements.txt\nmake install\n```\n\n### Avec `pip`\n\n```bash\nsudo pip3 install scrippy-template\n```\n\n### Utilisation\n\nCe module permet la g\u00e9n\u00e9ration de document \u00e0 partir de fichiers mod\u00e8les \u00e0 partir du moteur de rendu *[jinja2](http://jinja.pocoo.org/)*\n\nPour \u00eatre utilisables les fichiers mod\u00e8les devront \u00eatre situ\u00e9s dans le r\u00e9pertoire d\u00e9fini par le param\u00e8tre `base_path` pass\u00e9 en argument \u00e0 l'objet `template.Renderer`.\n\nAfin de g\u00e9rer l'interpolation de variables le fichier mod\u00e8le DOIT accepter un dictionnaire nomm\u00e9 `params` comme param\u00e8tre.\n\nLes param\u00e8tres sp\u00e9cifiques \u00e0 l'environnement _Jinja2_ peuvent \u00eatre modifi\u00e9s au travers de l'attribut `env` de l'objet `template.Renderer`.\n\nCe dictionnaire devra contenir l'ensemble des variables n\u00e9cessaires au rendu complet du fichier mod\u00e8le.\n\nLe rendu du fichier mod\u00e8le est obtenu \u00e0 partir de l'objet `template.Renderer` dont l'instanciation n\u00e9cessite le nom d'un fichier mod\u00e8le ainsi que le chemin de base dans lequel chercher le fichier mod\u00e8le.\n\nLes param\u00e8tres sp\u00e9cifiques \u00e0 l'environnement _Jinja2_ peuvent \u00eatre modifi\u00e9s au travers de l'attribut `env` de l'objet `template.Renderer`.\n\nPar convention les fichiers mod\u00e8les utilis\u00e9s par le cadriciel _Scrippy_ sont rang\u00e9s dans le r\u00e9pertoire d\u00e9fini par le param\u00e8tre de configuration `env::templatedirdir` (voir la configuration du [cadriciel _Scrippy_](https://codeberg.org/scrippy) dans [la documentation](https://codeberg.org/scrippy/scrippy-core) idoine).\n\nUn mod\u00e8le est un fichier texte simple dont certains passages d\u00fbment balis\u00e9s seront interpol\u00e9s par les variables pass\u00e9es en param\u00e8tres.\n\nLa m\u00e9thode `Renderer.render()` renvoie le rendu du fichier mod\u00e8le.\n\nLes variables doivent \u00eatre fournies au fichier mod\u00e8le sous la forme d'un dictionnaire nomm\u00e9 `params`.\n\nLe dictionnaire sera transmis au fichier mod\u00e8le qui sera charg\u00e9 de faire l'interpolation des variables qu'il contient.\n\nLes fichiers mod\u00e8les peuvent inclure:\n- des structures de contr\u00f4le\n- des boucles\n\n#### Fichier mod\u00e8le simple\n\nAvec le fichier mod\u00e8le suivant nomm\u00e9 *template_test.mod* et plac\u00e9 dans le r\u00e9pertoire `/var/lib/scrippy/templates`:\n\n```txt\nBonjour {{params.user}}\n\nVous recevez cet e-mail car vous faites partie des administrateurs fonctionnels de l'application {{params.app}}.\n\nL'ex\u00e9cution du script {{params.script}} du {{params.date}} s'est termin\u00e9 sur le code d'erreur suivant:\n- {{params.error.code}}: {{params.error.msg}}\n\n--\nCordialement.\n{{params.sender}}\n```\n\nL'utilisation du fichier mod\u00e8le se fera de la mani\u00e8re suivante:\n\n```python\nimport datetime\nfrom scrippy_template import template\n\nparams = {\"user\": \"Harry Fink\",\n          \"app\": \"Flying Circus\",\n          \"script\": \"dead_parrot.py\",\n          \"date\": datetime.datetime.now().strftime(\"%d/%m/%Y\"),\n          \"error\": {\"code\": 42,\n                    \"msg\": \"It\u2019s not pinin\u2019! It\u2019s passed on! This parrot is no more!\"},\n          \"sender\": \"Luiggi Vercotti\", }\n\nbase_path = '/var/lib/scrippy/templates'\ntemplate_file = 'template.j2'\nrenderer = template.Renderer(base_path, template_file)\n\nprint(renderer.render(params))\n\n```\n\nAvec les valeurs par d\u00e9faut le message affich\u00e9 en fin de script contiendra:\n\n```txt\nBonjour Harry Fink\n\nVous recevez cet e-mail car vous faites partie des administrateurs fonctionnels de l'application Flying Circus.\n\nL'ex\u00e9cution du script dead_parrot.py du 15/09/2019 s'est termin\u00e9 sur le code d'erreur suivant:\n- 42: It\u2019s not pinin\u2019! It\u2019s passed on! This parrot is no more!\n\n--\nCordialement.\nLuigi Vercotti\n```\n\n#### Fichier mod\u00e8le avec structures de contr\u00f4le\n\n```python\nparams = {\"user\": \"Harry Fink\",\n          \"app\": \"Flying Circus\",\n          \"script\": \"dead_parrot.py\",\n          \"date\": datetime.datetime.now().strftime(\"%d/%m/%Y\"),\n          \"num_error\": 42,\n          \"sender\": \"Luiggi Vercotti\", }\n```\n\n```txt\nBonjour {{params.user}}\n\nVous recevez cet e-mail car vous faites partie des administrateurs fonctionnels de l'application {{params.app}}.\n\nL'ex\u00e9cution du script {{params.script}} du {{params.date}} s'est termin\u00e9:\n{% if params.num_errors == 0 %}\n- Sans erreur\n{% else %}\n- avec {{params.num_errors}} erreur(s)\n{% endif %}\n\n--\nCordialement.\n{{params.sender}}\n```\n\n#### Fichier mod\u00e8le avec boucle\n\n```python\nparams = {\"user\": \"Harry Fink\",\n          \"app\": \"Flying Circus\",\n          \"script\": \"dead_parrot.py\",\n          \"date\": datetime.datetime.now().strftime(\"%d/%m/%Y\"),\n          'errors': [{'code': 2, 'msg': \"It's not pinin\u2019! It's passed on! This parrot is no more!\"},\n                     {'code': 3, 'msg': \"Ohh! The cat's eaten it.\"}],\n          \"sender\": \"Luiggi Vercotti\", }\n```\n\n```txt\nBonjour {{params.user}}\n\nVous recevez cet e-mail car vous faites partie des administrateurs fonctionnels de l'application {{params.app}}.\n\nL'ex\u00e9cution du script {{params.script}} du {{params.date}} s'est termin\u00e9 avec les erreurs suivantes:\n{% for error in params.errors %}\n  {{ error.code }}: {{ error.msg}}\n{% endfor %}\n\n--\nCordialement.\n{{params.sender}}\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://codeberg.org/scrippy/scrippy-template",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scrippy-template",
            "package_url": "https://pypi.org/project/scrippy-template/",
            "platform": null,
            "project_url": "https://pypi.org/project/scrippy-template/",
            "project_urls": {
                "Homepage": "https://codeberg.org/scrippy/scrippy-template"
            },
            "release_url": "https://pypi.org/project/scrippy-template/1.1.82/",
            "requires_dist": [
                "jinja2 (>=2.10.3)",
                "twine ; extra == 'dev'",
                "wheel (>=0.37.0) ; extra == 'dev'",
                "flake8 (>=4.0.1) ; extra == 'dev'",
                "flake8-breakpoint (>=1.1.0) ; extra == 'dev'",
                "flake8-builtins (>=1.5.3) ; extra == 'dev'",
                "flake8-print (>=4.0.0) ; extra == 'dev'",
                "flake8-return (>=1.1.3) ; extra == 'dev'",
                "pep8-naming (>=0.8.2) ; extra == 'dev'",
                "pytest (>=6.2.2) ; extra == 'dev'",
                "pytest-cov (>=3.0.0) ; extra == 'dev'",
                "bump2version (>=1.0.1) ; extra == 'dev'",
                "setuptools (>=60.9.2) ; extra == 'dev'",
                "pypirc-chappers (>=1.0.8) ; extra == 'dev'",
                "pylint (>=2.12.2) ; extra == 'dev'"
            ],
            "requires_python": ">=3.8",
            "summary": "\"Gestion simplifi\u00e9e des fichiers mod\u00e8les\"",
            "version": "1.1.82",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16264479,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "64ca2a49533a321f329b084eb52c0c7e",
                    "sha256": "3af97574dc57a649a7b3cb70f65e51a51bc2f3f635f03ea985de6e3b2f672561"
                },
                "downloads": -1,
                "filename": "scrippy_template-1.1.82-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "64ca2a49533a321f329b084eb52c0c7e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 6013,
                "upload_time": "2022-12-31T04:04:30",
                "upload_time_iso_8601": "2022-12-31T04:04:30.849295Z",
                "url": "https://files.pythonhosted.org/packages/e2/70/2958da69973ab6db58c3df65ec92d45261ea84cf5a22fbdeae0a3afb6bb8/scrippy_template-1.1.82-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e6752ba43ac12217309f12f200e0f2d3",
                    "sha256": "5e4f09a73e357806dca2bcabe247eafd30a5cb5f4c9501f972abf5612c614e36"
                },
                "downloads": -1,
                "filename": "scrippy-template-1.1.82.tar.gz",
                "has_sig": false,
                "md5_digest": "e6752ba43ac12217309f12f200e0f2d3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 5593,
                "upload_time": "2022-12-31T04:04:32",
                "upload_time_iso_8601": "2022-12-31T04:04:32.271839Z",
                "url": "https://files.pythonhosted.org/packages/bf/f4/e04aca02b8c40bf2d9c52fee1a0459032dd695b05506f695de804e8b8da7/scrippy-template-1.1.82.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}