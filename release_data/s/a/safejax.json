{
    "0.1.0": {
        "info": {
            "author": "Alvaro Bartolome",
            "author_email": null,
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "safejax",
            "package_url": "https://pypi.org/project/safejax/",
            "platform": null,
            "project_url": "https://pypi.org/project/safejax/",
            "project_urls": {
                "Documentation": "https://alvarobartt.github.io/safejax",
                "Issues": "https://github.com/alvarobartt/safejax/issues",
                "Source": "https://github.com/alvarobartt/safejax"
            },
            "release_url": "https://pypi.org/project/safejax/0.1.0/",
            "requires_dist": [
                "flax~=0.6.2",
                "jaxlib~=0.3.25",
                "jax~=0.3.25",
                "safetensors~=0.2.5",
                "black~=22.10.0; extra == 'quality'",
                "pre-commit~=2.20.0; extra == 'quality'",
                "ruff~=0.0.192; extra == 'quality'",
                "pytest~=7.1.2; extra == 'tests'"
            ],
            "requires_python": ">=3.7",
            "summary": "Serialize JAX/Flax models with `safetensors`",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16205907,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "0e747097a42a0f1e13aa4af7ae2417dc",
                    "sha256": "0213b31e6b78cf56fd9599fe518c033df8a0846dd3f3ca55f890452f5ee2184a"
                },
                "downloads": -1,
                "filename": "safejax-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0e747097a42a0f1e13aa4af7ae2417dc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 5499,
                "upload_time": "2022-12-24T11:50:32",
                "upload_time_iso_8601": "2022-12-24T11:50:32.392150Z",
                "url": "https://files.pythonhosted.org/packages/0e/5a/8389dde86b07440b9e8a8b8f1fb2572356c8354af958ce0d1bcbca88c0d4/safejax-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "51960b5ed56b360a7eacfc668a2d906d",
                    "sha256": "fedfbb45ad06d9f60cde0d4ac78929f9cbbe0ac218e38be9cb84f5b04a59eda5"
                },
                "downloads": -1,
                "filename": "safejax-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "51960b5ed56b360a7eacfc668a2d906d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5731,
                "upload_time": "2022-12-24T11:50:33",
                "upload_time_iso_8601": "2022-12-24T11:50:33.891584Z",
                "url": "https://files.pythonhosted.org/packages/9b/55/3367549053d76533f20d0509bef15182423f007ef1540d0245580b9492bf/safejax-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Alvaro Bartolome",
            "author_email": null,
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "# \ud83d\udd10 Serialize JAX/Flax models with `safetensors`\n\n`safejax` is a Python package to serialize JAX and Flax models using `safetensors`\nas the tensor storage format, instead of relying on `pickle`. For more details on why\n`safetensors` is safer than `pickle` please check https://github.com/huggingface/safetensors.\n\n## \ud83d\udee0\ufe0f Requirements & Installation\n\n`safejax` requires Python 3.7 or above\n\n```bash\npip install safejax --upgrade\n```\n\n## \ud83d\udcbb Usage\n\n```python\nimport jax\nfrom flax import linen as nn\nfrom jax import numpy as jnp\n\nfrom safejax.flax import serialize\n\n\nclass SingleLayerModel(nn.Module):\n    features: int\n\n    @nn.compact\n    def __call__(self, x):\n        x = nn.Dense(features=self.features)(x)\n        return x\n\n\nmodel = SingleLayerModel(features=1)\n\nrng = jax.random.PRNGKey(0)\nparams = model.init(rng, jnp.ones((1, 1)))\n\nserialized = serialize(params=params)\nassert isinstance(serialized, bytes)\nassert len(serialized) > 0\n```\n\nMore examples can be found at [`examples/`](./examples).\n\n## \ud83e\udd14 Why `safejax`?\n\n`safetensors` defines an easy and fast (zero-copy) format to store tensors,\nwhile `pickle` has some known weaknesses and security issues. `safetensors`\nis also a storage format that is intended to be trivial to the framework\nused to load the tensors. More in depth information can be found at \nhttps://github.com/huggingface/safetensors.\n\n`flax` defines a dictionary-like class named `FrozenDict` that is used to\nstore the tensors in memory, it can be dumped either into `bytes` in `MessagePack`\nformat or as a `state_dict`.\n\nAnyway, `flax` still uses `pickle` as the format for storing the tensors, so \nthere are no plans from HuggingFace to extend `safetensors` to support anything\nmore than tensors e.g. `FrozenDict`s, see their response at\nhttps://github.com/huggingface/safetensors/discussions/138.\n\nSo `safejax` was created so as to easily provide a way to serialize `FrozenDict`s\nusing `safetensors` as the tensor storage format instead of `pickle`.\n\n### \ud83d\udcc4 Main differences with `flax.serialization`\n\n* `flax.serialization.to_bytes` uses `pickle` as the tensor storage format, while\n`safejax.flax.serialize` uses `safetensors`\n* `flax.serialization.from_bytes` requires the `target` to be instantiated, while\n`safejax.flax.deserialize` just needs the encoded bytes\n\n## \ud83c\udfcb\ud83c\udffc Benchmark\n\nBenchmarks are no longer running with [`hyperfine`](https://github.com/sharkdp/hyperfine),\nas most of the elapsed time is not during the actual serialization but in the imports and\nin the model parameter initialization. So we've refactored those so as to run with pure\nPython code using `time.perf_counter` to measure the elapsed time in seconds.\n\n```bash\n$ python benchmarks/resnet50.py\nsafejax (100 runs): 2.0974 s\nflax (100 runs): 4.8734 s\n```\n\nThis means that for `ResNet50`, `safejax` is x2.3 times faster than `flax.serialization` when\nit comes to serialization, also to restate the fact that `safejax` stores the tensors with\n`safetensors` while `flax` saves those with `pickle`.\n\nBut if we use [`hyperfine`](https://github.com/sharkdp/hyperfine) as mentioned above, it needs\nto be installed first, and the `hatch`/`pyenv` environment needs to be activated\nfirst (or just install the requirements). But, due to the overhead of the script, the \nelapsed time during the serialization will be minimal compared to the rest, so the overall\nresult won't reflect well enough the efficiency diff between both approaches, as above.\n\n```bash\n$ hyperfine --warmup 2 \"python benchmarks/hyperfine/resnet50.py serialization_safejax\" \"python benchmarks/hyperfine/resnet50.py serialization_flax\"\nBenchmark 1: python benchmarks/hyperfine/resnet50.py serialization_safejax\n  Time (mean \u00b1 \u03c3):      1.778 s \u00b1  0.038 s    [User: 3.345 s, System: 0.511 s]\n  Range (min \u2026 max):    1.741 s \u2026  1.877 s    10 runs\n \nBenchmark 2: python benchmarks/hyperfine/resnet50.py serialization_flax\n  Time (mean \u00b1 \u03c3):      1.790 s \u00b1  0.011 s    [User: 3.371 s, System: 0.478 s]\n  Range (min \u2026 max):    1.771 s \u2026  1.810 s    10 runs\n \nSummary\n  'python benchmarks/hyperfine/resnet50.py serialization_safejax' ran\n    1.01 \u00b1 0.02 times faster than 'python benchmarks/hyperfine/resnet50.py serialization_flax'\n```\n\nAs we can see the difference is almost not noticeable, since the benchmark is using a \n2-tensor dictionary, which should be faster using any method. The main difference is on\nthe `safetensors` usage for the tensor storage instead of `pickle`.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "safejax",
            "package_url": "https://pypi.org/project/safejax/",
            "platform": null,
            "project_url": "https://pypi.org/project/safejax/",
            "project_urls": {
                "Documentation": "https://alvarobartt.github.io/safejax",
                "Issues": "https://github.com/alvarobartt/safejax/issues",
                "Source": "https://github.com/alvarobartt/safejax"
            },
            "release_url": "https://pypi.org/project/safejax/0.1.1/",
            "requires_dist": [
                "flax~=0.6.2",
                "jaxlib~=0.3.25",
                "jax~=0.3.25",
                "safetensors~=0.2.5",
                "black~=22.10.0; extra == 'quality'",
                "pre-commit~=2.20.0; extra == 'quality'",
                "ruff~=0.0.192; extra == 'quality'",
                "flaxmodels~=0.1.2; extra == 'tests'",
                "pytest-lazy-fixture~=0.6.3; extra == 'tests'",
                "pytest~=7.1.2; extra == 'tests'"
            ],
            "requires_python": ">=3.7",
            "summary": "Serialize JAX/Flax models with `safetensors`",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16205907,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "eb77ac2653a197547b52ed018f4b91e2",
                    "sha256": "03eac1d698b309fca54bc7806f1c112ed26c5afca3b33db82ae5f8cde3729045"
                },
                "downloads": -1,
                "filename": "safejax-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eb77ac2653a197547b52ed018f4b91e2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 5882,
                "upload_time": "2022-12-24T17:02:09",
                "upload_time_iso_8601": "2022-12-24T17:02:09.840809Z",
                "url": "https://files.pythonhosted.org/packages/6c/c5/911ad06118d9af41307a35126fcfd8690c9540ff88b3139082f319d8f3f9/safejax-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "2a93b90434f2af89be4e06ccf8f32d07",
                    "sha256": "237b1eb52502b1a7092765cae9ee09bb9b90ea2ced4284c9cfbe0c081fc6e1fb"
                },
                "downloads": -1,
                "filename": "safejax-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2a93b90434f2af89be4e06ccf8f32d07",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 6464,
                "upload_time": "2022-12-24T17:02:11",
                "upload_time_iso_8601": "2022-12-24T17:02:11.169457Z",
                "url": "https://files.pythonhosted.org/packages/ab/00/8526284f4addfa386e6f18cced4cfa7dcb06f91e7c2484dc4e78d51d6ef4/safejax-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}