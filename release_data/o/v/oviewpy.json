{
    "1.0": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1865ee6acc0d397969a6f2d1261b3da0",
                    "sha256": "51e2ba475ee95d2e21f4369004d38833563f607fc4882ed4378ef442468d1a8d"
                },
                "downloads": -1,
                "filename": "OViewPy-1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1865ee6acc0d397969a6f2d1261b3da0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 11510,
                "upload_time": "2022-07-20T08:08:40",
                "upload_time_iso_8601": "2022-07-20T08:08:40.293673Z",
                "url": "https://files.pythonhosted.org/packages/f0/4d/9d94a99de8f45b0f62e067baea2aa207cdbdb5c4367860e3e1ef67d01596/OViewPy-1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ead452001f672b997a4c68d8fbc3a37",
                    "sha256": "6b5221e5d732db36ce55df50e033880f06bdac5c45df4f764e8a7644c6134eb1"
                },
                "downloads": -1,
                "filename": "OViewPy-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5ead452001f672b997a4c68d8fbc3a37",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 11465,
                "upload_time": "2022-07-20T08:11:22",
                "upload_time_iso_8601": "2022-07-20T08:11:22.454826Z",
                "url": "https://files.pythonhosted.org/packages/63/1b/adad78da2995b294548a35360415d3c99c6a6a0e764565ccc35cb64b116b/OViewPy-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "320aa5e158e50334f8c7c48b71420b77",
                    "sha256": "80880d9f1e4549769c45750e26c979254156a1f1c9562974ca0fba14893b0e7b"
                },
                "downloads": -1,
                "filename": "OViewPy-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "320aa5e158e50334f8c7c48b71420b77",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 15823,
                "upload_time": "2022-08-22T07:29:35",
                "upload_time_iso_8601": "2022-08-22T07:29:35.483717Z",
                "url": "https://files.pythonhosted.org/packages/5e/ce/6db3593bdd9c3222cd5044ec9e5062cccdcdb4ad0b6b71e6b2021566cd67/OViewPy-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.1": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2c942a7cd830f67b75f05be038020d90",
                    "sha256": "0ba1dad5d7d06ede71a547291e86c0a9f71ca0042809f5d7a3040564033430c4"
                },
                "downloads": -1,
                "filename": "OViewPy-1.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2c942a7cd830f67b75f05be038020d90",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 15826,
                "upload_time": "2022-08-22T08:18:13",
                "upload_time_iso_8601": "2022-08-22T08:18:13.972502Z",
                "url": "https://files.pythonhosted.org/packages/82/5b/20eb2fcec17f0a21cb52cd47422c912b355d2006a9bff6863991198cee58/OViewPy-1.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.2": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "65c67726c25c0fb2ad29968d63ac7b4f",
                    "sha256": "a2dbe810a1efd054a7aa52f7070b0135e3205450edb1cfecf137184762efc28b"
                },
                "downloads": -1,
                "filename": "OViewPy-1.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "65c67726c25c0fb2ad29968d63ac7b4f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 16999,
                "upload_time": "2022-08-24T08:59:37",
                "upload_time_iso_8601": "2022-08-24T08:59:37.206730Z",
                "url": "https://files.pythonhosted.org/packages/20/a9/4f3287b153266bb3fc20501f6010b0ad4e13a33c319be940df18fda523a2/OViewPy-1.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.0": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.2.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "46ed436499dac526843f901b10e952fd",
                    "sha256": "0dc4c865626bd215081aa89c568b38a509f37d371711650e0cd6980e8fc7ea45"
                },
                "downloads": -1,
                "filename": "OViewPy-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "46ed436499dac526843f901b10e952fd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 29449,
                "upload_time": "2022-11-18T06:44:02",
                "upload_time_iso_8601": "2022-11-18T06:44:02.873593Z",
                "url": "https://files.pythonhosted.org/packages/1d/5d/45e85df639258641c97f31533e237c65526e6e7eb93643fe8f30755d10d9/OViewPy-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.1": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description": "# PilotGaea O'View Map Server API for Python\n\n\u4f7f\u7528 PilotGaea O'View Map Server API for Python \u5728 Python \u4e2d\u8655\u7406O'View Map Server\u767c\u5e03\u7684\u5730\u5716\u548c\u5730\u7406\u7a7a\u9593\u6578\u64da\u3002  \n\u9019\u500blibrary\u53ef\u8b80\u53d6\u3001\u7de8\u8f2f\u3001\u5206\u6790\u3001\u4e0a\u67b6\u7531O'View Map Server\u767c\u5e03\u4e4b\u5730\u5716\u5716\u50cf\u8207\u5411\u91cf\u8cc7\u6599\uff0c\u4e26\u53ef\u900f\u904eAPI\u64cd\u4f5c\u8f38\u51fa\u53ca\u767c\u4f48\u8655\u7406\u5f8c\u7684\u6210\u679c\u3002  \n\u6b64library\u53ea\u652f\u63f4\u7531 O'View Map Server \u767c\u4f48\u7684\u5716\u8cc7\uff0c\u66ab\u4e0d\u652f\u63f4\u5916\u90e8\u8cc7\u6599\u8655\u7406\u3002\n\n## \u5b89\u88ddPliotGaea Python Module\n\n```shell\npip install OViewPy\n```\n\n## \u5b89\u88ddServer\u7aefPlugin\n\n\u7531\u65bc\u9700\u8981\u900f\u904eO'View Map Server \u53d6\u5f97\u5716\u8cc7\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5b89\u88dd\u76f8\u95dc\u7684Plugin\u3002  \n\u76f8\u95dc\u7684Plugin\u653e\u7f6e\u65bc\u5b89\u88dd\u76ee\u9304\u4e0b\u7684Python\u8cc7\u6599\u593e\u4e0b(`C:\\Program Files\\PilotGaea\\TileMap\\Python`)\u3002  \n\u8acb\u5c07\u8cc7\u6599\u593e\u5167\u7684dll\u6a94\u8907\u88fd\u9032\u5b89\u88dd\u76ee\u9304\u4e0b\u7684plugins\u8cc7\u6599\u593e\u5167(`C:\\Program Files\\PilotGaea\\TileMap\\plugins`)\uff0c\u4e26\u91cd\u65b0\u555f\u52d5Server\u5373\u53ef\u5b8c\u6210\u5b89\u88dd\u3002\n\n## \u521d\u59cb\u5316Server\u7269\u4ef6\n\n\u672c\u7ae0\u7bc0\u70baPliotGaea Python Module\u7684\u8d77\u59cb\u9ede\uff0c\u5728\u57f7\u884c\u6240\u6709\u64cd\u4f5c\u524d\u9808\u5148\u521d\u59cb\u5316Server\u7269\u4ef6\uff0c\u63d0\u4f9bModule\u53d6\u5f97Map Server\u8cc7\u6e90\u7684\u76f8\u95dc\u9023\u7dda\u8cc7\u8a0a\u3002\n\n```python\nfrom OViewPy.server import Server\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n```\n\n\u7d81\u5b9aServer\u7269\u4ef6\u5f8c\uff0c\u5373\u53ef\u53d6\u5f97Server\u76f8\u95dc\u8cc7\u8a0a\u3002\n\n```python\nfrom OViewPy.server import Server\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u53d6\u5f97\u76ee\u524dServer\u7248\u672c\nprint(\"OView Map Server Version\uff1a\",server.version)\n# \u53d6\u5f97WMTS URL\nprint(\"WMTS URL\uff1a\",server.wmtsURL)\n# \u53d6\u5f97WMS URL\nprint(\"WMS URL\uff1a\",server.wmsURL)\n# \u53d6\u5f97DoCommand URL\nprint(\"DoCommand URL\uff1a\",server.docmdURL)\n```\n\n### \u53d6\u5f97\u5716\u5c64\u5217\u8868\n\n\u7d81\u5b9aServer\u7269\u4ef6\u5f8c\uff0c\u53ef\u900f\u904e`getLayerList`\u53d6\u5f972D\u5716\u5c64\u5217\u8868\u8a73\u7d30\u8cc7\u8a0a\u3002  \n\u4ea6\u53ef\u4f7f\u7528`getOViewLayerList`\u53d6\u5f973D\u5716\u5c64\u5217\u8868\u8a73\u7d30\u8cc7\u8a0a\u3002\n\n```python\nfrom OViewPy.server import Server\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\nlayerList = server.getLayerList()\nOViewLayerList = server.getOViewLayerList()\nfor list in layerList:\n    print(\"\u5716\u5c64\u540d\u7a31\uff1a\",list[\"layername\"],\"\u5716\u5c64\u985e\u5225\uff1a\",list[\"type\"])\nprint(\"===========================================\")\nfor list in OViewLayerList:\n    print(\"\u5716\u5c64\u540d\u7a31\uff1a\",list[\"layername\"],\"\u5716\u5c64\u985e\u5225\uff1a\",list[\"type\"])\n\n```\n\n### \u522a\u9664\u5716\u5c64\n\n\u5982\u679c\u60f3\u8981\u522a\u9664Server\u4e2d\u5df2\u5b58\u5728\u7684\u5716\u5c64\uff0c\u53ef\u900f\u904e`deleteLayer`\u8207`deleteOViewLayer`\u5206\u5225\u522a\u96642D\u53ca3D\u5716\u5c64\u3002\n> \u6ce8\u610f\uff01\u6b64\u522a\u9664\u7121\u6cd5\u5fa9\u539f\uff0c\u8acb\u8b66\u614e\u4f7f\u7528\u3002\n\n```python\nfrom OViewPy.server import Server\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\nserver.deleteLayer(layerName=\"ne_10m_lakes\")\nserver.deleteOViewLayer(layerName=\"ModelSet\")\n```\n\n### \u4e0a\u67b6\u5716\u5c64\n\n#### \u5c07\u5716\u7247\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e`saveImageToServer`\u53ef\u5c07\u5716\u7247(JPG\u3001PNG\u7b49)\u4e0a\u67b6\u81f3Server\n\n> \u9700\u7279\u5225\u6ce8\u610f\uff0c\u4e0a\u67b6\u7684\u5716\u7247\u9700\u5728Server\u7aef\u76ee\u9304\u5e95\u4e0b\uff0c\u4e26\u6709\u76f8\u5c0d\u61c9\u7684World File\uff0c\u4e14\u78ba\u8a8d\u5716\u5c64\u540d\u7a31\u4e0d\u662f\u5df2\u5b58\u5728\u7684\u5716\u5c64\u3002\n\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| imageFilePath | string | None | \u5716\u7247\u6a94\u6848\u4f4d\u7f6e |\n| layerName | string | None | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.da import da\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nlayer = VectorLayer(server=server,layerName=\"Town_MOI\")\nboundary=GeoBoundary(147522.218692, 2422004.773002,\n                         351690.114369, 2813163.248085)\n# \u53d6\u5f97\u5716\u7247\uff0c\u53d6\u5f97\u6210\u529f\u6703\u56de\u50b3\u5716\u7247bytes\u8cc7\u6599\nimg = layer.getMapImage(\n    boundary=boundary,\n    crs=\"EPSG:3826\",\n    width=512,\n    height=512,\n    format=\"image/png\"\n)\n# \u5132\u5b58\u5716\u7247\uff0c\u4e26\u751f\u6210World File\nda.saveImg(\n    img=img,\n    savePath=\".\",\n    imgName=\"testImage\",\n    imgType=\"png\",\n    worldFile=True,\n    boundary=boundary\n)\n# \u5c07\u5716\u7247\u4e0a\u67b6\u81f3Server\nserver.saveImageToServer(\n    imageFilePath=\"D:\\\\NCHCProject\\\\jupyter_notebook\\\\testImage.png\",\n    layerName=\"testImage\",\n    epsg=3826\n)\n```\n\n#### \u5c07SHP File\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e`saveVectorFileToServer`\u53ef\u5c07Shp File\u4e0a\u67b6\u81f3Server\n\n> \u9700\u7279\u5225\u6ce8\u610f\uff0c\u4e0a\u67b6\u7684Shp File\u9700\u5728Server\u7aef\u76ee\u9304\u5e95\u4e0b\uff0c\u4e26\u78ba\u8a8d\u5716\u5c64\u540d\u7a31\u4e0d\u662f\u5df2\u5b58\u5728\u7684\u5716\u5c64\u3002\n\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| VectorFilePath | string | None | Shp File\u4f4d\u7f6e |\n| layerName | string | None | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.da import da\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nmap = VectorLayer(server=server, layerName=\"Town_MOI\")\n# \u8a2d\u5b9a\u641c\u5c0b\u689d\u4ef6\nsql = \"County_ID==64\"\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\nret = map.getVectorEntity(epsg=3826,sql=sql)\n# \u5c07\u5411\u91cf\u8cc7\u6599\u5b58\u6210SHP\u6a94\nda.saveAsShapeFile(sourceGeo=ret[\"geo\"],sourceAttr=ret[\"attr\"],fileName=\"TestShp_Kh\")\n# \u5c07SHP\u6a94\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nserver.saveVectorFileToServer(VectorFilePath=\"D:\\\\NCHCProject\\\\jupyter_notebook\\\\TestShp_Kh.shp\",layerName=\"TestShp_Kh\",epsg=3826)\n```\n\n#### \u5c07tif\u6a94\u8f49\u6210dem\u6a94\uff0c\u4e26\u5c07dem\u6a94\u4e0a\u67b6\u4f3a\u670d\u5668\u70ba\u5730\u5f62\u5716\u5c64\n\n\u65bc3d\u7684\u8f49\u6a94\u9700\u8981\u8f03\u4e45\u7684\u6642\u9593\uff0c\u56e0\u6b64\u8f49\u6a94\u7684\u51fd\u5f0f\u6703\u56de\u50b3\u4e00\u500bid(\u5982: `server.tifToDem`)  \n\u53ef\u4ee5\u900f\u904e\u6b64id\uff0c\u53bb\u8ddfserver\u8a62\u554f\u9032\u5ea6  \n\u7576\u8f49\u6a94\u6210\u529f\u53ef\u4ee5\u900f\u904e`server.save3dToServer`\u5c07\u6b64\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668  \n`server.save3dToServer`\u53ef\u4ee5\u900f\u904eid\u6216\u662fDB\u4f4d\u7f6e\u5c07\u5176\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.varstruct import LAYER_TYPE\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# tif\u6a94\u8f49\u6210dem\u6a94\nid = server.tifToDem(inputTifFile=\"defaultTIF.tif\", outputDemFile=\"defaultDEM2.dem\")\n# \u56de\u50b3\u8f49\u6a94\u9032\u5ea6\u76f4\u5230\u8f49\u6a94\u5b8c\u6210\nserver.getConvert3dProgressToFinish(id)\n# dem\u6a94\u8f49\u6210\u5730\u5f62\u5716\u5c64\nid = server.convertTerrain(\"testDem\", \"testDem.DB\", \"./defaultDEM2.dem\", \"4326\")\n# \u5c07\u6b64\u5730\u5f62\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nserver.save3dToServer(dbLayerName=\"testDem\", layerName=\"testDem\", layerType=LAYER_TYPE.OV_TERRAIN.name, dbUrl=\"./testDem.DB\")\n```\n\n#### \u5c07\u50be\u659c\u651d\u5f71\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e\u7d81\u5b9a\u7684server\u7269\u4ef6\uff0c\u4e26\u63d0\u4f9b\u6b32\u8a2d\u5b9a\u7684\u5716\u5c64\u540d\u7a31(`layerName`)\u53ca\u8f38\u51fa\u683c\u5f0f(`exportType`)\uff0c\u5c07\u50be\u659c\u651d\u5f71\u8f49\u6a94\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668  \n\u7531\u65bc3d\u7684\u8f49\u6a94\u9700\u8981\u8f03\u4e45\u7684\u6642\u9593\uff0c\u56e0\u6b64\u8f49\u6a94\u7684\u51fd\u5f0f\u6703\u56de\u50b3\u4e00\u500bid(\u5982: `server.convertPhotogrammetry`)  \n\u53ef\u4ee5\u900f\u904e\u6b64id\uff0c\u53bb\u8ddfserver\u8a62\u554f\u9032\u5ea6  \n\u7576\u8f49\u6a94\u6210\u529f\u900f\u904e`server.save3dToServer`\u4f9dDB\u4f4d\u7f6e\u5c07\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668(\u82e5\u8f38\u51fa\u6a94\u6848\u683c\u5f0f\u70ba3DTILES\u5247\u4e0d\u4e0a\u67b6)  \n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u53ef\u8f38\u5165\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :---: | :--: |\n| layerName | string | None | --- | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| layerDBFile | string | \u9810\u8a2d\u540d\u7a31\u8207layerName\u76f8\u540c | --- | \u8f49\u6a94\u5f8c\u7522\u751f\u7684DB\u6a94\u540d\u7a31 |\n| inputFileName | string | None | --- | \u6b32\u8f49\u6a94\u6a94\u6848\u4f4d\u7f6e |\n| terrainDBFile | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u4f4d\u7f6e |\n| terrainName | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u540d\u7a31 |\n| exportType | string | None | NORMAL\u3001I3S\u30013DTILES | \u8f38\u51fa\u6a94\u6848\u683c\u5f0f |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.varstruct import LAYER_TYPE\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u8a2d\u5b9alayer\u540d\u7a31\nlayerName = \"photogrammetry\"\n# \u8a2d\u5b9aexportType(\u53ef\u8f38\u5165'NORMAL' or 'I3S' or '3DTILES')\nexportType = \"NORMAL\"\n# \u8f49\u6a94\u50be\u659c\u651d\u5f71\u5716\u5c64\uff0c\u4e26\u6703\u751f\u6210\u5176\u5c0d\u61c9\u4e4bDB\nid = server.convertPhotogrammetry(layerName=layerName,\n                                  layerDBFile=layerName + \".DB\",\n                                  inputFileName=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u6a21\u578b\\\\\u4e00\u9580\u4e09\u7bc0\u574a\\\\Acute3D\\\\\u4e00\u9580\u4e09\u7bc0\u574a\\\\Data\\\\LODTreeExport.xml\", \n                                  terrainDBFile=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u9ad8\u7a0b\\\\Terrain20M.DB\", \n                                  terrainName=\"terrain\",\n                                  exportType=exportType)\n# \u56de\u50b3\u8f49\u6a94\u9032\u5ea6\u76f4\u5230\u8f49\u6a94\u5b8c\u6210\nserver.getConvert3dProgressToFinish(id)\n\n# \u5c07\u6b64\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nif exportType.upper() == \"NORMAL\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_PHOTOGRAMMETRYMODEL.name, dbUrl = layerName + \".DB\")\nelif exportType.upper() == \"I3S\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_OGCI3S.name, dbUrl = layerName + \".DB\")\n```\n\n#### \u5c07\u7ba1\u7dda\u5716\u5c64\u8f49\u6a94\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e\u7d81\u5b9a\u7684server\u7269\u4ef6\uff0c\u4e26\u63d0\u4f9b\u6b32\u8a2d\u5b9a\u7684\u5716\u5c64\u540d\u7a31(`layerName`)\u3001\u6a94\u6848\u683c\u5f0f(`mlayerType`)\u53ca\u8f38\u51fa\u683c\u5f0f(`exportType`)\uff0c\u5c07\u7ba1\u7dda\u5716\u5c64\u8f49\u6a94\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668  \n\u7531\u65bc3d\u7684\u8f49\u6a94\u9700\u8981\u8f03\u4e45\u7684\u6642\u9593\uff0c\u56e0\u6b64\u8f49\u6a94\u7684\u51fd\u5f0f\u6703\u56de\u50b3\u4e00\u500bid(\u5982: `server.convertPipeline`)  \n\u53ef\u4ee5\u900f\u904e\u6b64id\uff0c\u53bb\u8ddfserver\u8a62\u554f\u9032\u5ea6  \n\u7576\u8f49\u6a94\u6210\u529f\u900f\u904e`server.save3dToServer`\u4f9dDB\u4f4d\u7f6e\u5c07\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668(\u82e5\u8f38\u51fa\u6a94\u6848\u683c\u5f0f\u70ba3DTILES\u5247\u4e0d\u4e0a\u67b6)  \n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u53ef\u8f38\u5165\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :---: | :--: |\n| layerName | string | None | --- | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| terrainName | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u540d\u7a31 |\n| terrainDBFile | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u4f4d\u7f6e |\n| sourceFile | string | None | --- | \u6b32\u8f49\u6a94\u6a94\u6848\u4f4d\u7f6e |\n| epsg | int | None | --- | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n| mlayerType | string | None | PIPELINE\u3001MANHOLE\u3001EQUIPMENT | \u6b32\u8f49\u6a94\u6a94\u6848\u683c\u5f0f |\n| exportType | string | None | NORMAL\u3001I3S\u30013DTILES | \u8f38\u51fa\u6a94\u6848\u683c\u5f0f |\n| layerDBFile | string | \u9810\u8a2d\u540d\u7a31\u8207layerName\u76f8\u540c | --- | \u8f49\u6a94\u5f8c\u7522\u751f\u7684DB\u6a94\u540d\u7a31 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.varstruct import LAYER_TYPE\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u8a2d\u5b9alayer\u540d\u7a31\nlayerName = \"EQUIPMENTTry\"\n# \u8a2d\u5b9amlayerType(\u53ef\u8f38\u5165'PIPELINE' or 'MANHOLE' or 'EQUIPMENT')\nmlayerType = \"EQUIPMENT\"\n# \u8a2d\u5b9aexportType(\u53ef\u8f38\u5165'NORMAL' or 'I3S' or '3DTILES')\nexportType = \"NORMAL\"\n# \u8f49\u6a94\u7ba1\u7dda\u3001\u4eba\u624b\u5b54\u53ca\u8a2d\u5099\u5716\u5c64\uff0c\u4e26\u6703\u751f\u6210\u5176\u5c0d\u61c9\u4e4bDB\nid = server.convertPipeline(layerName=layerName,\n                            terrainName=\"terrain\",\n                            terrainDBFile=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u9ad8\u7a0b\\\\Terrain20M.DB\", \n                            sourceFile=\"C:\\\\Users\\\\vaness.chen\\\\Downloads\\\\\u53f0\u4e2d\u5168\u5340SHP_T\\\\\u53f0\u4e2d\u5168\u5340SHP_T1\\\\\u4e00\u822c\u4f9b\u96fb_\u8a2d\u5099.shp\",\n                            epsg=\"3826\",\n                            mlayerType=mlayerType,\n                            exportType=exportType,\n                            layerDBFile=layerName + \".DB\",\n                            )\n# \u56de\u50b3\u8f49\u6a94\u9032\u5ea6\u76f4\u5230\u8f49\u6a94\u5b8c\u6210\nserver.getConvert3dProgressToFinish(id)\n# \u5c07\u6b64\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nif exportType.upper() == \"NORMAL\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_PIPELINE.name, dbUrl = layerName + \".DB\")\nelif exportType.upper() == \"I3S\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_OGCI3S.name, dbUrl = layerName + \".DB\")\n```\n\n#### \u5c07\u9ede\u96f2\u5716\u5c64\u8f49\u6a94\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e\u7d81\u5b9a\u7684server\u7269\u4ef6\uff0c\u4e26\u63d0\u4f9b\u6b32\u8a2d\u5b9a\u7684\u5716\u5c64\u540d\u7a31(`layerName`)\u53ca\u8f38\u51fa\u683c\u5f0f(`exportType`)\uff0c\u5c07\u9ede\u96f2\u5716\u5c64\u8f49\u6a94\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668  \n\u7531\u65bc3d\u7684\u8f49\u6a94\u9700\u8981\u8f03\u4e45\u7684\u6642\u9593\uff0c\u56e0\u6b64\u8f49\u6a94\u7684\u51fd\u5f0f\u6703\u56de\u50b3\u4e00\u500bid(\u5982: `server.convertPointcloud`)  \n\u53ef\u4ee5\u900f\u904e\u6b64id\uff0c\u53bb\u8ddfserver\u8a62\u554f\u9032\u5ea6  \n\u7576\u8f49\u6a94\u6210\u529f\u900f\u904e`server.save3dToServer`\u4f9dDB\u4f4d\u7f6e\u5c07\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668(\u82e5\u8f38\u51fa\u6a94\u6848\u683c\u5f0f\u70ba3DTILES\u5247\u4e0d\u4e0a\u67b6)  \n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u53ef\u8f38\u5165\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :---: | :--: |\n| layerName | string | None | --- | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| layerDBFile | string | \u9810\u8a2d\u540d\u7a31\u8207layerName\u76f8\u540c | --- | \u8f49\u6a94\u5f8c\u7522\u751f\u7684DB\u6a94\u540d\u7a31 |\n| pointcloudFileNames | string | None | --- | \u6b32\u8f49\u6a94\u6a94\u6848\u4f4d\u7f6e |\n| terrainName | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u540d\u7a31 |\n| terrainDBFile | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u4f4d\u7f6e |\n| sourceEPSG | int | None | --- | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n| exportType | string | None | NORMAL\u3001I3S\u30013DTILES | \u8f38\u51fa\u6a94\u6848\u683c\u5f0f |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.varstruct import LAYER_TYPE\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u8a2d\u5b9alayer\u540d\u7a31\nlayerName = \"PointcloudTry\"\n# \u8a2d\u5b9aexportType(\u53ef\u8f38\u5165'NORMAL' or 'I3S' or '3DTILES')\nexportType = \"NORMAL\"\n# \u8f49\u6a94\u7ba1\u7dda\u5716\u5c64\uff0c\u4e26\u6703\u751f\u6210\u5176\u5c0d\u61c9\u4e4bDB\nid = server.convertPointcloud(layerName=layerName,\n                              layerDBFile=layerName + \".DB\",\n                              pointcloudFileNames=\"C:\\\\Users\\\\vaness.chen\\\\Downloads\\\\\u9ede\u96f2\u5716\u5c64\\\\\u9ede\u96f2\u5716\u5c64\\\\field-1.las\",\n                              terrainName=\"terrain\",\n                              terrainDBFile=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u9ad8\u7a0b\\\\Terrain20M.DB\",\n                              sourceEPSG=\"3826\",\n                              exportType=exportType\n                             )\n# \u56de\u50b3\u8f49\u6a94\u9032\u5ea6\u76f4\u5230\u8f49\u6a94\u5b8c\u6210\nserver.getConvert3dProgressToFinish(id)\n# \u5c07\u6b64\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nif exportType.upper() == \"NORMAL\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_POINTCLOUD.name, dbUrl = layerName + \".DB\")\nelif exportType.upper() == \"I3S\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_OGCI3S.name, dbUrl = layerName + \".DB\")\n```\n\n#### \u5c07shp\u6a94\u8f49\u6210ModelSet\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e\u7d81\u5b9a\u7684server\u7269\u4ef6\uff0c\u4e26\u63d0\u4f9b\u6b32\u8a2d\u5b9a\u7684\u5716\u5c64\u540d\u7a31(`layerName`)\u53ca\u8f38\u51fa\u683c\u5f0f(`exportType`)\uff0c\u5c07shp\u6a94\u8f49\u6a94\u6a21\u578b\u96c6\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668  \n\u7531\u65bc3d\u7684\u8f49\u6a94\u9700\u8981\u8f03\u4e45\u7684\u6642\u9593\uff0c\u56e0\u6b64\u8f49\u6a94\u7684\u51fd\u5f0f\u6703\u56de\u50b3\u4e00\u500bid(\u5982: `server.shpToModelSet`)  \n\u53ef\u4ee5\u900f\u904e\u6b64id\uff0c\u53bb\u8ddfserver\u8a62\u554f\u9032\u5ea6  \n\u7576\u8f49\u6a94\u6210\u529f\u900f\u904e`server.save3dToServer`\u4f9dDB\u4f4d\u7f6e\u5c07\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668(\u82e5\u8f38\u51fa\u6a94\u6848\u683c\u5f0f\u70ba3DTILES\u5247\u4e0d\u4e0a\u67b6)  \n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u53ef\u8f38\u5165\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :---: | :--: |\n| layerName | string | None | --- | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| layerDBFile | string | \u9810\u8a2d\u540d\u7a31\u8207layerName\u76f8\u540c | --- | \u8f49\u6a94\u5f8c\u7522\u751f\u7684DB\u6a94\u540d\u7a31 |\n| terrainName | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u540d\u7a31 |\n| terrainDBFile | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u4f4d\u7f6e |\n| sourceFileName | string | None | --- | \u6b32\u8f49\u6a94\u6a94\u6848\u4f4d\u7f6e |\n| heightField | string | None | --- | \u5c4b\u9802\u9ad8\u6b04\u4f4d\u7684\u540d\u7a31 |\n| epsg | int | None | --- | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n| exportType | string | None | NORMAL\u3001I3S\u30013DTILES | \u8f38\u51fa\u6a94\u6848\u683c\u5f0f |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.varstruct import LAYER_TYPE\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u8a2d\u5b9alayer\u540d\u7a31\nlayerName = \"shpModelSetTry\"\n# \u8a2d\u5b9aexportType(\u53ef\u8f38\u5165'NORMAL' or 'I3S' or '3DTILES')\nexportType = \"NORMAL\"\n# \u8f49\u6a94\u7ba1\u7dda\u5716\u5c64\uff0c\u4e26\u6703\u751f\u6210\u5176\u5c0d\u61c9\u4e4bDB\nid = server.shpToModelSet(layerName=layerName,\n                          layerDBFile=layerName + \".DB\",\n                          terrainName=\"terrain\",\n                          terrainDBFile=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u9ad8\u7a0b\\\\Terrain20M.DB\",\n                          sourceFileName=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u6a21\u578b\\\\modelset\u7df4\u7fd2\u7528\\\\TaipeiBuilding2.shp\",\n                          heightField=\"\u5c4b\u9802\u9ad8\u7a0b\",\n                          epsg=4326,\n                          exportType=exportType)\n# \u56de\u50b3\u8f49\u6a94\u9032\u5ea6\u76f4\u5230\u8f49\u6a94\u5b8c\u6210\nserver.getConvert3dProgressToFinish(id)\n# \u5c07\u6b64\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nif exportType.upper() == \"NORMAL\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_MODELSET.name, dbUrl = layerName + \".DB\")\nelif exportType.upper() == \"I3S\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_OGCI3S.name, dbUrl = layerName + \".DB\")\n```\n\n#### \u5c07huge\u6a94\u8f49\u6210Model\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\n\n\u900f\u904e\u7d81\u5b9a\u7684server\u7269\u4ef6\uff0c\u4e26\u63d0\u4f9b\u6b32\u8a2d\u5b9a\u7684\u5716\u5c64\u540d\u7a31(`layerName`)\u53ca\u8f38\u51fa\u683c\u5f0f(`exportType`)\uff0c\u5c07huge\u6a94\u8f49\u6a94\u6a21\u578b\u4e26\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668  \n\u7531\u65bc3d\u7684\u8f49\u6a94\u9700\u8981\u8f03\u4e45\u7684\u6642\u9593\uff0c\u56e0\u6b64\u8f49\u6a94\u7684\u51fd\u5f0f\u6703\u56de\u50b3\u4e00\u500bid(\u5982: `server.hugeModelToModelLayer`)  \n\u53ef\u4ee5\u900f\u904e\u6b64id\uff0c\u53bb\u8ddfserver\u8a62\u554f\u9032\u5ea6  \n\u7576\u8f49\u6a94\u6210\u529f\u900f\u904e`server.save3dToServer`\u4f9dDB\u4f4d\u7f6e\u5c07\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668(\u82e5\u8f38\u51fa\u6a94\u6848\u683c\u5f0f\u70ba3DTILES\u5247\u4e0d\u4e0a\u67b6)  \n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u53ef\u8f38\u5165\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :---: | :--: |\n| dbPath | string | \u9810\u8a2d\u540d\u7a31\u8207layerName\u76f8\u540c | --- | \u8f49\u6a94\u5f8c\u7522\u751f\u7684DB\u6a94\u540d\u7a31 |\n| layerName | string | None | --- | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\n| terrainDBFile | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u4f4d\u7f6e |\n| terrainName | string | None | --- | \u521d\u59cb\u5730\u5f62\u5716\u5c64\u540d\u7a31 |\n| sourceFileName | string | None | --- | \u6b32\u8f49\u6a94\u6a94\u6848\u4f4d\u7f6e |\n| exportType | string | None | NORMAL\u3001I3S\u30013DTILES | \u8f38\u51fa\u6a94\u6848\u683c\u5f0f |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.varstruct import LAYER_TYPE\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u8a2d\u5b9alayer\u540d\u7a31\nlayerName = \"hugeModelTry\"\n# \u8a2d\u5b9aexportType(\u53ef\u8f38\u5165'NORMAL' or 'I3S' or '3DTILES')\nexportType = \"NORMAL\"\n# \u8f49\u6a94HugeModel\u5716\u5c64\uff0c\u4e26\u6703\u751f\u6210\u5176\u5c0d\u61c9\u4e4bDB\nid = server.hugeModelToModelLayer(dbPath=layerName + \".DB\",\n                                  layerName=layerName,\n                                  terrainDBFile=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u9ad8\u7a0b\\\\Terrain20M.DB\",\n                                  terrainName=\"terrain\",\n                                  sourceFileName=\"C:\\\\Users\\\\vaness.chen\\\\Desktop\\\\3DTEST\\\\\u57fa\u672c\u5716\u8cc7\\\\\u6a21\u578b\\\\HugeModel\u7df4\u7fd2\u7528\\\\-Z_Y.obj\",\n                                  exportType=exportType\n                                 )\n# \u56de\u50b3\u8f49\u6a94\u9032\u5ea6\u76f4\u5230\u8f49\u6a94\u5b8c\u6210\nserver.getConvert3dProgressToFinish(id)\n# \u5c07\u6b64\u5716\u5c64\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\nif exportType.upper() == \"NORMAL\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_MODEL.name, dbUrl = layerName + \".DB\")\nelif exportType.upper() == \"I3S\":\n    server.save3dToServer(dbLayerName=layerName, layerName=layerName, layerType=LAYER_TYPE.OV_OGCI3S.name, dbUrl = layerName + \".DB\")\n```\n\n## Layer Module (2D Layer)\n\n### \u53d6\u5f97\u5716\u5c64\u7269\u4ef6\n\n\u6b64Module\u5206\u70ba`RasterLayer`\u8207`VectorLayer`\u5169\u7a2e\u5716\u5c64\uff0c\u5728\u521d\u59cb\u5316\u5716\u5c64\u6642\u8acb\u9078\u64c7\u6b63\u78ba\u7684\u5716\u5c64\u5206\u985e\u3002  \n\u7b2c\u4e00\u500b\u53c3\u6578(`server`)\u653e\u7f6e\u5df2\u7d81\u5b9a\u7684Server\u7269\u4ef6\uff0c\u7b2c\u4e8c\u500b\u53c3\u6578(`layerName`)\u653e\u7f6e\u8981\u53d6\u5f97\u7684\u5716\u5c64\u540d\u7a31\u3002  \n\u53d6\u5f97\u5716\u5c64\u7269\u4ef6\u5f8c\uff0c\u5373\u53ef\u900f\u904e``getLayerInfo``\u53d6\u5f97\u5716\u5c64\u76f8\u95dc\u8cc7\u8a0a\u3002\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import RasterLayer,VectorLayer\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nraster = RasterLayer(server=server,layerName=\"GlobalPreview_Rough\")\nvector = VectorLayer(server=server,layerName=\"Town_MOI\")\nprint(raster.layerInfo)\nprint(vector.layerInfo)\n```\n\n\u900f\u904e``getMapImage``\u53ef\u53d6\u5f97\u7d66\u5b9a\u7bc4\u570d\u5167\u7684\u5730\u5716\u5716\u7247\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n\n> \u6b64Function\u9069\u7528\u65bc`RasterLayer`\u8207`VectorLayer`\u3002\n\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5716\u7247\u7bc4\u570d\u3002\u5982\u672a\u7d66\u503c\uff0c\u5c07\u76f4\u63a5\u53d6\u5f97\u5b8c\u6574\u5716\u7247\u3002 |\n| width | int | 512 | \u5716\u7247\u5bec\u5ea6 |\n| height | int | 512 | \u5716\u7247\u9ad8\u5ea6 |\n| crs | string | EPSG:4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n| format | string | image/png | \u5716\u7247\u683c\u5f0f |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.da import da\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nlayer = VectorLayer(server=server,layerName=\"Town_MOI\")\n# \u53d6\u5f97\u5716\u7247\uff0c\u53d6\u5f97\u6210\u529f\u6703\u56de\u50b3\u5716\u7247bytes\u8cc7\u6599\nimg = layer.getMapImage(\n    boundary=GeoBoundary(147522.218692, 2422004.773002,\n                         351690.114369, 2813163.248085),\n    crs=\"EPSG:3826\",\n    width=512,\n    height=512,\n    format=\"image/png\"\n)\n# \u986f\u793a\u5716\u7247\nda.showImg(img)\n```\n\n\u5982\u679c\u5716\u5c64\u7269\u4ef6\u70ba`VectorLayer`\uff0c\u53ef\u900f\u904e`getVectorEntity`\u53d6\u5f97\u4e00\u5b9a\u7bc4\u570d\u5167\u7684\u5411\u91cf\u8cc7\u6599\u3002  \n\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| bound | GeoBoundary/GeoPolygon | None | \u6b32\u53d6\u5f97\u5411\u91cf\u8cc7\u6599\u7bc4\u570d\u3002\u5982\u672a\u7d66\u503c\uff0c\u5c07\u76f4\u63a5\u53d6\u5f97\u5b8c\u6574\u5716\u5c64\u5411\u91cf\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n| sql | string | \"\" | \u641c\u5c0b\u689d\u4ef6 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nmap = VectorLayer(server=server, layerName=\"Town_MOI\")\n# \u8a2d\u5b9a\u641c\u5c0b\u689d\u4ef6\nsql = \"County_ID=64\"\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\nret = map.getVectorEntity(epsg=3826,sql=sql)\nprint(\"Geo\uff1a\", ret[\"geo\"][0].ToDict())\nprint(\"Attr\uff1a\", ret[\"attr\"][0].ToDict())\n```\n\n## OViewLayer Module\n\n\u6b64Module\u5206\u70ba`TerrainLayer`\u3001`PipeLineLayer`\u3001`ModelLayer`\u3001`ModelSetLayer`\u7b494\u7a2e3D\u6a21\u578b\u5716\u5c64\u3002  \n\u7b2c\u4e00\u500b\u53c3\u6578(`server`)\u653e\u7f6e\u5df2\u7d81\u5b9a\u7684Server\u7269\u4ef6\uff0c\u7b2c\u4e8c\u500b\u53c3\u6578(`layerName`)\u653e\u7f6e\u8981\u53d6\u5f97\u7684\u5716\u5c64\u540d\u7a31\u3002  \n\u53d6\u5f97\u5716\u5c64\u7269\u4ef6\u5f8c\uff0c\u5373\u53ef\u900f\u904e``getLayerInfo``\u53d6\u5f97\u5716\u5c64\u76f8\u95dc\u8cc7\u8a0a\u3002\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer, PipeLineLayer, ModelLayer, ModelSetLayer\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nTerrain = TerrainLayer(server=server, layerName=\"gebco_2021_geotiff_retransfer\")\nPipeLine = PipeLineLayer(server=server, layerName=\"TaichungPipeline\")\nModel = ModelLayer(server=server, layerName=\"ChungHsingBIM\")\nModelSet = ModelSetLayer(server=server, layerName=\"TaichungKMZ\")\nprint(Terrain.layerInfo)\nprint(PipeLine.layerInfo)\nprint(Model.layerInfo)\nprint(ModelSet.layerInfo)\n```\n\n### TerrainLayer\n\n#### getDEMMatrix\n\n`TerrainLayer`\u53ef\u900f\u904e`getDEMMatrix`\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u8cc7\u6599\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | boundary EPSG |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer\nfrom OViewPy.varstruct import GeoBoundary\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nTerrain = TerrainLayer(\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\nboundary = GeoBoundary(119.981273, 21.892673,\n                       122.010898, 25.424327)\nmatrix = Terrain.getDEMMatrix(boundary=boundary, cellDemSize=500, epsg=4326)\nprint(type(matrix))\n```\n\n#### hillshadeAnalysis\n\n\u53d6\u5f97\u5c71\u9ad4\u9670\u5f71\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70baGeoTiff\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | boundary EPSG |\n| azimuth | int | 30 | \u592a\u967d\u65b9\u4f4d\u89d2 |\n| altitude | int | 30 | \u592a\u967d\u9ad8\u5ea6\u89d2 |\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\n| width | int | 21600 | \u5716\u7247\u5bec |\n| height | int | 21600 | \u5716\u7247\u9ad8 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer\nfrom OViewPy.varstruct import GeoBoundary\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nTerrain = TerrainLayer(\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\nboundary = GeoBoundary(119.981273, 21.892673,\n                       122.010898, 25.424327)\nTerrain.hillshadeAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,\n                          azimuth=150, altitude=60,\n                          savePath=\".\", fileName=\"defaultHillShade\", width=10800, height=21600)\n\n```\n\n#### slopeAnalysis\n\n\u53d6\u5f97\u5761\u5ea6\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70baGeoTiff\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | boundary EPSG |\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\n| width | int | 21600 | \u5716\u7247\u5bec |\n| height | int | 21600 | \u5716\u7247\u9ad8 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer\nfrom OViewPy.varstruct import GeoBoundary\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nTerrain = TerrainLayer(\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\nboundary = GeoBoundary(119.981273, 21.892673,\n                       122.010898, 25.424327)\nTerrain.slopeAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,\n                      savePath=\".\", fileName=\"defaultSlope\", width=10800, height=21600)\n\n```\n\n#### aspectAnalysis\n\n\u53d6\u5f97\u5761\u5411\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70baGeoTiff\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | boundary EPSG |\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\n| width | int | 21600 | \u5716\u7247\u5bec |\n| height | int | 21600 | \u5716\u7247\u9ad8 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer\nfrom OViewPy.varstruct import GeoBoundary\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nTerrain = TerrainLayer(\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\nboundary = GeoBoundary(119.981273, 21.892673,\n                       122.010898, 25.424327)\nTerrain.aspectAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,\n                      savePath=\".\", fileName=\"defaultAspect\", width=10800, height=21600)\n\n```\n\n#### contourLineAnalysis\n\n\u53d6\u5f97\u7b49\u9ad8\u7dda\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70bapng/GeoJson\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | boundary EPSG |\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\n| fileType | string | \"image\" | \u5132\u5b58\u985e\u578b\uff0c\"image\" / \"geojson\" |\n| width | int | 21600 | \u5716\u7247\u5bec |\n| height | int | 21600 | \u5716\u7247\u9ad8 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer\nfrom OViewPy.varstruct import GeoBoundary\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nTerrain = TerrainLayer(\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\nboundary = GeoBoundary(119.981273, 21.892673,\n                       122.010898, 25.424327)\nTerrain.contourLineAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,fileType=\"image\",\n                      savePath=\".\", fileName=\"defaultContourLine\", width=10800, height=21600)\nTerrain.contourLineAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,fileType=\"geojson\",\n                      savePath=\".\", fileName=\"defaultContourLine\")\n```\n\n### OViewEntityLayer\n\n\u9664\u4e86`TerrainLayer`\u5916\uff0c\u5176\u9918\u4e09\u7a2e\u5716\u5c64\u7686\u5c6c\u65bc`OViewEntityLayer`\uff0c\u53ef\u900f\u904e`getVectorEntity`\u53d6\u5f97\u5716\u5c64Entity\u3002\n\u6b64Function\u53c3\u6578\u5982\u4e0b\uff1a\n\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\n| :-----: | :---: | :---: | :--: |\n| bound | GeoBoundary/GeoPolygon | None | \u6b32\u53d6\u5f97\u5411\u91cf\u8cc7\u6599\u7bc4\u570d\u3002\u5982\u672a\u7d66\u503c\uff0c\u5c07\u76f4\u63a5\u53d6\u5f97\u5b8c\u6574\u5716\u5c64\u5411\u91cf\u8cc7\u6599\u3002 |\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\n| sql | string | \"\" | \u641c\u5c0b\u689d\u4ef6 |\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import PipeLineLayer, ModelLayer, ModelSetLayer\n\nserver = Server(url=\"http://127.0.0.1:8080\")\nPipeLine = PipeLineLayer(server=server, layerName=\"TaichungPipeline\")\n# Model = ModelLayer(server=server, layerName=\"ChungHsingBIM\")\n# ModelSet = ModelSetLayer(server=server, layerName=\"TaichungKMZ\")\nret = PipeLine.getVectorEntity()\nprint(\"Geo\uff1a\", ret[\"geo\"][0].ToDict())\nprint(\"Attr\uff1a\", ret[\"attr\"][0].ToDict())\n```\n\n## Data Access Module\n\n### \u4f7f\u7528\u8cc7\u6599\u8655\u7406\u6a21\u7d44\n\n\u6b64\u6a21\u7d44\u53ef\u5c07\u53d6\u5f97\u7684\u8cc7\u6599\u8f49\u63db\u6210Python\u5e38\u7528\u7684Numpy\u3001Shapely\u7b49\u8cc7\u6599\u683c\u5f0f\uff0c\u4ee5\u4f9b\u958b\u767c\u8005\u65b9\u4fbf\u8a08\u7b97\u3002\n\n#### \u5716\u7247(Bytes)\u8207Numpy Array\u8f49\u63db\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.da import da\nimport cv2\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nlayer = VectorLayer(server=server,layerName=\"Town_MOI\")\n# \u53d6\u5f97\u5716\u7247\uff0c\u53d6\u5f97\u6210\u529f\u6703\u56de\u50b3\u5716\u7247bytes\u8cc7\u6599\nimg = layer.getMapImage(\n    boundary=GeoBoundary(147522.218692, 2422004.773002,\n                         351690.114369, 2813163.248085),\n    crs=\"EPSG:3826\",\n    width=512,\n    height=512,\n    format=\"image/png\"\n)\n# \u5c07\u5716\u7247\u8f49\u63db\u6210Numpy Array\nnpArray = da.imgToNumPyArray(img)\n# \u900f\u904ecv2\u8b80\u53d6Numpy Array\nimage = cv2.imdecode(npArray, cv2.IMREAD_UNCHANGED)\n# \u8655\u7406\u6210\u9ad8\u65af\u6a21\u7cca\nblurred = cv2.GaussianBlur(image, (51, 51), 0)\n# \u5c07\u8655\u7406\u5f8c\u7684\u5716\u7247\u8f49\u6210jpg\u7de8\u78bc\nblurred = cv2.imencode('.jpg',blurred)[1]\n# \u5c07Numpy Array \u8f49\u56de Bytes\u683c\u5f0f\nblurred = da.numPyArrayToImg(blurred)\n# \u986f\u793a\u5716\u7247\nda.showImg(blurred)\n# \u5132\u5b58\u5716\u7247\nda.saveImg(img=blurred, savePath=\".\", imgName=\"\u9ad8\u65af\u6a21\u7cca\", imgType=\"jpg\")\n```\n\n#### \u5411\u91cf\u683c\u5f0f\u8f49\u63db\u6210Numpy Array\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.da import da\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nmap = VectorLayer(server=server, layerName=\"Town_MOI\")\n# \u8a2d\u5b9a\u7bc4\u570d\ngeo = GeoBoundary(147522.218692, 2422004.773002,\n                  351690.114369, 2813163.248085)\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\nret = map.getVectorEntity(bound=geo,epsg=3826)\n# \u5c07\u5411\u91cf\u8cc7\u6599\u8f49\u63db\u6210Numpy\nnpRet = da.vectorEntityToNumPyArray(ret[\"geo\"])\n# \u986f\u793a\u8cc7\u6599\u985e\u578b\nprint(type(npRet[0]))\n```\n\n#### \u5411\u91cf\u683c\u5f0f\u8f49\u63db\u6210Shapely\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.layer import VectorLayer\nfrom OViewPy.varstruct import GeoBoundary\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nmap = VectorLayer(server=server,layerName=\"Town_MOI\")\n# \u8a2d\u5b9a\u7bc4\u570d\ngeo = GeoBoundary(147522.218692, 2422004.773002,\n                  351690.114369, 2813163.248085)\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\nret = map.getVectorEntity(bound=geo)\n# \u5c07\u5411\u91cf\u8cc7\u6599\u8f49\u63db\u6210Numpy\nshpRet = da.vectorEntityToShapely(ret[\"geo\"])\n# \u986f\u793a\u8cc7\u6599\u985e\u578b\nprint(type(shpRet[0]))\n```\n\n#### \u5411\u91cf\u683c\u5f0f\u8f49\u63db\u6210TIF\n\n```python\nfrom OViewPy.server import Server\nfrom OViewPy.oviewlayer import TerrainLayer\nfrom OViewPy.varstruct import GeoBoundary\nfrom OViewPy.da import da\n\n# \u7d81\u5b9aServer\u7269\u4ef6\nserver = Server(url=\"http://127.0.0.1:8080\")\n# \u7d81\u5b9aLayer\u7269\u4ef6\nTerrain = TerrainLayer(server=server, layerName=\"terrain\")\n# \u8a2d\u5b9a\u7bc4\u570d\nboundary = GeoBoundary(119.981273, 21.892673,\n                       122.010898, 25.424327)\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\nmatrix = Terrain.getDEMMatrix(boundary=boundary, cellDemSize=400, epsg=4326)\n# numpyArray\u8f38\u51fa\u6210tif\u6a94\nda.numPyArrayToTIF(matrix, boundary=boundary, width=1500, height=1500)\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.2.1/",
            "requires_dist": [
                "requests",
                "numpy",
                "opencv-python",
                "progress",
                "shapely",
                "PyShp",
                "rasterio",
                "matplotlib",
                "sridentify",
                "geojsoncontour"
            ],
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16255738,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9749f26ee1659217abcf58e510548d93",
                    "sha256": "63d83e6db2ae5cff9c45518fbfb3a937d3e1bab97c0d91b16e515b53d0a237c9"
                },
                "downloads": -1,
                "filename": "OViewPy-1.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9749f26ee1659217abcf58e510548d93",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23290,
                "upload_time": "2022-12-30T07:05:51",
                "upload_time_iso_8601": "2022-12-30T07:05:51.618567Z",
                "url": "https://files.pythonhosted.org/packages/79/dc/4a568c347340501cfb1be49ee666a84e012a488a20ef28393318bd853a4e/OViewPy-1.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d79af174cb9413a2739a44862e030d32",
                    "sha256": "e3b85fb3c7adef73ef3400df2d8d2ac39d5c3ea59bba25974d2ae86da742c05b"
                },
                "downloads": -1,
                "filename": "OViewPy-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "d79af174cb9413a2739a44862e030d32",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 29605,
                "upload_time": "2022-12-30T07:05:53",
                "upload_time_iso_8601": "2022-12-30T07:05:53.849838Z",
                "url": "https://files.pythonhosted.org/packages/84/01/231cbc43b1bc1d28319a6b33ba5c4afd312653e5d935bc5fc2ad69adfe35/OViewPy-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}