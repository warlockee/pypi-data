{
    "0.9.1": {
        "info": {
            "author": "Nico Schl\u00f6mer",
            "author_email": "nico.schloemer@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: Other/Proprietary License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/meshpro/optimesh",
            "keywords": "mesh,scientific,engineering,fem,finite elements",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimesh",
            "package_url": "https://pypi.org/project/optimesh/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimesh/",
            "project_urls": {
                "Homepage": "https://github.com/meshpro/optimesh",
                "Issues": "https://github.com/meshpro/optimesh/issues"
            },
            "release_url": "https://pypi.org/project/optimesh/0.9.1/",
            "requires_dist": [
                "x21>=0.2.1",
                "meshio (<6,>=5)",
                "meshplex (<0.19.0,>=0.16.0)",
                "numpy (>=1.20.0)",
                "npx",
                "matplotlib ; extra == 'all'",
                "termplotlib ; extra == 'all'"
            ],
            "requires_python": ">=3.7",
            "summary": "Mesh optimization/smoothing",
            "version": "0.9.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16267891,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6119eb47b666a8f01b8cde5b215dc412",
                    "sha256": "dc14108ce7a1fef3168ea670584fc3f2dc8371ee3fe3541af2bce3c7ffbfa033"
                },
                "downloads": -1,
                "filename": "optimesh-0.9.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6119eb47b666a8f01b8cde5b215dc412",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 145871,
                "upload_time": "2022-03-23T20:39:44",
                "upload_time_iso_8601": "2022-03-23T20:39:44.805203Z",
                "url": "https://files.pythonhosted.org/packages/6d/57/a59daaa66242238fc623de2f7145f064d77229c0866e0a28c457bee05596/optimesh-0.9.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.2": {
        "info": {
            "author": "",
            "author_email": "Nico Schl\u00f6mer <nico.schloemer@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Science/Research",
                "License :: Other/Proprietary License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/meshpro/optimesh",
            "keywords": "mathematics,physics,engineering,mesh,mesh generation,optimization",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimesh",
            "package_url": "https://pypi.org/project/optimesh/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimesh/",
            "project_urls": {
                "Homepage": "https://github.com/meshpro/optimesh",
                "Issues": "https://github.com/meshpro/optimesh/issues"
            },
            "release_url": "https://pypi.org/project/optimesh/0.9.2/",
            "requires_dist": [
                "x21 (>=0.2.4)",
                "meshio (<6,>=5)",
                "meshplex (<0.18.0,>=0.16.0)",
                "numpy (>=1.20.0)",
                "npx",
                "scipy",
                "termplotlib ; extra == 'all'",
                "termplotlib ; extra == 'plot'"
            ],
            "requires_python": ">=3.7",
            "summary": "Mesh optimization/smoothing",
            "version": "0.9.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16267891,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "97516b55b638d5b731afbfb403814be7",
                    "sha256": "acd682063b31a976ca0f3aef93a844a9cdba3a1019397359c4dc065a8aa1d157"
                },
                "downloads": -1,
                "filename": "optimesh-0.9.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "97516b55b638d5b731afbfb403814be7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 145491,
                "upload_time": "2022-04-01T12:45:26",
                "upload_time_iso_8601": "2022-04-01T12:45:26.780907Z",
                "url": "https://files.pythonhosted.org/packages/ab/3d/b2bac8b75e14d401d127444ecb0059dc1d04e7c7fc645e6588c234c22b04/optimesh-0.9.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.3": {
        "info": {
            "author": "",
            "author_email": "Nico Schl\u00f6mer <nico.schloemer@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Science/Research",
                "License :: Other/Proprietary License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "mathematics,physics,engineering,mesh,mesh generation,optimization",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimesh",
            "package_url": "https://pypi.org/project/optimesh/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimesh/",
            "project_urls": {
                "Homepage": "https://github.com/meshpro/optimesh",
                "Issues": "https://github.com/meshpro/optimesh/issues"
            },
            "release_url": "https://pypi.org/project/optimesh/0.9.3/",
            "requires_dist": [
                "x21 (>=0.3.3,<0.4.0)",
                "meshio (<6,>=5)",
                "meshplex (<0.18.0,>=0.16.0)",
                "numpy (>=1.20.0)",
                "npx",
                "scipy",
                "termplotlib ; extra == 'all'",
                "termplotlib ; extra == 'plot'"
            ],
            "requires_python": ">=3.7",
            "summary": "Mesh optimization/smoothing",
            "version": "0.9.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16267891,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ef6c13f9bc0f434146872a0b876987ae",
                    "sha256": "de576f84d8bfbc6ac8d6e342d10dd499a1d73f74feaa084f15931b832838ccd5"
                },
                "downloads": -1,
                "filename": "optimesh-0.9.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ef6c13f9bc0f434146872a0b876987ae",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 144290,
                "upload_time": "2022-06-20T13:22:53",
                "upload_time_iso_8601": "2022-06-20T13:22:53.040055Z",
                "url": "https://files.pythonhosted.org/packages/f0/66/0ab1d493806197ae4b291b09964280e49b34bf560cf6e5f609bd01eed320/optimesh-0.9.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.4": {
        "info": {
            "author": "",
            "author_email": "Nico Schl\u00f6mer <nico.schloemer@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Science/Research",
                "License :: Other/Proprietary License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "mathematics,physics,engineering,mesh,mesh generation,optimization",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimesh",
            "package_url": "https://pypi.org/project/optimesh/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimesh/",
            "project_urls": {
                "Homepage": "https://github.com/meshpro/optimesh",
                "Issues": "https://github.com/meshpro/optimesh/issues"
            },
            "release_url": "https://pypi.org/project/optimesh/0.9.4/",
            "requires_dist": [
                "x21 (>=0.3.3,<0.4.0)",
                "meshio (<6,>=5)",
                "meshplex (<0.19.0,>=0.16.0)",
                "numpy (>=1.20.0)",
                "npx",
                "scipy",
                "termplotlib ; extra == 'all'",
                "termplotlib ; extra == 'plot'"
            ],
            "requires_python": ">=3.7",
            "summary": "Mesh optimization/smoothing",
            "version": "0.9.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16267891,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "40381eb787dabad78078205cf7ea6777",
                    "sha256": "a9da3e0188c494f73a955ce37246973e3c0eda28b6e7fd18bf4654420c3ab9fc"
                },
                "downloads": -1,
                "filename": "optimesh-0.9.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "40381eb787dabad78078205cf7ea6777",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 144298,
                "upload_time": "2022-06-24T08:41:20",
                "upload_time_iso_8601": "2022-06-24T08:41:20.945930Z",
                "url": "https://files.pythonhosted.org/packages/65/1e/9c26d3b438e34e28f274966cfd93c39b14d5c145e6d06e911790780da4b7/optimesh-0.9.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.5": {
        "info": {
            "author": "",
            "author_email": "Nico Schl\u00f6mer <nico.schloemer@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Science/Research",
                "License :: Other/Proprietary License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Utilities"
            ],
            "description": "<p align=\"center\">\n  <a href=\"https://github.com/nschloe/optimesh\"><img alt=\"optimesh\" src=\"https://raw.githubusercontent.com/meshpro/optimesh/assets/optimesh-logo.svg\" width=\"60%\"></a>\n  <p align=\"center\">Triangular mesh optimization.</p>\n</p>\n\n[![PyPi Version](https://img.shields.io/pypi/v/optimesh.svg?style=flat-square)](https://pypi.org/project/optimesh/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/optimesh.svg?style=flat-square)](https://pypi.org/project/optimesh/)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4728056.svg?style=flat-square)](https://doi.org/10.5281/zenodo.4728056)\n[![GitHub stars](https://img.shields.io/github/stars/nschloe/optimesh.svg?style=flat-square&logo=github&label=Stars&logoColor=white)](https://github.com/nschloe/optimesh)\n[![PyPi downloads](https://img.shields.io/pypi/dm/optimesh.svg?style=flat-square)](https://pypistats.org/packages/optimesh)\n\n[![Discord](https://img.shields.io/static/v1?logo=discord&logoColor=white&label=chat&message=on%20discord&color=7289da&style=flat-square)](https://discord.gg/PBCCvwHqpv)\n\nSeveral mesh smoothing/optimization methods with one simple interface. optimesh\n\n- is fast,\n- preserves submeshes,\n- only works for triangular meshes, flat and on a surface, (for now; upvote [this\n  issue](https://github.com/nschloe/optimesh/issues/17) if you're interested in\n  tetrahedral mesh smoothing), and\n- supports all mesh formats that [meshio](https://github.com/nschloe/meshio) can\n  handle.\n\nInstall with\n\n```\npip install optimesh\n```\n\nExample call:\n\n```\noptimesh in.e out.vtk\n```\n\nOutput:\n![terminal-screenshot](https://raw.githubusercontent.com/meshpro/optimesh/assets/term-screenshot.png)\n\nThe left hand-side graph shows the distribution of angles (the grid line is at the\noptimal 60 degrees). The right hand-side graph shows the distribution of simplex\nquality, where quality is twice the ratio of circumcircle and incircle radius.\n\nAll command-line options are documented at\n\n```\noptimesh -h\n```\n\n### Showcase\n\n![disk-step0](https://raw.githubusercontent.com/meshpro/optimesh/assets/disk-step0.png)\n\nThe following examples show the various algorithms at work, all starting from the same\nrandomly generated disk mesh above. The cell coloring indicates quality; dark green is\nbad, yellow is good.\n\n#### CVT (centroidal Voronoi tessellation)\n\n|                 ![cvt-uniform-lloyd2](https://raw.githubusercontent.com/meshpro/optimesh/assets/lloyd2.webp)                  | ![cvt-uniform-qnb](https://raw.githubusercontent.com/meshpro/optimesh/assets/cvt-uniform-qnb.webp) | ![cvt-uniform-qnf](https://raw.githubusercontent.com/meshpro/optimesh/assets/cvt-uniform-qnf.webp) |\n| :---------------------------------------------------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------------------: |\n| uniform-density relaxed [Lloyd's algorithm](https://en.wikipedia.org/wiki/Lloyd%27s_algorithm) (`--method lloyd --omega 2.0`) |   uniform-density quasi-Newton iteration (block-diagonal Hessian, `--method cvt-block-diagonal`)   |     uniform-density quasi-Newton iteration (default method, full Hessian, `--method cvt-full`)     |\n\nCentroidal Voronoi tessellation smoothing ([Du et al.](#relevant-publications)) is one\nof the oldest and most reliable approaches. optimesh provides classical Lloyd smoothing\nas well as several variants that result in better meshes.\n\n#### CPT (centroidal patch tessellation)\n\n|                             ![cpt-cp](https://raw.githubusercontent.com/meshpro/optimesh/assets/cpt-dp.png)                             | ![cpt-uniform-fp](https://raw.githubusercontent.com/meshpro/optimesh/assets/cpt-uniform-fp.webp) | ![cpt-uniform-qn](https://raw.githubusercontent.com/meshpro/optimesh/assets/cpt-uniform-qn.webp) |\n| :-------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------: |\n| density-preserving linear solve ([Laplacian smoothing](https://en.wikipedia.org/wiki/Laplacian_smoothing), `--method cpt-linear-solve`) |                uniform-density fixed-point iteration (`--method cpt-fixed-point`)                |                    uniform-density quasi-Newton (`--method cpt-quasi-newton`)                    |\n\nA smoothing method suggested by [Chen and Holst](#relevant-publications), mimicking CVT\nbut much more easily implemented. The density-preserving variant leads to the exact same\nequation system as Laplacian smoothing, so CPT smoothing can be thought of as a\ngeneralization.\n\nThe uniform-density variants are implemented classically as a fixed-point iteration and\nas a quasi-Newton method. The latter typically converges faster.\n\n#### ODT (optimal Delaunay tessellation)\n\n| ![odt-dp-fp](https://raw.githubusercontent.com/meshpro/optimesh/assets/odt-dp-fp.webp) | ![odt-uniform-fp](https://raw.githubusercontent.com/meshpro/optimesh/assets/odt-uniform-fp.webp) | ![odt-uniform-bfgs](https://raw.githubusercontent.com/meshpro/optimesh/assets/odt-uniform-bfgs.webp) |\n| :------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------: |\n|            density-preserving fixed-point iteration (`--method odt-dp-fp`)             |                uniform-density fixed-point iteration (`--method odt-fixed-point`)                |                              uniform-density BFGS (`--method odt-bfgs`)                              |\n\nOptimal Delaunay Triangulation (ODT) as suggested by [Chen and\nHolst](#relevant-publications). Typically superior to CPT, but also more expensive to\ncompute.\n\nImplemented once classically as a fixed-point iteration, once as a nonlinear\noptimization method. The latter typically leads to better results.\n\n### Using optimesh from Python\n\nYou can also use optimesh in a Python program. Try\n\n<!--pytest.mark.skip-->\n\n```python\nimport optimesh\n\n# [...] create points, cells [...]\n\npoints, cells = optimesh.optimize_points_cells(\n    points, cells, \"CVT (block-diagonal)\", 1.0e-5, 100\n)\n\n# or create a meshplex Mesh\nimport meshplex\n\nmesh = meshplex.MeshTri(points, cells)\noptimesh.optimize(mesh, \"CVT (block-diagonal)\", 1.0e-5, 100)\n# mesh.points, mesh.cells, ...\n```\n\nIf you only want to do one optimization step, do\n\n<!--pytest.mark.skip-->\n\n```python\npoints = optimesh.get_new_points(mesh, \"CVT (block-diagonal)\")\n```\n\n### Surface mesh smoothing\n\noptimesh also supports optimization of triangular meshes on surfaces which are defined\nimplicitly by a level set function (e.g., spheres). You'll need to specify the function\nand its gradient, so you'll have to do it in Python:\n\n```python\nimport meshzoo\nimport optimesh\n\npoints, cells = meshzoo.tetra_sphere(20)\n\n\nclass Sphere:\n    def f(self, x):\n        return 1.0 - (x[0] ** 2 + x[1] ** 2 + x[2] ** 2)\n\n    def grad(self, x):\n        return -2 * x\n\n\n# You can use all methods in optimesh:\npoints, cells = optimesh.optimize_points_cells(\n    points,\n    cells,\n    \"CVT (full)\",\n    1.0e-2,\n    100,\n    verbose=False,\n    implicit_surface=Sphere(),\n    # step_filename_format=\"out{:03d}.vtk\"\n)\n```\n\nThis code first generates a mediocre mesh on a sphere using\n[meshzoo](https://github.com/nschloe/meshzoo/),\n\n<img src=\"https://raw.githubusercontent.com/meshpro/optimesh/assets/tetra-sphere.png\" width=\"20%\">\n\nand then optimizes. Some results:\n\n| ![odt-dp-fp](https://raw.githubusercontent.com/meshpro/optimesh/assets/sphere-cpt.webp) | ![odt-uniform-fp](https://raw.githubusercontent.com/meshpro/optimesh/assets/sphere-odt.webp) | ![odt-uniform-bfgs](https://raw.githubusercontent.com/meshpro/optimesh/assets/sphere-cvt.webp) |\n| :-------------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------: |\n|                                           CPT                                           |                                             ODT                                              |                                       CVT (full Hessian)                                       |\n\n### Which method is best?\n\nFrom practical experiments, it seems that the CVT smoothing variants, e.g.,\n\n```\noptimesh in.vtk out.vtk -m cvt-uniform-qnf\n```\n\ngive very satisfactory results. (This is also the default method, so you don't need to\nspecify it explicitly.) Here is a comparison of all uniform-density methods applied to\nthe random circle mesh seen above:\n\n<img src=\"https://raw.githubusercontent.com/meshpro/optimesh/assets/comparison.svg\" width=\"90%\">\n\n(Mesh quality is twice the ratio of incircle and circumcircle radius, with the maximum\nbeing 1.)\n\n### Why optimize?\n\n| <img src=\"https://raw.githubusercontent.com/meshpro/optimesh/assets/gmsh.png\" width=\"80%\"> | <img src=\"https://raw.githubusercontent.com/meshpro/optimesh/assets/gmsh-optimesh.png\" width=\"80%\"> | <img src=\"https://raw.githubusercontent.com/meshpro/optimesh/assets/dmsh.png\" width=\"80%\"> |\n| :----------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------: |\n|                                         Gmsh mesh                                          |                                      Gmsh mesh after optimesh                                       |                           [dmsh](//github.com/nschloe/dmsh) mesh                           |\n\nLet us compare the properties of the Poisson problem (_\u0394u = f_ with Dirichlet boundary\nconditions) when solved on different meshes of the unit circle. The first mesh is the\non generated by [Gmsh](http://gmsh.info/), the second the same mesh but optimized with\noptimesh, the third a very high-quality [dmsh](https://github.com/nschloe/dmsh) mesh.\n\nWe consider meshings of the circle with an increasing number of points:\n\n| ![gmsh-quality](https://raw.githubusercontent.com/meshpro/optimesh/assets/gmsh-quality.svg) | ![gmsh-cond](https://raw.githubusercontent.com/meshpro/optimesh/assets/gmsh-cond.svg) | ![gmsh-cg](https://raw.githubusercontent.com/meshpro/optimesh/assets/gmsh-cg.svg) |\n| :-----------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------: |\n|                                    average cell quality                                     |                        condition number of the Poisson matrix                         |                      number of CG steps for Poisson problem                       |\n\nQuite clearly, the dmsh generator produces the highest-quality meshes (left).\nThe condition number of the corresponding Poisson matrices is lowest for the high\nquality meshes (middle); one would hence suspect faster convergence with Krylov methods.\nIndeed, most CG iterations are necessary on the Gmsh mesh (right). After optimesh, one saves\nbetween 10 and 20 percent of iterations/computing time. The dmsh mesh cuts the number of\niterations in _half_.\n\n### Access from Python\n\nAll optimesh functions can also be accessed from Python directly, for example:\n\n<!--pytest.mark.skip-->\n\n```python\nimport optimesh\n\nX, cells = optimesh.odt.fixed_point(X, cells, 1.0e-2, 100, verbose=False)\n```\n\n### Relevant publications\n\n- [Qiang Du, Vance Faber, and Max Gunzburger, _Centroidal Voronoi Tessellations: Applications and Algorithms_,\n  SIAM Rev., 41(4), 1999, 637\u2013676.](https://doi.org/10.1137/S0036144599352836)\n\n- [Yang Liu et al., _On centroidal Voronoi tessellation\u2014Energy smoothness and fast computation_,\n  ACM Transactions on Graphics, Volume 28, Issue 4, August 2009.](https://dl.acm.org/doi/10.1145/1559755.1559758)\n\n- [Long Chen, Michael Holst, _Efficient mesh optimization schemes based on Optimal Delaunay Triangulations_,\n  Comput. Methods Appl. Mech. Engrg. 200 (2011) 967\u2013984.](https://doi.org/10.1016/j.cma.2010.11.007)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "mathematics,physics,engineering,mesh,mesh generation,optimization",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimesh",
            "package_url": "https://pypi.org/project/optimesh/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimesh/",
            "project_urls": {
                "Homepage": "https://github.com/meshpro/optimesh",
                "Issues": "https://github.com/meshpro/optimesh/issues"
            },
            "release_url": "https://pypi.org/project/optimesh/0.9.5/",
            "requires_dist": [
                "x21 (>=0.3.6,<0.4.0)",
                "meshio (<6,>=5)",
                "meshplex (<0.19.0,>=0.16.0)",
                "numpy (>=1.20.0)",
                "npx",
                "scipy",
                "termplotlib ; extra == 'all'",
                "termplotlib ; extra == 'plot'"
            ],
            "requires_python": ">=3.7",
            "summary": "Mesh optimization/smoothing",
            "version": "0.9.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16267891,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "34953d33cf91b30e12466149130861c9",
                    "sha256": "876dea49016900e303475269acc635ed8acf1df426f77312b5df145c6aed3570"
                },
                "downloads": -1,
                "filename": "optimesh-0.9.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "34953d33cf91b30e12466149130861c9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 144895,
                "upload_time": "2022-12-31T16:33:25",
                "upload_time_iso_8601": "2022-12-31T16:33:25.716740Z",
                "url": "https://files.pythonhosted.org/packages/f8/a3/00f47ce1662aa29cbc31f89abd2680c56692b4ba61f3fd940474f96ea94b/optimesh-0.9.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}