{
    "1.0.0": {
        "info": {
            "author": "Raul A. de Villa C.",
            "author_email": "r@runfalcon.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://git-codecommit.zone.amazonaws.com/v1/repos/runfalcon-pipeline-integration-py-package",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "runfalcon-pipeline-integration",
            "package_url": "https://pypi.org/project/runfalcon-pipeline-integration/",
            "platform": null,
            "project_url": "https://pypi.org/project/runfalcon-pipeline-integration/",
            "project_urls": {
                "Bug Tracker": "https://no-yet",
                "Homepage": "https://git-codecommit.zone.amazonaws.com/v1/repos/runfalcon-pipeline-integration-py-package"
            },
            "release_url": "https://pypi.org/project/runfalcon-pipeline-integration/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Runfalcon tools to integrate with pipelines",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "0b39761561c506ba28ba4d38e6430aa300fdb62d8d1d71fece483f495dc91dfe",
                    "md5": "f3e3dd9823ca5b7a0ee49d8013fcc0dc",
                    "sha256": "5aeab74d38460ee941a6e9fb472395eb51d4319c2b7a2e57bb46d7b64fb86318"
                },
                "downloads": -1,
                "filename": "runfalcon_pipeline_integration-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f3e3dd9823ca5b7a0ee49d8013fcc0dc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 10971,
                "upload_time": "2023-01-04T18:12:01",
                "upload_time_iso_8601": "2023-01-04T18:12:01.298975Z",
                "url": "https://files.pythonhosted.org/packages/0b/39/761561c506ba28ba4d38e6430aa300fdb62d8d1d71fece483f495dc91dfe/runfalcon_pipeline_integration-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "c38a6f4d42d2b192a44497556bfbeeaf3ec130b3a41c7b86ff87cfe22547ef70",
                    "md5": "a7a69870e92278ece716ce51bdcaa2e9",
                    "sha256": "00c88608dc18f2183c3035cf877af4e113c780ee008dcc72cfcc972ebe1d6016"
                },
                "downloads": -1,
                "filename": "runfalcon-pipeline-integration-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a7a69870e92278ece716ce51bdcaa2e9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 8386,
                "upload_time": "2023-01-04T18:12:03",
                "upload_time_iso_8601": "2023-01-04T18:12:03.615398Z",
                "url": "https://files.pythonhosted.org/packages/c3/8a/6f4d42d2b192a44497556bfbeeaf3ec130b3a41c7b86ff87cfe22547ef70/runfalcon-pipeline-integration-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "Raul A. de Villa C.",
            "author_email": "r@runfalcon.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "\n# RUNFALCON PIPELINE INTEGRATION TOOLS\n\nThis package helps to integrate CI/CD processes with [runfalcon platform](https://www.runfalcon.com)\n\n**REQUIEREMENTS**\n\nNone.\n  \n**USAGE**\n\n```\npython3 -m runfalconpipelineintegration <operation> [ags] [<flags>]\n```\n\n## Operation `authenticate`\nGenerates an [authentication token](https://app.runfalcon.com).  This token will be input for secure operations.\n\n### **Examples**\n\n- Generate authentication token\n\n    ```sh\n    python3 -m runfalconpipelineintegration authenticate login \"myemail@mydomain.com\" password \"secretpassword\"\n    ```\n    You must replace `myemail@mydomain.com` and `secretpassword` for your valid credentials in runfalcon platform.\n    The Output of this operation is an alphanumeric token like this:\n    ```\n    eyJhbGciOiJIUzI1NiIsInR5cCI6Ikicm9sZXMiOm51bGx9LCJpYXQiOjE2NzIyNTQyMDAsImV4cCI6MTY3MjI2MTQwMH0cWBm8Iua2sUFkHbr89epcfN9EtwBDKtqoLMUtdXJSk\n    ```\n\n## Operation `run`\nThis operation runs a performance testing scenario and waitwait for it to finish.\n\n### **Examples**\n\n- Run a scenario without waiting for it to finish\n\n    ```sh\n    python3 -m runfalconpipelineintegration run token \"nR5cCI6Ikicm9sZXMiOm51bGYXQiOjE2NzIyNDAsImV4cCI6MTY3MjI2MTQwMH0\" client \"My client Name\" application \"My application Name\" scenario \"My scenario code\"\n    ```\n    You must replace `nR5cCI6Ikicm9sZXMiOm51bGx9LCJpYXQiOjE2NzIyNTQyMDAsImV4cCI6MTY3MjI2MTQwMH0` for a valid authentication token, `My client Name` for your client name in runfalcon platform, `My application Name` for the name of the application in runfalcon platform aich the scneario belongs to, and `My scenario code` for the code of the existing scenario that you want to run.  Add the switch `-q` if you want the command only shows the final response.  The output of the command is a json object that specifies the new job id:\n    ```\n    {\n        \"jobId\": 1158298, \n        \"status\": \"SUCCESS\", \n        \"dateCreated\": \"2023-01-01T17:01:01.851Z\", \n        \"duration\": 178.913196, \n        \"kpiLatency\": 3000, \n        \"kpiErrors\": 5, \n        \"kpiThroughput\": 100, \n        \"kpiDeviation\": 3000, \n        \"metricLatency\": 27.74, \n        \"metricErrors\": 0.35, \n        \"metricThroughput\": 1659057.06, \n        \"metricDeviation\": 52.36, \n        \"complianceLatency\": 199.08, \n        \"complianceErrors\": 192.94, \n        \"complianceThroughput\": 200, \n        \"complianceDeviation\": 198.25\n    }\n    ```\n\n    Ih this response:\n\n    | Attribute | Type | Description |\n    | -- | -- | -- |\n    | `jobId` | Job Info | Id corresponding the new created job for this scenario run. |\n    | `status` | Job Info | Indicates if the job finished in `SUCCESS` or `ERROR` status. |\n    | `dateCreated` | Job Info | Date and time the job starts its execution. |\n    | `duration` | Job Info | Indicates the seconds the job took to finalize. |\n    | `kpiLatency` | KPI | Objective value defined for the scenario average latency. |\n    | `kpiErrors` | KPI | Objective value defined for the scenario errors percentage. |\n    | `kpiThroughput` | KPI | Objective value defined for the scenario capacity (requests attended per minute). |\n    | `kpiDeviation` | KPI | Objective value defined for the standard deviation for scenario average latency. |\n    | `metricLatency` | Metric | Measured value for the scenario average latency in this run (For this `jobId`). |\n    | `metricErrors` | Metric | Measured value for the scenario errors percentage in this run (For this `jobId`). |\n    | `metricThroughput` | Metric | Measured value for the capacity (requests attended per minute) in this run (For this `jobId`). |\n    | `metricDeviation` | Metric | Measured value for the standard deviation for scenario average latency in this run (For this `jobId`). |\n    | `complianceLatency` | Compliance | Latency compliance (latency metric vs latency KPI). |\n    | `complianceErrors` | Compliance | Errors percentage compliance (Errors percentage metric vs Errors percentage KPI). |\n    | `complianceThroughput` | Compliance | Capacity compliance (Capacity metric vs Capacity KPI). |\n    | `complianceDeviation` | Compliance | Deviation compliance (Deviation metric vs Deviation KPI). |\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://git-codecommit.zone.amazonaws.com/v1/repos/runfalcon-pipeline-integration-py-package",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "runfalcon-pipeline-integration",
            "package_url": "https://pypi.org/project/runfalcon-pipeline-integration/",
            "platform": null,
            "project_url": "https://pypi.org/project/runfalcon-pipeline-integration/",
            "project_urls": {
                "Bug Tracker": "https://no-yet",
                "Homepage": "https://git-codecommit.zone.amazonaws.com/v1/repos/runfalcon-pipeline-integration-py-package"
            },
            "release_url": "https://pypi.org/project/runfalcon-pipeline-integration/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Runfalcon tools to integrate with pipelines",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "b011484fbb77b1f1dfb6d2cec2a000e180b62faa9db3baafd23113f13cda0973",
                    "md5": "0587f9d42331189ad9cabbd92b8106e0",
                    "sha256": "fc8b41c032c2676e92d1a2c8ff27ad73907efda1ca528624d53da11ff05a42a7"
                },
                "downloads": -1,
                "filename": "runfalcon_pipeline_integration-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0587f9d42331189ad9cabbd92b8106e0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 10972,
                "upload_time": "2023-01-04T18:13:18",
                "upload_time_iso_8601": "2023-01-04T18:13:18.611269Z",
                "url": "https://files.pythonhosted.org/packages/b0/11/484fbb77b1f1dfb6d2cec2a000e180b62faa9db3baafd23113f13cda0973/runfalcon_pipeline_integration-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "370101aa81763c89273624988aecc17acb7aa913f123a954871a292b36ff23ba",
                    "md5": "8188101f160f2ec28f8d82053e261ab3",
                    "sha256": "e58aa491c1fbf0c2a3c3653d14ff1c604b44f3dd748c7f315c8a7f2c0e95383c"
                },
                "downloads": -1,
                "filename": "runfalcon-pipeline-integration-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8188101f160f2ec28f8d82053e261ab3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 8404,
                "upload_time": "2023-01-04T18:13:19",
                "upload_time_iso_8601": "2023-01-04T18:13:19.761437Z",
                "url": "https://files.pythonhosted.org/packages/37/01/01aa81763c89273624988aecc17acb7aa913f123a954871a292b36ff23ba/runfalcon-pipeline-integration-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}