{
    "0.1.1rc1": {
        "info": {
            "author": "",
            "author_email": "Stefan Reuschl <stefan@reu-dev.de>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Razel\n\n![Rust](https://img.shields.io/badge/language-rust-blue.svg)\n[![MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/reu-dev/razel/blob/main/LICENSE.md)\n[![CI](https://github.com/reu-dev/razel/actions/workflows/ci.yml/badge.svg)](https://github.com/reu-dev/razel/actions/workflows/ci.yml)\n\nA command executor with caching. It is:\n\n* Fast: caching avoids repeated execution of commands which haven't changed\n* Reliable: commands are executed in a sandbox to detect missing dependencies\n* Easy to use: commands are specified using a high-level TypeScript or Python API and convenience functions/tasks are\n  built-in\n* Made for: data processing pipelines with executables working on files and many dependencies between those\n\nRazel is not the best choice for building software, especially there's no built-in support for compiler setup and header\ndependencies.\n\n## Getting Started\n\nUse [rustup](https://rustup.rs/) to install Rust. Install `protobuf-compiler`. Clone and build Razel:\n\n```bash\ngit clone https://github.com/reu-dev/razel.git\ncd razel/\ncargo install --locked --path .\n```\n\nThe native input format for Razel is a `razel.jsonl` file, see the example [test/razel.jsonl](test/razel.jsonl).\n```\nrazel exec -f test/razel.jsonl\n```\n\nThe preferred way to create a `razel.jsonl` file is using one of the high-level APIs.\n\n### TypeScript API\n\nInstall [Deno](https://deno.land/) to use the [TypeScript API](include/deno/razel.ts).\nRun the [example Deno script](test/deno.ts) to create `test/razel.jsonl` and execute it with Razel:\n\n```bash\ndeno run --allow-write=. --check test/deno.ts\nrazel exec -f test/razel.jsonl\n```\n\n### Python API\n\nThe [Python API](include/python/razel.py) requires Python >= 3.8.\nRun the [example Python script](test/python.py) to create `test/razel.jsonl` and execute it with Razel:\n\n```bash\npython3 test/python.py\nrazel exec -f test/razel.jsonl\n```\n\n### Batch file\n\nIn addition to `razel.jsonl`, Razel can directly execute a batch file containing commands.\nInput and output files need to be specified, which is WIP.\n\nExecute the example [test/batch.sh](test/batch.sh) with Razel:\n\n```bash\nrazel exec -f test/batch.sh\n```\n\n## Project Status\n\nRazel is in active development and **not** ready for production. CLI and format of `razel.jsonl` will likely change.\n\n| OS      | Status | Note                              |\n|---------|--------|-----------------------------------|\n| Linux   | \u2713      | stable, main development platform |\n| Mac     | \u2713      | used and tested in CI             |\n| Windows | (\u2713)    | tested in CI only                 |\n\n| Feature                                   | Status  | Note                                                       |\n|-------------------------------------------|---------|------------------------------------------------------------|\n| command execution in sandbox              | \u2713       |                                                            |\n| multithreaded execution                   | \u2713       |                                                            |\n| local caching                             | \u2713       |                                                            |\n| remote caching                            | \u2718       | WIP                                                        |\n| remote execution                          | \u2718       | TODO                                                       |\n| OOM handling: retry with less concurrency | \u2713 Linux | requires `sudo cgcreate -a $USER -t $USER -g memory:razel` |\n\n## Why not ...?\n\n* [Bazel](https://bazel.build/) is a multi-language build tool. However, for the use case Razel targets, there are some\n  issues:\n    * additional launcher script required for some simple tasks\n        * using stdout of action as input for another action\n        * parsing measurements from stdout of action\n        * CTest features like FAIL_REGULAR_EXPRESSION, WILL_FAIL\n    * difficult to get command lines for debugging\n    * no automatic disk usage limit/cleanup for local cache - all temp output needs to fit on disk\n    * no native support for response files\n    * resources cannot be reserved to run real-time critical tests\n    * content of bazel-bin/out directories is not defined (contains mixture of current build and cache)\n* [CTest](https://cmake.org/cmake/help/latest/manual/ctest.1.html) is nice for building C/C++ code and CTest can be used\n  for testing,\n  but it does not support caching and managing dependencies between tests is difficult.\n\n## Features\n\n### Measurements\n\nRazel parses the stdout of executed commands to capture runtime measurements and writes them to `razel-out/measurements.csv`.\nCurrently, the `<CTestMeasurement>` and `<DartMeasurement>` tags as used by [CTest/CDash](https://cmake.org/cmake/help/latest/command/ctest_test.html#additional-test-measurements) are supported:\n```\n<CTestMeasurement type=\"numeric/double\" name=\"score\">12.3</CTestMeasurement>\n<CTestMeasurement type=\"text/string\" name=\"result\">ok</CTestMeasurement>\n```\nSupporting custom formats is planned.\n\n## Acknowledgements\n\nThe idea to build fast and correct is based on [Bazel](https://bazel.build/). Razel uses data structures from\nthe [Bazel Remote Execution API](https://github.com/bazelbuild/remote-apis/blob/main/build/bazel/remote/execution/v2/remote_execution.proto)\nfor caching.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "razel",
            "package_url": "https://pypi.org/project/razel/",
            "platform": null,
            "project_url": "https://pypi.org/project/razel/",
            "project_urls": {
                "Bug Tracker": "https://github.com/reu-dev/razel/issues",
                "Homepage": "https://github.com/reu-dev/razel"
            },
            "release_url": "https://pypi.org/project/razel/0.1.1rc1/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "a command executor with caching for data processing pipelines",
            "version": "0.1.1rc1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16204954,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "31804b1ba4052f654e4502d6b5068801",
                    "sha256": "dda94d4395735481ffcfcba466c475f913fb1a980b0a642adee40e9e59771f8e"
                },
                "downloads": -1,
                "filename": "razel-0.1.1rc1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "31804b1ba4052f654e4502d6b5068801",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 6397,
                "upload_time": "2022-12-24T12:57:26",
                "upload_time_iso_8601": "2022-12-24T12:57:26.112423Z",
                "url": "https://files.pythonhosted.org/packages/b2/43/f133e6771b8917f639e5b2f2e8db6b9a108041b047faf98bd9f3ca6b096d/razel-0.1.1rc1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9d645fed745bb1f0abda51ee96c792af",
                    "sha256": "af750b829ccf105bd21f5907f354f836fc972a35d70bd6c15c40a1ae5477def5"
                },
                "downloads": -1,
                "filename": "razel-0.1.1rc1.tar.gz",
                "has_sig": false,
                "md5_digest": "9d645fed745bb1f0abda51ee96c792af",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 5684,
                "upload_time": "2022-12-24T12:57:27",
                "upload_time_iso_8601": "2022-12-24T12:57:27.866287Z",
                "url": "https://files.pythonhosted.org/packages/6e/fa/be37aef2ca55c28ddeb03e1553d2f1f2b013c897e3a6f52302f8d274a844/razel-0.1.1rc1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}