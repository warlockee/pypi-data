{
    "0.1.0": {
        "info": {
            "author": "keshavdv",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "---\n# victron_ble\n\nA Python library to parse Instant Readout advertisement data from Victron devices.\n\nDisclaimer: This software is not an officially supported interface by Victron and is provided entirely \"as-is\"\n\n**Supported Devices:**\n\n  * SmartShunt 500A/500mv (and likely BMV-712/702) provide the following data:\n    * Voltage\n    * Alarm status\n    * Current\n    * Remaining time\n    * Consumed amp hours\n    * Auxillary input\n\nIf you'd like to support development for additional devices, consider [sponsoring this project](https://github.com/sponsors/keshavdv/)\n\n\n## Install it from PyPI\n\n```bash\npip install victron_ble\n```\n\n## Usage\n\nTo be able to decrypt the contents of the advertisement, you'll need to first fetch the per-device encryption key from the official Victron application. The method to do this will vary per platform, but only instructions for the OSX app are provided below for now: \n\n#### Fetching Keys\n \n**OSX**\n\n1. Install the Victron app from the Mac App Store\n2. Pair with your device at least once to transfer keys\n3. Run the following from Terminal to dump the known keys (install sqlite3 via Homebrew)\n```bash\n\u276f sqlite3 ~/Library/Containers/com.victronenergy.victronconnect.mac/Data/Library/Application\\ Support/Victron\\ Energy/Victron\\ Connect/d25b6546b47ebb21a04ff86a2c4fbb76.sqlite 'select address,advertisementKey from advertisementKeys inner join macAddresses on advertisementKeys.macAddress == macAddresses.macAddress'\n\n{763aeff5-1334-e64a-ab30-a0f478s20fe1}|0df4d0395b7d1a876c0c33ecb9e70dcd\n\u276f\n````\n\n#### Reading data\n\nThe project ships with a standalone CLI that can be used to print device data to the console. \n\n```bash\n# Will show all discovered Victron devices with Instant Readout enabled, their names, and IDs\n$ > victron-ble discover \n763aeff5-1334-e64a-ab30-a0f478s20fe1: SmartShunt HT4531A246S\n...\n\n\n# Dump data for a particular device (replace the ID and key with your own)\n$ > victron-ble read \"763aeff5-1334-e64a-ab30-a0f478s20fe1:0df4d0395b7d1a876c0c33ecb9e70dcd\"\nINFO:victron_ble.scanner:Reading data for ['763aeff5-1334-e64a-ab30-a0f478s20fe1']\n{\n  \"name\": \"SmartShunt HT4531A246S\",\n  \"address\": \"763AEFF5-1334-E64A-AB30-A0F478S20FE1\",\n  \"rssi\": -79,\n  \"payload\": {\n    \"remaining_mins\": 65535,\n    \"aux_mode\": 3,\n    \"aux\": 0,\n    \"current\": 0,\n    \"voltage\": 12.52,\n    \"consumed_ah\": 50.0,\n    \"soc\": 50.0,\n    \"alarm\": {\n      \"low_voltage\": false,\n      \"high_voltage\": false,\n      \"low_soc\": false,\n      \"low_starter_voltage\": false,\n      \"high_starter_voltage\": false,\n      \"low_temperature\": false,\n      \"high_temperature\": false,\n      \"mid_voltage\": false\n    }\n  }\n}\n...\n\n# Dump data for debugging and supporting new devices (replace the ID)\n$ > victron-ble dump \"763aeff5-1334-e64a-ab30-a0f478s20fe1\"\nDumping advertisements from 763aeff5-1334-e64a-ab30-a0f478s20fe1\n1671843194.0534039      : 100289a302413bafd03bb245e131ae926267f6fd0b59e0\n1671843194.682535       : 100289a302423baf58a1546e5262dcdf0ef642f353ed65\n1671843197.676384       : 100289a302453baf804707549cffb2ab970c981ae897b6\n...\n```\n\nTo consume this project as a library, you can import the particular parser for your device:\n```py\nfrom victron_ble.devices import detect_device_type\n\ndata = <ble advertisement data>\nparser = detect_device_type(data)\nparsed_data = parser(<key>).parse(<ble advertisement data>)\n```\n\n## Development\n\nIf you'd like to help support a new device, collect the following and create a new Github issue:\n\n1. Run `victron-ble discover` to find the ID of the device you'd like to support\n2. Run `victron-ble dump <ID>` for an few minutes while collecting corresponding screenshots from the official apps instant readout to identify the current values\n\nFor pull requests:\n\nRead the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\n## Contributors\n\nSpecial thanks to https://github.com/rochacbruno/python-project-template for the project template\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/keshavdv/victron-ble/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "victron-ble",
            "package_url": "https://pypi.org/project/victron-ble/",
            "platform": null,
            "project_url": "https://pypi.org/project/victron-ble/",
            "project_urls": {
                "Homepage": "https://github.com/keshavdv/victron-ble/"
            },
            "release_url": "https://pypi.org/project/victron-ble/0.1.0/",
            "requires_dist": [
                "bleak (==0.19.5)",
                "click (==8.1.3)",
                "construct (==2.10.68)",
                "pycryptodome (==3.16.0)",
                "pytest ; extra == 'test'",
                "coverage ; extra == 'test'",
                "flake8 ; extra == 'test'",
                "black ; extra == 'test'",
                "isort ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "codecov ; extra == 'test'",
                "mypy ; extra == 'test'",
                "gitchangelog ; extra == 'test'",
                "mkdocs ; extra == 'test'"
            ],
            "requires_python": "",
            "summary": "Awesome victron_ble created by keshavdv",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16202705,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a7e611473abaf79a5ea364e82403281e",
                    "sha256": "e584e1e375dc780fff2f6edf910c461c59fe453bbb9c361023cf864414502f8f"
                },
                "downloads": -1,
                "filename": "victron_ble-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a7e611473abaf79a5ea364e82403281e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 8434,
                "upload_time": "2022-12-24T01:46:03",
                "upload_time_iso_8601": "2022-12-24T01:46:03.291697Z",
                "url": "https://files.pythonhosted.org/packages/4b/b5/afabf7e76ec68002c9b7cb68f2ee81318f0af12beae3593b133293848ae3/victron_ble-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "41fc2ab2f653f02ca6db2bc484cf4dd7",
                    "sha256": "4383596ce51fe16d3a3a7487c41d45f273ba3a87798fa009865f4ab9e7863ec9"
                },
                "downloads": -1,
                "filename": "victron_ble-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "41fc2ab2f653f02ca6db2bc484cf4dd7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9679,
                "upload_time": "2022-12-24T01:46:04",
                "upload_time_iso_8601": "2022-12-24T01:46:04.731491Z",
                "url": "https://files.pythonhosted.org/packages/dc/5f/216682096007b62457037deb07bbd53af155aefd292645f4538318b0e1dc/victron_ble-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}