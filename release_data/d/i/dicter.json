{
    "0.1.0": {
        "info": {
            "author": "Erdogan Taskesen",
            "author_email": "erdogant@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/erdogant/dicter/archive/0.1.0.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/erdogant/dicter",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicter",
            "package_url": "https://pypi.org/project/dicter/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicter/",
            "project_urls": {
                "Download": "https://github.com/erdogant/dicter/archive/0.1.0.tar.gz",
                "Homepage": "https://github.com/erdogant/dicter"
            },
            "release_url": "https://pypi.org/project/dicter/0.1.0/",
            "requires_dist": [
                "pandas"
            ],
            "requires_python": ">=3",
            "summary": "Python package dicter",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16273779,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9c9d13215ddcc4bfc85a124602d310da",
                    "sha256": "2065825985ef2368306ff51ada985032d8d726db470cd18ca86dbd45710379cf"
                },
                "downloads": -1,
                "filename": "dicter-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9c9d13215ddcc4bfc85a124602d310da",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 8568,
                "upload_time": "2023-01-01T16:17:15",
                "upload_time_iso_8601": "2023-01-01T16:17:15.538201Z",
                "url": "https://files.pythonhosted.org/packages/81/3b/430d6448be591f94a412179bb2cd63859c5a405ace02b290d9f7c8bde537/dicter-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "495047e06814d2441c529c73de6de77a",
                    "sha256": "3795ee35beded46692caf93d81622c034a012b7a827df72cd69ecb41db4c28bd"
                },
                "downloads": -1,
                "filename": "dicter-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "495047e06814d2441c529c73de6de77a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 9781,
                "upload_time": "2023-01-01T16:17:17",
                "upload_time_iso_8601": "2023-01-01T16:17:17.453450Z",
                "url": "https://files.pythonhosted.org/packages/85/00/63e02fddbc3186a042a59318d62ad8d89c669e01b495d059a38134b13a70/dicter-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Erdogan Taskesen",
            "author_email": "erdogant@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "\n<p align=\"center\">\n  <a href=\"https://erdogant.github.io/dicter/\">\n  <img src=\"https://github.com/erdogant/dicter/blob/main/docs/figs/logo.png\" width=\"400\" />\n  </a>\n</p>\n\n\n[![Python](https://img.shields.io/pypi/pyversions/dicter)](https://img.shields.io/pypi/pyversions/dicter)\n[![Pypi](https://img.shields.io/pypi/v/dicter)](https://pypi.org/project/dicter/)\n[![Docs](https://img.shields.io/badge/Sphinx-Docs-Green)](https://erdogant.github.io/dicter/)\n[![LOC](https://sloc.xyz/github/erdogant/dicter/?category=code)](https://github.com/erdogant/dicter/)\n[![Downloads](https://static.pepy.tech/personalized-badge/dicter?period=month&units=international_system&left_color=grey&right_color=brightgreen&left_text=PyPI%20downloads/month)](https://pepy.tech/project/dicter)\n[![Downloads](https://static.pepy.tech/personalized-badge/dicter?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Downloads)](https://pepy.tech/project/dicter)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/erdogant/dicter/blob/master/LICENSE)\n[![Forks](https://img.shields.io/github/forks/erdogant/dicter.svg)](https://github.com/erdogant/dicter/network)\n[![Issues](https://img.shields.io/github/issues/erdogant/dicter.svg)](https://github.com/erdogant/dicter/issues)\n[![Project Status](http://www.repostatus.org/badges/latest/active.svg)](http://www.repostatus.org/#active)\n[![DOI](https://zenodo.org/badge/228166657.svg)](https://zenodo.org/badge/latestdoi/228166657)\n![GitHub Repo stars](https://img.shields.io/github/stars/erdogant/dicter)\n![GitHub repo size](https://img.shields.io/github/repo-size/erdogant/dicter)\n[![Donate](https://img.shields.io/badge/Support%20this%20project-grey.svg?logo=github%20sponsors)](https://erdogant.github.io/dicter/pages/html/Documentation.html#)\n<!---[![BuyMeCoffee](https://img.shields.io/badge/buymea-coffee-yellow.svg)](https://www.buymeacoffee.com/erdogant)-->\n<!---[![Coffee](https://img.shields.io/badge/coffee-black-grey.svg)](https://erdogant.github.io/donate/?currency=USD&amount=5)-->\n\n\n* ``dicter`` is Python package with advanced dictionary functions:\n\n\t* Traverse through nested dicts to retrieve key-path.\n\t* Set value in dictionary using key-path\n\t* Get value in dictionary using key-path.\n\t* Flattens dicts.\n\t* Compare two dicts.\n\t* Store and load in json.\n\n\n\n# \n**Star this repo if you like it! \u2b50\ufe0f**\n#\n\n## Documentation\n\n* [**dicter documentation pages (Sphinx)**](https://erdogant.github.io/dicter/)\n\n\n## Installation\n* Install dicter from PyPI (recommended). dicter is compatible with Python 3.6+ and runs on Linux, MacOS X and Windows. \n* A new environment can be created as following:\n\n\n```bash\npip install -U dicter\n```\n\n* Alternatively, you can install from the GitHub source:\n```bash\n# Directly install from github source\npip install git+https://github.com/erdogant/dicter\n```\n\n## Examples\n\n#### Import dicter package\n```python\nimport dicter as dt\n```\n\n#### Traverse all paths in dictionary.\n```python\nimport dicter as dt\n # Example dict:\nd = {'level_a': 1, 'level_b': {'a': 'hello world'}, 'level_c': 3, 'level_d': {'a': 1, 'b': 2, 'c': {'e': 10}}, 'level_e': 2}\n# Walk through dict to get all paths\npaths = dt.path(d)\n\nprint(paths)\n# [[['level_a'], 1],\n# [['level_c'], 3],\n# [['level_e'], 2],\n# [['level_b', 'a'], 'hello world'],\n# [['level_d', 'a'], 1],\n# [['level_d', 'b'], 2],\n# [['level_d', 'c', 'e'], 10]]\n```\n\n#### Get value from dictionary using nested keys.\n```python\n# Import dicter\nimport dicter as dt\n\n# Example dictionary\nd = {'level_a': 1, 'level_b': {'a': 'hello world'}, 'level_c': 3, 'level_d': {'a': 1, 'b': 2, 'c': {'e': 10}}, 'level_e': 2}\n# Get the value for the nested path for:\nvalue = dt.get_nested(d, key_path=[\"level_b\", \"a\"])\nprint(value)\n# 'hello world'\n\n```\n\n#### Set value from dictionary using nested keys.\n```python\n# Import dicter\nimport dicter as dt\n\n# Example: New path and value in dictionary.\nd = {}\nkey_path = ['person', 'address', 'city']\ndt.set_nested(d, key_path, 'New York')\n# Print updated dictionary\nprint(d)\n# {'person': {'address': {'city': 'New York'}}}\n\n```\n\n#### Set value from dictionary using nested keys.\n```python\n# Import dicter\nimport dicter as dt\n\n# Example dict\nd = {'level_a': 1, 'level_b': {'a': 'hello world'}, 'level_c': 3, 'level_d': {'a': 1, 'b': 2, 'c': {'e': 10}}, 'level_e': 2}\n# Flatten dictionary\ndflat = dt.flatten(d)\n\nprint(d_flat)\n\n# [['level_a', 1],\n#  ['a', 'hello world'],\n#  ['level_c', 3],\n#  ['a', 1],\n#  ['b', 2],\n#  ['e', 10],\n#  ['level_e', 2]]\n \n```\n\n\n#### Depth of dictionary.\n```python\n# Import dicter\nimport dicter as dt\n\nd = {'level_a': 1, 'level_b': {'a': 'hello world'}, 'level_c': 3, 'level_d': {'a': 1, 'b': 2, 'c': {'e': 10}}, 'level_e': 2}\nn = dt.depth(d)\n\n```\n\n#### Compare dictionary.\n```python\n# Import dicter\nimport dicter as dt\n\nExample: Add\nd1 = {'level_a': 1, 'level_b': {'a': 'hello world'}, 'level_c': 'new in d2'}\nd2 = {'level_a': 1, 'level_b': {'a': 'hello world'}}\nout = dt.compare(d1, d2)\nprint(out)\n\nExample: Remove\nd1 = {'level_a': 1, 'level_b': {'a': 'hello world'}}\nd2 = {'level_a': 1, 'level_b': {'a': 'hello world'}, 'level_c': 'new in d2'}\nout = dt.compare(d1, d2)\nprint(out)\n\nExample: Modified\nd1 = {'level_a': 1, 'level_b': {'a': 'hello world'}}\nd2 = {'level_a': 1, 'level_b': {'a': 'modified'}}\nout = dt.compare(d1, d2)\nprint(out['modified'])\n\n```\n\n#### Save and load dictionary.\n```python\n\n# Import dicter\nimport dicter as dt\n\nd = {'level_a': None, 'level_b': {'a': 'hello world'}, 'level_c': True, 'level_d': 2.3, 'level_e': [[1,2,3], [1,2]]}\nfilepath='c:/temp/test/dicter_save.json'\n\n# First save\ndt.save(d, filepath=filepath, overwrite=True)\n\n# Load\nd = dt.load(filepath)\n```\n\n## General\n\n#### References\n* https://github.com/erdogant/dicter\n\n#### Citation\nPlease cite in your publications if this is useful for your research (see citation).\n   \n### Maintainers\n* Erdogan Taskesen, github: [erdogant](https://github.com/erdogant)\n\n### Contribute\n* All kinds of contributions are welcome!\n* If you wish to buy me a <a href=\"https://www.buymeacoffee.com/erdogant\">Coffee</a> for this work, it is very appreciated :)\n\n### Licence\nSee [LICENSE](LICENSE) for details.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/erdogant/dicter/archive/0.1.1.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/erdogant/dicter",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicter",
            "package_url": "https://pypi.org/project/dicter/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicter/",
            "project_urls": {
                "Download": "https://github.com/erdogant/dicter/archive/0.1.1.tar.gz",
                "Homepage": "https://github.com/erdogant/dicter"
            },
            "release_url": "https://pypi.org/project/dicter/0.1.1/",
            "requires_dist": [
                "pandas"
            ],
            "requires_python": ">=3",
            "summary": "dicter is a Python package with advanced dictionary functions.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16273779,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5f1e14c6d4816f28f20edd60fc2ecb30",
                    "sha256": "6ff490e41873bae5030bec113ba4104ca3e36fb32e8ca097ff827b10eb19676c"
                },
                "downloads": -1,
                "filename": "dicter-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5f1e14c6d4816f28f20edd60fc2ecb30",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 8867,
                "upload_time": "2023-01-01T19:02:48",
                "upload_time_iso_8601": "2023-01-01T19:02:48.588848Z",
                "url": "https://files.pythonhosted.org/packages/3f/d5/75128ee95c9089426cbe203166a22ba7af3726e200eee5d3496b4f6c7a65/dicter-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8c0d885fe7e4dbee49b768383862d08",
                    "sha256": "0345cedd645552999e673dab6fbe9c052eb2d02c327ef27bea14d8c64d0b5eb6"
                },
                "downloads": -1,
                "filename": "dicter-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f8c0d885fe7e4dbee49b768383862d08",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 9824,
                "upload_time": "2023-01-01T19:02:50",
                "upload_time_iso_8601": "2023-01-01T19:02:50.413535Z",
                "url": "https://files.pythonhosted.org/packages/bf/6a/f896a4c959da6911ec747ee324a17ac5898abaf366d282558c9c4eb1c57f/dicter-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}