{
    "1.0.0": {
        "info": {
            "author": "Marcelo Batista",
            "author_email": "batista.marcelo34@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/marcellobatiista/dicgram",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicgram",
            "package_url": "https://pypi.org/project/dicgram/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicgram/",
            "project_urls": {
                "Homepage": "https://github.com/marcellobatiista/dicgram"
            },
            "release_url": "https://pypi.org/project/dicgram/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Framework para criar bots do Telegram",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16251486,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "932c917ddd7cf9ff5853fd3a4bb8f3d2",
                    "sha256": "ae95e2d76753e87a824b212323bf5eb4fe4903d39e62373efff22b44a584dfe4"
                },
                "downloads": -1,
                "filename": "dicgram-1.0.0-py3.11.egg",
                "has_sig": false,
                "md5_digest": "932c917ddd7cf9ff5853fd3a4bb8f3d2",
                "packagetype": "bdist_egg",
                "python_version": "1.0.0",
                "requires_python": ">=3.7",
                "size": 18424,
                "upload_time": "2022-11-21T02:13:43",
                "upload_time_iso_8601": "2022-11-21T02:13:43.293446Z",
                "url": "https://files.pythonhosted.org/packages/a5/f1/f4d35ceeb359acfa4aa99aa0b08d46c355af2a0a45b91b127470ba857ee5/dicgram-1.0.0-py3.11.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.0": {
        "info": {
            "author": "Marcelo Batista",
            "author_email": "batista.marcelo34@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/marcellobatiista/dicgram",
            "keywords": "telegram chat messenger api client library python",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicgram",
            "package_url": "https://pypi.org/project/dicgram/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicgram/",
            "project_urls": {
                "Homepage": "https://github.com/marcellobatiista/dicgram"
            },
            "release_url": "https://pypi.org/project/dicgram/2.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Framework para criar bots do Telegram",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16251486,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f54a69a116364dd4b0ebf979c2eb1586",
                    "sha256": "9a682e7ced57e750d8a4ec156b1a31f4d89649e1971ed1514dc52235bc744713"
                },
                "downloads": -1,
                "filename": "dicgram-2.0.0-py3.11.egg",
                "has_sig": false,
                "md5_digest": "f54a69a116364dd4b0ebf979c2eb1586",
                "packagetype": "bdist_egg",
                "python_version": "2.0.0",
                "requires_python": ">=3.7",
                "size": 20772,
                "upload_time": "2022-11-21T02:27:26",
                "upload_time_iso_8601": "2022-11-21T02:27:26.118762Z",
                "url": "https://files.pythonhosted.org/packages/1f/f1/1eca8e7678a7df25d6f58fcb005876a8dd89dac8c1c34b54ef86b3784bbd/dicgram-2.0.0-py3.11.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.1": {
        "info": {
            "author": "Marcelo Batista",
            "author_email": "batista.marcelo34@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/marcellobatiista/dicgram",
            "keywords": "telegram chat messenger api client library python",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicgram",
            "package_url": "https://pypi.org/project/dicgram/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicgram/",
            "project_urls": {
                "Homepage": "https://github.com/marcellobatiista/dicgram"
            },
            "release_url": "https://pypi.org/project/dicgram/2.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Framework para criar bots do Telegram",
            "version": "2.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16251486,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "40f5c37da579324024048f2cdd41820d",
                    "sha256": "0e4122ecf86ee35d0ff5ecdcbfd8f4fabd40bb2fb8cd00a717c354f3bfa24df5"
                },
                "downloads": -1,
                "filename": "dicgram-2.0.1-py3.11.egg",
                "has_sig": false,
                "md5_digest": "40f5c37da579324024048f2cdd41820d",
                "packagetype": "bdist_egg",
                "python_version": "2.0.1",
                "requires_python": ">=3.7",
                "size": 20737,
                "upload_time": "2022-11-21T02:34:15",
                "upload_time_iso_8601": "2022-11-21T02:34:15.626515Z",
                "url": "https://files.pythonhosted.org/packages/75/01/c98c9b85d8de1216e66dba27e4e6a4d4160f9ae3d81f6c8dbf80af6b6091/dicgram-2.0.1-py3.11.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.2": {
        "info": {
            "author": "Marcelo Batista",
            "author_email": "batista.marcelo34@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/marcellobatiista/dicgram",
            "keywords": "telegram chat messenger api client library python",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicgram",
            "package_url": "https://pypi.org/project/dicgram/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicgram/",
            "project_urls": {
                "Homepage": "https://github.com/marcellobatiista/dicgram"
            },
            "release_url": "https://pypi.org/project/dicgram/2.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Framework para criar bots do Telegram",
            "version": "2.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16251486,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "195ef74198cd86b63ea92cf58f29d1c8",
                    "sha256": "012d85e8fee00c3221428f1764be3989b6e080b268711a28159e6bf7c8a0e3a7"
                },
                "downloads": -1,
                "filename": "dicgram-2.0.2-py3.11.egg",
                "has_sig": false,
                "md5_digest": "195ef74198cd86b63ea92cf58f29d1c8",
                "packagetype": "bdist_egg",
                "python_version": "2.0.2",
                "requires_python": ">=3.7",
                "size": 20749,
                "upload_time": "2022-11-21T04:48:10",
                "upload_time_iso_8601": "2022-11-21T04:48:10.980866Z",
                "url": "https://files.pythonhosted.org/packages/d9/5a/e5c6c3cfe3535bb8af985f49433ce68833202c95b8c250622c5683fbda72/dicgram-2.0.2-py3.11.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.5": {
        "info": {
            "author": "Marcelo Batista",
            "author_email": "batista.marcelo34@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Dicgram\r\n\r\nDicgram \u00e9 um Framework simples para cria\u00e7\u00e3o de bots para o Telegram em Python\r\n\r\n## Instala\u00e7\u00e3o\r\n\r\n```bash\r\npip install dicgram\r\n```\r\n\r\nO uso dele \u00e9 bem simples, basta criar um arquivo principal e importar o Dicgram, e criar uma inst\u00e2ncia do Bot.\r\n\r\nOs comandos s\u00e3o criados em um dicion\u00e1rio, onde a chave \u00e9 o comando e o valor \u00e9 uma string \r\nque ser\u00e1 enviada como resposta ao comando enviado pelo usu\u00e1rio.\r\n\r\n### Exemplo de uso b\u00e1sico\r\n\r\n```python\r\nfrom dicgram import Bot\r\n\r\nbot = Bot('<TOKEN>')\r\n\r\n# Responde aos comandos no privado\r\nbot.comandos_privado = {\r\n    '/start': 'Ol\u00e1, mundo! Eu sou um bot!',\r\n    '/help': 'Em que posso ajudar? :)',\r\n}\r\n\r\n# Responde aos comandos em canais e grupos\r\nbot.comandos_publico = {\r\n    '/start': 'Ol\u00e1, mundo! (publico)',\r\n    '/help': 'Em que posso ajudar, (publico)?',\r\n}\r\n\r\n# Usu\u00e1rio privado: /start\r\n# Bot: Ol\u00e1, mundo! Eu sou um bot!\r\n\r\n# Usu\u00e1rio p\u00fablico: /start\r\n# Bot: Ol\u00e1, mundo! (publico)\r\n\r\n# Usu\u00e1rio privado: /help\r\n# Bot: Em que posso ajudar? :)\r\n\r\n# Usu\u00e1rio p\u00fablico: /help\r\n# Bot: Em que posso ajudar, (publico)?\r\n````\r\n\r\nAl\u00e9m disso, \u00e9 poss\u00edvel criar comandos com par\u00e2metros, que ser\u00e3o passados como argumentos para a fun\u00e7\u00e3o de resposta.\r\n\r\n### Exemplo de uso intermedi\u00e1rio\r\n\r\n```python\r\nfrom dicgram import Bot\r\n\r\nbot = Bot('<TOKEN>')\r\n\r\ndef soma(mim, msg, args):\r\n    return sum(map(int, args))\r\n\r\nbot.comandos_privado = {\r\n    '/soma': soma,\r\n}\r\n\r\n# Usu\u00e1rio: /soma 1 2 3\r\n# Bot: 6\r\n\r\n# Usu\u00e1rio: /soma 1 2 3 4 5 6 7 8 9 10\r\n# Bot: 55\r\n\r\n# Usu\u00e1rio: /soma 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\r\n# Bot: 210\r\n```\r\n\r\nQuer tornar seu bot mais din\u00e2mico? Existem dois argumentos de fluxo opcionais para a fun\u00e7\u00e3o de resposta, `mim` e `msg`.\r\n\r\nO primeiro \u00e9 um objeto da classe `Bot`, que cont\u00e9m informa\u00e7\u00f5es do seu bot e m\u00e9todos da API do Telegram para enviar mensagens, arquivos, etc.\r\n\r\nO segundo \u00e9 um objeto da classe `Mensagem`, que cont\u00e9m informa\u00e7\u00f5es sobre a mensagem enviada pelo usu\u00e1rio,\r\ncomo o ID do usu\u00e1rio, o nome do usu\u00e1rio, o ID do chat, o tipo do chat, etc. \r\n\r\n\r\n### Exemplo de uso intermedi\u00e1rio ||\r\n\r\n```python\r\nfrom dicgram import Bot\r\n\r\nbot = Bot('<TOKEN>')\r\n\r\ndef consultar_cotacao(mim, msg, args):\r\n    if not args:\r\n        mim.send_message(chat_id=msg.from_user.id, text='Voc\u00ea precisa informar o nome da moeda.')\r\n        return 'Uma mensagem foi enviada para voc\u00ea no privado.'\r\n\r\n    moeda = args[0].upper()\r\n    if moeda not in ('USD', 'EUR', 'BTC'):\r\n        bot.send_message(chat_id=msg.from_user.id, text='Moeda inv\u00e1lida.')\r\n        return 'Enviei uma mensagem para voc\u00ea no privado.'\r\n\r\n    cotacao = {\r\n        'USD': 3.75,\r\n        'EUR': 4.20,\r\n        'BTC': 50000.00,\r\n    }[moeda]\r\n\r\n    return f'A cota\u00e7\u00e3o do {moeda} \u00e9 {cotacao}.'\r\n\r\n\r\nbot.comandos_privado['/start'] = 'Ol\u00e1, mundo! Eu sou um bot!'\r\nbot.comandos_publico['/cotacao'] = consultar_cotacao\r\n\r\n\r\n# Usu\u00e1rio p\u00fablico: /cotacao\r\n# Bot privado: Voc\u00ea precisa informar o nome da moeda.\r\n# Bot p\u00fablico: Uma mensagem foi enviada para voc\u00ea no privado.\r\n\r\n# Usu\u00e1rio p\u00fablico: /cotacao usd\r\n# Bot publico: A cota\u00e7\u00e3o do USD \u00e9 3.75.\r\n\r\n# Usu\u00e1rio p\u00fablico: /cotacao xyz\r\n# Bot privado: Moeda inv\u00e1lida.\r\n# Bot p\u00fablico: Enviei uma mensagem para voc\u00ea no privado.\r\n\r\n# Usu\u00e1rio privado: /start\r\n# Bot: Ol\u00e1, mundo! Eu sou um bot!\r\n```\r\n\r\nTem certos momentos em que voc\u00ea quer que o bot responda a uma mensagem espec\u00edfica, sem que seja necess\u00e1rio um comando.\r\nPara isso, voc\u00ea pode usar chaves de eventos para o dicion\u00e1rio de comandos.\r\n\r\nNo momento, existem tr\u00eas chaves de eventos: \r\n\r\n - `@mensagem`\r\n - `@edit`\r\n - `@chat`\r\n\r\nA chave `@mensagem` \u00e9 usada para responder a eventos de mensagens novas.\r\n\r\nA chave `@chat` \u00e9 usada para responder a eventos do \r\nque acontece no chat, como um novo usu\u00e1rio entrando no grupo, um usu\u00e1rio saindo do grupo, etc. \r\n\r\nA chave `@edit` \u00e9 usada para \r\nresponder a eventos de mensagens editadas pelo usu\u00e1rio.\r\n\r\n### Exemplo de uso avan\u00e7ado\r\n\r\n```python\r\nfrom dicgram import Bot\r\n\r\nbot = Bot(token='<TOKEN>')\r\n\r\nusuarios = {}\r\nchat = None\r\n\r\n\r\ndef contador_de_mensagens(mim, msg, args):\r\n    global chat\r\n    chat = msg.chat.id\r\n\r\n    if msg.from_user.id not in usuarios:\r\n        usuarios[msg.from_user.id] = 1\r\n    else:\r\n        usuarios[msg.from_user.id] += 1\r\n\r\n\r\ndef mostrar_contagem(mim, msg, args):\r\n    if msg.from_user.id in usuarios:\r\n        nome = msg.from_user.first_name\r\n        return f'{nome}, voc\u00ea j\u00e1 mandou {usuarios[msg.from_user.id]} mensagens'\r\n    else:\r\n        return 'Voc\u00ea ainda n\u00e3o mandou nenhuma mensagem'\r\n\r\n\r\ndef desligar_contador(mim, msg, args):\r\n    mim.comandos_publico.pop('@mensagem', None)\r\n    usuarios.clear()\r\n    mim.send_message(chat_id=chat,\r\n                    text='Pessoas, o contador de mensagens foi desligado pelo admin')\r\n    return 'Contador de mensagens desligado!'\r\n\r\n\r\nbot.comandos_publico = {\r\n    '@mensagem': contador_de_mensagens,\r\n    '/contagem': mostrar_contagem,\r\n}\r\nbot.comandos_privado['/desligar'] = desligar_contador\r\n\r\n# Usu\u00e1rio1 p\u00fablico: /contagem\r\n# Bot p\u00fablico: Voc\u00ea ainda n\u00e3o mandou nenhuma mensagem\r\n\r\n# Usu\u00e1rio1 p\u00fablico: Ol\u00e1, mundo!\r\n\r\n# Usu\u00e1rio1 p\u00fablico: /contagem\r\n# Bot p\u00fablico: Dev, voc\u00ea j\u00e1 mandou 1 mensagens\r\n\r\n# Usu\u00e1rio privdao: /desligar\r\n# Bot privado: Contador de mensagens desligado!\r\n# Bot p\u00fablico: Pessoas, o contador de mensagens foi desligado pelo admin\r\n```\r\n\r\nOs m\u00e9todos da API do Telegram s\u00e3o acessados atrav\u00e9s da inst\u00e2ncia da classe `Bot`.\r\nPor exemplo, o m\u00e9todo send_message \u00e9 acessado atrav\u00e9s de `bot.send_message`.\r\nO nome dos m\u00e9todos \u00e9 o mesmo da API do Telegram, mas em snake_case.\r\n\r\nA documenta\u00e7\u00e3o da API do Telegram pode ser encontrada [aqui](https://core.telegram.org/bots/api#available-methods).\r\n\r\n### Exemplo de uso de m\u00e9todos da API do Telegram\r\n\r\n```python\r\nfrom dicgram import Bot\r\n\r\n\r\nbot = Bot(token='<TOKEN>', update=False)\r\n\r\nbot.set_chat_title(chat_id='<ID DO GRUPO>', title='Novo t\u00edtulo do grupo')\r\nbot.send_location(chat_id='<ID DO GRUPO>', latitude=-23.5505, longitude=-46.6333)\r\n# etc...\r\n```\r\n\r\n### Classe `Bot`\r\n\r\nA classe `Bot` \u00e9 a classe principal do m\u00f3dulo `dicgram.cliente`.\r\nEla \u00e9 respons\u00e1vel por fazer a conex\u00e3o com o Telegram e gerenciar os eventos.\r\n\r\nPar\u00e2metros:\r\n\r\n* `token`: O token do bot que voc\u00ea recebeu do BotFather. (Obrigat\u00f3rio)\r\n* `update`: O loop de captura de eventos. (Opcional). Se n\u00e3o for informado, continur\u00e1 como True.\r\n* `atrasar_update`: O tempo de espera para receber uma resposta do Telegram. (Opcional). Se n\u00e3o for informado, ser\u00e1 0.5s.\r\n\r\n\r\n### Projeto feito por [Marcelo](https://github.com/marcellobatiista)\r\n\r\n* [Twitter](https://twitter.com/marcellobatiist)\r\n* [Telegram](https://t.me/@SP4CNE)\r\n\r\n### Licen\u00e7a\r\n\r\nMIT License\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/marcellobatiista/dicgram",
            "keywords": "telegram chat messenger api client library python",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dicgram",
            "package_url": "https://pypi.org/project/dicgram/",
            "platform": null,
            "project_url": "https://pypi.org/project/dicgram/",
            "project_urls": {
                "Homepage": "https://github.com/marcellobatiista/dicgram"
            },
            "release_url": "https://pypi.org/project/dicgram/2.0.5/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Framework para criar bots do Telegram",
            "version": "2.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16251486,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c72b1c56f89deec402041ac35d2f457e",
                    "sha256": "4be4e483c04179bc0380652fef9e4325ae9bff441805850179036f065539df03"
                },
                "downloads": -1,
                "filename": "dicgram-2.0.5-py3.11.egg",
                "has_sig": false,
                "md5_digest": "c72b1c56f89deec402041ac35d2f457e",
                "packagetype": "bdist_egg",
                "python_version": "2.0.5",
                "requires_python": ">=3.7",
                "size": 21025,
                "upload_time": "2022-12-29T19:53:34",
                "upload_time_iso_8601": "2022-12-29T19:53:34.948745Z",
                "url": "https://files.pythonhosted.org/packages/05/c9/6bceb6b0e336d80eae788a9cd97c17009bea9ea317e9fc6c56660f2986b4/dicgram-2.0.5-py3.11.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}