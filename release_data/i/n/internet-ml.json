{
    "0.1.1": {
        "info": {
            "author": "Thamognya Kodi",
            "author_email": "contact@thamognya.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/thamognya/internet-ml",
            "keywords": "Transformer,NLP,NLI,Internet,Networks,BERT,SOTA,XLNet,sentence,embedding,PyTorch,NLP,deep,learning,Tensorflow,Huggingface,image-gen,dall-E,gpt,stable diffusion",
            "license": "AGPL-3.0-or-later",
            "maintainer": "",
            "maintainer_email": "",
            "name": "internet-ml",
            "package_url": "https://pypi.org/project/internet-ml/",
            "platform": null,
            "project_url": "https://pypi.org/project/internet-ml/",
            "project_urls": {
                "Homepage": "https://github.com/thamognya/internet-ml",
                "Repository": "https://github.com/thamognya/internet-ml"
            },
            "release_url": "https://pypi.org/project/internet-ml/0.1.1/",
            "requires_dist": [
                "typer[all] (>=0.4.0,<0.5.0)",
                "rich (>=10.14.0,<11.0.0)",
                "tokenizers (>=0.13.2,<0.14.0)",
                "pandas (>=1.5.2,<2.0.0)",
                "numpy (>=1.24.0,<2.0.0)",
                "torch (>=1.13.1,<2.0.0)",
                "datasets (>=2.8.0,<3.0.0)",
                "accelerate (>=0.15.0,<0.16.0)",
                "diffusers[torch] (>=0.11.1,<0.12.0)",
                "timm (>=0.6.12,<0.7.0)",
                "torchvision (>=0.14.1,<0.15.0)",
                "torchaudio (>=0.13.1,<0.14.0)",
                "python-dotenv (>=0.21.0,<0.22.0)",
                "requests (>=2.28.1,<3.0.0)",
                "types-requests (>=2.28.11.7,<3.0.0.0)"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "Internet-ML: Allowing ML to connect to the internet",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16216757,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5639550fa6a3f8419250d0826b1e22da",
                    "sha256": "c2af476f6cd7a9504f425a22019dbce3d515914988e040db4206137cd88bfddc"
                },
                "downloads": -1,
                "filename": "internet_ml-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5639550fa6a3f8419250d0826b1e22da",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 30042,
                "upload_time": "2022-12-26T14:22:46",
                "upload_time_iso_8601": "2022-12-26T14:22:46.526327Z",
                "url": "https://files.pythonhosted.org/packages/1b/8d/8a852905279ad3424f775ae59429b1b12c089ec993968493c9c963c1f730/internet_ml-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ee04fba4c1e35aafbcd337bd6b4bfe53",
                    "sha256": "155ea7754e89fadacd043157dccc987431e9d1dda0e682e1b98ad904ce2b272e"
                },
                "downloads": -1,
                "filename": "internet_ml-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "ee04fba4c1e35aafbcd337bd6b4bfe53",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 30953,
                "upload_time": "2022-12-26T14:22:49",
                "upload_time_iso_8601": "2022-12-26T14:22:49.100723Z",
                "url": "https://files.pythonhosted.org/packages/6b/a6/1a6b6341f39d6f2718c8abb1902392416360afe3b8cf88bed8d5cb54b41b/internet_ml-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Thamognya Kodi",
            "author_email": "contact@thamognya.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description": "# Internet-ML: Allowing ML to connect to the internet\n\n<div align=\"center\">\n\n[![Build status](https://github.com/internet-ml/internet-ml/workflows/build/badge.svg?branch=master&event=push)](https://github.com/internet-ml/internet-ml/actions?query=workflow%3Abuild)\n[![Python Version](https://img.shields.io/pypi/pyversions/internet-ml.svg)](https://pypi.org/project/internet-ml/)\n[![Dependencies Status](https://img.shields.io/badge/dependencies-up%20to%20date-brightgreen.svg)](https://github.com/internet-ml/internet-ml/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Aapp%2Fdependabot)\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Security: bandit](https://img.shields.io/badge/security-bandit-green.svg)](https://github.com/PyCQA/bandit)\n[![Pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/internet-ml/internet-ml/blob/master/.pre-commit-config.yaml)\n[![Semantic Versions](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--versions-e10079.svg)](https://github.com/internet-ml/internet-ml/releases)\n[![License](https://img.shields.io/github/license/internet-ml/internet-ml)](https://github.com/internet-ml/internet-ml/blob/master/LICENSE)\n![Coverage Report](assets/images/coverage.svg)\n\n</div>\n\n## Very first steps\n\n### Initialize your code\n\n1. Initialize `git` inside your repo:\n\n```bash\ncd internet-ml && git init\n```\n\n2. If you don't have `Poetry` installed run:\n\n```bash\nmake poetry-download\n```\n\n3. Initialize poetry and install `pre-commit` hooks:\n\n```bash\nmake install\nmake pre-commit-install\n```\n\n4. Run the codestyle:\n\n```bash\nmake codestyle\n```\n\n5. Upload initial code to GitHub:\n\n```bash\ngit add .\ngit commit -m \":tada: Initial commit\"\ngit branch -M main\ngit remote add origin https://github.com/internet-ml/internet-ml.git\ngit push -u origin main\n```\n\n### Set up bots\n\n-   Set up [Dependabot](https://docs.github.com/en/github/administering-a-repository/enabling-and-disabling-version-updates#enabling-github-dependabot-version-updates) to ensure you have the latest dependencies.\n-   Set up [Stale bot](https://github.com/apps/stale) for automatic issue closing.\n\n### Poetry\n\nWant to know more about Poetry? Check [its documentation](https://python-poetry.org/docs/).\n\n<details>\n<summary>Details about Poetry</summary>\n<p>\n\nPoetry's [commands](https://python-poetry.org/docs/cli/#commands) are very intuitive and easy to learn, like:\n\n-   `poetry add numpy@latest`\n-   `poetry run pytest`\n-   `poetry publish --build`\n\netc\n\n</p>\n</details>\n\n### Building and releasing your package\n\nBuilding a new version of the application contains steps:\n\n-   Bump the version of your package `poetry version <version>`. You can pass the new version explicitly, or a rule such as `major`, `minor`, or `patch`. For more details, refer to the [Semantic Versions](https://semver.org/) standard.\n-   Make a commit to `GitHub`.\n-   Create a `GitHub release`.\n-   And... publish \ud83d\ude42 `poetry publish --build`\n\n## \ud83c\udfaf What's next\n\nWell, that's up to you \ud83d\udcaa\ud83c\udffb. I can only recommend the packages and articles that helped me.\n\n-   [`Typer`](https://github.com/tiangolo/typer) is great for creating CLI applications.\n-   [`Rich`](https://github.com/willmcgugan/rich) makes it easy to add beautiful formatting in the terminal.\n-   [`Pydantic`](https://github.com/samuelcolvin/pydantic/) \u2013 data validation and settings management using Python type hinting.\n-   [`Loguru`](https://github.com/Delgan/loguru) makes logging (stupidly) simple.\n-   [`tqdm`](https://github.com/tqdm/tqdm) \u2013 fast, extensible progress bar for Python and CLI.\n-   [`IceCream`](https://github.com/gruns/icecream) is a little library for sweet and creamy debugging.\n-   [`orjson`](https://github.com/ijl/orjson) \u2013 ultra fast JSON parsing library.\n-   [`Returns`](https://github.com/dry-python/returns) makes you function's output meaningful, typed, and safe!\n-   [`Hydra`](https://github.com/facebookresearch/hydra) is a framework for elegantly configuring complex applications.\n-   [`FastAPI`](https://github.com/tiangolo/fastapi) is a type-driven asynchronous web framework.\n\nArticles:\n\n-   [Open Source Guides](https://opensource.guide/).\n-   [A handy guide to financial support for open source](https://github.com/nayafia/lemonade-stand)\n-   [GitHub Actions Documentation](https://help.github.com/en/actions).\n-   Maybe you would like to add [gitmoji](https://gitmoji.carloscuesta.me/) to commit names. This is really funny. \ud83d\ude04\n\n## \ud83d\ude80 Features\n\n### Development features\n\n-   Supports for `Python 3.11` and higher.\n-   [`Poetry`](https://python-poetry.org/) as the dependencies manager. See configuration in [`pyproject.toml`](https://github.com/internet-ml/internet-ml/blob/master/pyproject.toml) and [`setup.cfg`](https://github.com/internet-ml/internet-ml/blob/master/setup.cfg).\n-   Automatic codestyle with [`black`](https://github.com/psf/black), [`isort`](https://github.com/timothycrosley/isort) and [`pyupgrade`](https://github.com/asottile/pyupgrade).\n-   Ready-to-use [`pre-commit`](https://pre-commit.com/) hooks with code-formatting.\n-   Type checks with [`mypy`](https://mypy.readthedocs.io); docstring checks with [`darglint`](https://github.com/terrencepreilly/darglint); security checks with [`safety`](https://github.com/pyupio/safety) and [`bandit`](https://github.com/PyCQA/bandit)\n-   Testing with [`pytest`](https://docs.pytest.org/en/latest/).\n-   Ready-to-use [`.editorconfig`](https://github.com/internet-ml/internet-ml/blob/master/.editorconfig), [`.dockerignore`](https://github.com/internet-ml/internet-ml/blob/master/.dockerignore), and [`.gitignore`](https://github.com/internet-ml/internet-ml/blob/master/.gitignore). You don't have to worry about those things.\n\n### Deployment features\n\n-   `GitHub` integration: issue and pr templates.\n-   `Github Actions` with predefined [build workflow](https://github.com/internet-ml/internet-ml/blob/master/.github/workflows/build.yml) as the default CI/CD.\n-   Everything is already set up for security checks, codestyle checks, code formatting, testing, linting, docker builds, etc with [`Makefile`](https://github.com/internet-ml/internet-ml/blob/master/Makefile#L89). More details in [makefile-usage](#makefile-usage).\n-   [Dockerfile](https://github.com/internet-ml/internet-ml/blob/master/docker/Dockerfile) for your package.\n-   Always up-to-date dependencies with [`@dependabot`](https://dependabot.com/). You will only [enable it](https://docs.github.com/en/github/administering-a-repository/enabling-and-disabling-version-updates#enabling-github-dependabot-version-updates).\n-   Automatic drafts of new releases with [`Release Drafter`](https://github.com/marketplace/actions/release-drafter). You may see the list of labels in [`release-drafter.yml`](https://github.com/internet-ml/internet-ml/blob/master/.github/release-drafter.yml). Works perfectly with [Semantic Versions](https://semver.org/) specification.\n\n### Open source community features\n\n-   Ready-to-use [Pull Requests templates](https://github.com/internet-ml/internet-ml/blob/master/.github/PULL_REQUEST_TEMPLATE.md) and several [Issue templates](https://github.com/internet-ml/internet-ml/tree/master/.github/ISSUE_TEMPLATE).\n-   Files such as: `LICENSE`, `CONTRIBUTING.md`, `CODE_OF_CONDUCT.md`, and `SECURITY.md` are generated automatically.\n-   [`Stale bot`](https://github.com/apps/stale) that closes abandoned issues after a period of inactivity. (You will only [need to setup free plan](https://github.com/marketplace/stale)). Configuration is [here](https://github.com/internet-ml/internet-ml/blob/master/.github/.stale.yml).\n-   [Semantic Versions](https://semver.org/) specification with [`Release Drafter`](https://github.com/marketplace/actions/release-drafter).\n\n## Installation\n\n```bash\npip install -U internet-ml\n```\n\nor install with `Poetry`\n\n```bash\npoetry add internet-ml\n```\n\nThen you can run\n\n```bash\ninternet-ml --help\n```\n\nor with `Poetry`:\n\n```bash\npoetry run internet-ml --help\n```\n\n### Makefile usage\n\n[`Makefile`](https://github.com/internet-ml/internet-ml/blob/master/Makefile) contains a lot of functions for faster development.\n\n<details>\n<summary>1. Download and remove Poetry</summary>\n<p>\n\nTo download and install Poetry run:\n\n```bash\nmake poetry-download\n```\n\nTo uninstall\n\n```bash\nmake poetry-remove\n```\n\n</p>\n</details>\n\n<details>\n<summary>2. Install all dependencies and pre-commit hooks</summary>\n<p>\n\nInstall requirements:\n\n```bash\nmake install\n```\n\nPre-commit hooks coulb be installed after `git init` via\n\n```bash\nmake pre-commit-install\n```\n\n</p>\n</details>\n\n<details>\n<summary>3. Codestyle</summary>\n<p>\n\nAutomatic formatting uses `pyupgrade`, `isort` and `black`.\n\n```bash\nmake codestyle\n\n# or use synonym\nmake formatting\n```\n\nCodestyle checks only, without rewriting files:\n\n```bash\nmake check-codestyle\n```\n\n> Note: `check-codestyle` uses `isort`, `black` and `darglint` library\n\nUpdate all dev libraries to the latest version using one comand\n\n```bash\nmake update-dev-deps\n```\n\n</p>\n</details>\n\n<details>\n<summary>4. Code security</summary>\n<p>\n\n```bash\nmake check-safety\n```\n\nThis command launches `Poetry` integrity checks as well as identifies security issues with `Safety` and `Bandit`.\n\n```bash\nmake check-safety\n```\n\n</p>\n</details>\n\n<details>\n<summary>5. Type checks</summary>\n<p>\n\nRun `mypy` static type checker\n\n```bash\nmake mypy\n```\n\n</p>\n</details>\n\n<details>\n<summary>6. Tests with coverage badges</summary>\n<p>\n\nRun `pytest`\n\n```bash\nmake test\n```\n\n</p>\n</details>\n\n<details>\n<summary>7. All linters</summary>\n<p>\n\nOf course there is a command to ~~rule~~ run all linters in one:\n\n```bash\nmake lint\n```\n\nthe same as:\n\n```bash\nmake test && make check-codestyle && make mypy && make check-safety\n```\n\n</p>\n</details>\n\n<details>\n<summary>8. Docker</summary>\n<p>\n\n```bash\nmake docker-build\n```\n\nwhich is equivalent to:\n\n```bash\nmake docker-build VERSION=latest\n```\n\nRemove docker image with\n\n```bash\nmake docker-remove\n```\n\nMore information [about docker](https://github.com/internet-ml/internet-ml/tree/master/docker).\n\n</p>\n</details>\n\n<details>\n<summary>9. Cleanup</summary>\n<p>\nDelete pycache files\n\n```bash\nmake pycache-remove\n```\n\nRemove package build\n\n```bash\nmake build-remove\n```\n\nDelete .DS_STORE files\n\n```bash\nmake dsstore-remove\n```\n\nRemove .mypycache\n\n```bash\nmake mypycache-remove\n```\n\nOr to remove all above run:\n\n```bash\nmake cleanup\n```\n\n</p>\n</details>\n\n## \ud83d\udcc8 Releases\n\nYou can see the list of available releases on the [GitHub Releases](https://github.com/internet-ml/internet-ml/releases) page.\n\nWe follow [Semantic Versions](https://semver.org/) specification.\n\nWe use [`Release Drafter`](https://github.com/marketplace/actions/release-drafter). As pull requests are merged, a draft release is kept up-to-date listing the changes, ready to publish when you\u2019re ready. With the categories option, you can categorize pull requests in release notes using labels.\n\n### List of labels and corresponding titles\n\n|               **Label**               |  **Title in Releases**  |\n| :-----------------------------------: | :---------------------: |\n|       `enhancement`, `feature`        |       \ud83d\ude80 Features       |\n| `bug`, `refactoring`, `bugfix`, `fix` | \ud83d\udd27 Fixes & Refactoring  |\n|       `build`, `ci`, `testing`        | \ud83d\udce6 Build System & CI/CD |\n|              `breaking`               |   \ud83d\udca5 Breaking Changes   |\n|            `documentation`            |    \ud83d\udcdd Documentation     |\n|            `dependencies`             | \u2b06\ufe0f Dependencies updates |\n\nYou can update it in [`release-drafter.yml`](https://github.com/internet-ml/internet-ml/blob/master/.github/release-drafter.yml).\n\nGitHub creates the `bug`, `enhancement`, and `documentation` labels for you. Dependabot creates the `dependencies` label. Create the remaining labels on the Issues tab of your GitHub repository, when you need them.\n\n## \ud83d\udee1 License\n\n[![License](https://img.shields.io/github/license/internet-ml/internet-ml)](https://github.com/internet-ml/internet-ml/blob/master/LICENSE)\n\nThis project is licensed under the terms of the `GNU GPL v3.0` license. See [LICENSE](https://github.com/internet-ml/internet-ml/blob/master/LICENSE) for more details.\n\n## \ud83d\udcc3 Citation\n\n```bibtex\n@misc{internet-ml,\n  author = {Thamognya Kodi},\n  title = {Internet-ML: Allowing ML to connect to the internet},\n  year = {2022},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/thamognya/internet-ml}}\n}\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/thamognya/internet-ml",
            "keywords": "Transformer,NLP,NLI,Internet,Networks,BERT,SOTA,XLNet,sentence,embedding,PyTorch,NLP,deep,learning,Tensorflow,Huggingface,image-gen,dall-E,gpt,stable diffusion",
            "license": "AGPL-3.0-or-later",
            "maintainer": "",
            "maintainer_email": "",
            "name": "internet-ml",
            "package_url": "https://pypi.org/project/internet-ml/",
            "platform": null,
            "project_url": "https://pypi.org/project/internet-ml/",
            "project_urls": {
                "Homepage": "https://github.com/thamognya/internet-ml",
                "Repository": "https://github.com/thamognya/internet-ml"
            },
            "release_url": "https://pypi.org/project/internet-ml/0.1.2/",
            "requires_dist": [
                "typer[all] (>=0.4.0,<0.5.0)",
                "rich (>=10.14.0,<11.0.0)",
                "tokenizers (>=0.13.2,<0.14.0)",
                "pandas (>=1.5.2,<2.0.0)",
                "numpy (>=1.24.0,<2.0.0)",
                "torch (>=1.13.1,<2.0.0)",
                "datasets (>=2.8.0,<3.0.0)",
                "accelerate (>=0.15.0,<0.16.0)",
                "diffusers[torch] (>=0.11.1,<0.12.0)",
                "timm (>=0.6.12,<0.7.0)",
                "torchvision (>=0.14.1,<0.15.0)",
                "torchaudio (>=0.13.1,<0.14.0)",
                "python-dotenv (>=0.21.0,<0.22.0)",
                "requests (>=2.28.1,<3.0.0)",
                "types-requests (>=2.28.11.7,<3.0.0.0)",
                "contractions (>=0.1.73,<0.2.0)",
                "urlextract (>=1.8.0,<2.0.0)",
                "scikit-learn (>=1.2.0,<2.0.0)",
                "spacy (>=3.4.4,<4.0.0)",
                "nltk (>=3.8,<4.0)",
                "beautifulsoup4 (>=4.11.1,<5.0.0)"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "Internet-ML: Allowing ML to connect to the internet",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16216757,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f927dd9157fd7d8e1cdedc6df48f4fad",
                    "sha256": "8ad26ad0d4e1f46454c58faec48df4afef25ccb498b20e9d6477179738bd6663"
                },
                "downloads": -1,
                "filename": "internet_ml-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f927dd9157fd7d8e1cdedc6df48f4fad",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 30130,
                "upload_time": "2022-12-26T15:44:25",
                "upload_time_iso_8601": "2022-12-26T15:44:25.911593Z",
                "url": "https://files.pythonhosted.org/packages/44/d1/c57c19b5bada54534a372335ccd1d7ed8319f48eb09c0799f17c8cdf29d9/internet_ml-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ed9849bd339ad5365bcead4f12dc5e6f",
                    "sha256": "2a89e6acb8990dcbfb7a4b6f7916bae585617639036f05ff586b259d4cebee26"
                },
                "downloads": -1,
                "filename": "internet_ml-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "ed9849bd339ad5365bcead4f12dc5e6f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 31110,
                "upload_time": "2022-12-26T15:44:27",
                "upload_time_iso_8601": "2022-12-26T15:44:27.555365Z",
                "url": "https://files.pythonhosted.org/packages/69/6d/d5bfbc015152c0ffb1056e88e3b03dd87d8a1d13b32dd0471e93fdfdd66e/internet_ml-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}