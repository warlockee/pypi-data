{
    "0.1.1": {
        "info": {
            "author": "Seppe De Langhe",
            "author_email": "seppe.delanghe@intelliprove.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "<h1 align=\"center\"> IntelliProve Python SDK</h1>\n\n<div align=\"center\">\n    <img src=\"https://img.shields.io/pypi/dm/intelliprove\" />\n    <img src=\"https://img.shields.io/pypi/pyversions/intelliprove\" />\n    <img src=\"https://img.shields.io/badge/version-0.1.0-blue\" />\n</div>\n\n## Requirements\n\n- Python ^3.9\n- Poetry ^1.3\n\n## Installation\n```pip install intelliprove```\n\n## Example usage\n\n```python\nimport os\nfrom pathlib import Path\n\nfrom intelliprove.api import IntelliproveApi, IntelliproveApiSettings, Biomarkers, Quality\n\n# define api key and settings\napikey = os.environ.get('apikey', 'test-api-key-1234567')\nsettings = IntelliproveApiSettings(\n    base_url='https://engine-dev.intelliprove.be'\n)\n\n# init api\napi = IntelliproveApi(apikey, settings)\n\n# define the path of the video you want to upload\nvideo_path = Path('./mydir/example.mp4')\nimage_path = Path('./mydir/example.png')\n\n# manually check quality of a video of image\nquality: Quality = api.check_conditions(video_path)\nquality: Quality = api.check_conditions(image_path)\n\n# Optional: define the performer and patient\nperformer: str = 'performer-a'\npatient: str = 'patient-1'\n\n# upload video to IntelliProve\n# performer and patient are optional\nuuid: str = api.upload(video_path)\n# or\nuuid: str = api.upload(video_path, performer=performer, patient=patient)\n\n# get the results of the uploaded video\nresults: Biomarkers = api.get_results(uuid)\n```\n\n### Dataclasses\n- Biomarkers\n  - contains the results of an uploaded video\n- Quality\n  - contains the quality parameters of a video or image\n\n### Exceptions\n- ImageQualityException\n- MediaException\n- InvalidUuidException\n- ApiException\n  - ApiNotFoundException\n  - ApiForbiddenException\n  - ApiErrorException\n  - ApiResultNotAvailable\n\n<br>\n<hr>\n\n## Development\n### Setup\n```\ngit clone git@github.com:IntelliProve/intelliprove-sdk-python.git\ncd intelliprove-sdk-python\npoetry install\n```\n\n### Install dev package\n```\npoetry build\npython3 -m pip install dist/intelliprove-*.whl\n```\n\n### Publish new version\n__Note: This will push a new version to PyPi__ <br>\n__Before release: update version in pyproject.toml__\n```\npoetry config pypi-token.pypi <TOKEN>\npoetry publish --build\n```\n\n### Running tests\n```\npoetry run python -m unittest tests/api/*.py\n```\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "intelliprove",
            "package_url": "https://pypi.org/project/intelliprove/",
            "platform": null,
            "project_url": "https://pypi.org/project/intelliprove/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/intelliprove/0.1.1/",
            "requires_dist": [
                "opencv-python (>=4.7.0.68,<5.0.0.0)",
                "requests (>=2.28.1,<3.0.0)"
            ],
            "requires_python": ">=3.9,<4.0",
            "summary": "",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16304504,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "b42f5455f72c4894c714af9a0ec451515acc15e18131a8d6405a11bd64c23d27",
                    "md5": "be0f657be51321d678cf6bb724ea9ca8",
                    "sha256": "07b76bc7f1f06b23f3caa1b0d2e22f56b13bbb077900c0b17ba2bdfdd42f340e"
                },
                "downloads": -1,
                "filename": "intelliprove-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "be0f657be51321d678cf6bb724ea9ca8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9,<4.0",
                "size": 11890,
                "upload_time": "2023-01-04T16:49:46",
                "upload_time_iso_8601": "2023-01-04T16:49:46.655139Z",
                "url": "https://files.pythonhosted.org/packages/b4/2f/5455f72c4894c714af9a0ec451515acc15e18131a8d6405a11bd64c23d27/intelliprove-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "7dbdcdc0afdc2aabae821ec4de5f63ab7372ca38c988e3d1acf94cac51b5c8b4",
                    "md5": "bc9ae83b11fb222a9813204fcf694f76",
                    "sha256": "78c06f70b6170d5a03f9f73902d45886a6578e7f65047b4e8da7e4bedbef4d02"
                },
                "downloads": -1,
                "filename": "intelliprove-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bc9ae83b11fb222a9813204fcf694f76",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9,<4.0",
                "size": 8066,
                "upload_time": "2023-01-04T16:49:48",
                "upload_time_iso_8601": "2023-01-04T16:49:48.131982Z",
                "url": "https://files.pythonhosted.org/packages/7d/bd/cdc0afdc2aabae821ec4de5f63ab7372ca38c988e3d1acf94cac51b5c8b4/intelliprove-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}