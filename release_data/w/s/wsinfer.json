{
    "0.3.0": {
        "info": {
            "author": "Jakub Kaczmarzyk",
            "author_email": "jakub.kaczmarzyk@stonybrookmedicine.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Recognition",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/kaczmarj/patch-classification-pipeline",
            "keywords": "",
            "license": "GNU General Public License v3 (GPLv3)",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsinfer",
            "package_url": "https://pypi.org/project/wsinfer/",
            "platform": null,
            "project_url": "https://pypi.org/project/wsinfer/",
            "project_urls": {
                "Homepage": "https://github.com/kaczmarj/patch-classification-pipeline"
            },
            "release_url": "https://pypi.org/project/wsinfer/0.3.0/",
            "requires_dist": [
                "click (<9,>=8.0)",
                "h5py",
                "large-image[openslide,tiff] (>=1.8.0)",
                "numpy",
                "opencv-python-headless (>=4.0.0)",
                "pandas",
                "pillow",
                "tqdm",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "imagecodecs ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "pytest ; extra == 'dev'",
                "tifffile ; extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Run patch-based classification on pathology whole slide images.",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16206573,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4f5bb988971160a7ba9d3f701926a664",
                    "sha256": "7ba01b8e6b18662de95bff2672993d9f833cb4bd1bf6f1bddf65ae1fa7517ee2"
                },
                "downloads": -1,
                "filename": "wsinfer-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4f5bb988971160a7ba9d3f701926a664",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 66465,
                "upload_time": "2022-12-23T02:58:43",
                "upload_time_iso_8601": "2022-12-23T02:58:43.877478Z",
                "url": "https://files.pythonhosted.org/packages/51/4f/1b96bcd55953238534e2ab27ddcc07070a97f0560157f6d52178b9f3d0a9/wsinfer-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9b8e6401091870b183b634b6309b6dc4",
                    "sha256": "76049f85dec7e4128836c6f1fc6c69a117764feabee5896fcbfcb7e0d7219406"
                },
                "downloads": -1,
                "filename": "wsinfer-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9b8e6401091870b183b634b6309b6dc4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 77545,
                "upload_time": "2022-12-23T02:58:46",
                "upload_time_iso_8601": "2022-12-23T02:58:46.092918Z",
                "url": "https://files.pythonhosted.org/packages/e5/14/57af4b3d6356c7776346c31704225ea23be489c406cc34cd4b92d44061b0/wsinfer-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.1": {
        "info": {
            "author": "Jakub Kaczmarzyk",
            "author_email": "jakub.kaczmarzyk@stonybrookmedicine.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Recognition",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description": "# Patch classification pipelines for computational pathology\n\nOriginal H&E                        |  Heatmap of Tumor Probability\n:----------------------------------:|:-----------------------------------:\n![](sample-images/brca-tissue.png)  | ![](sample-images/brca-heatmap.png)\n\n\ud83d\udd25 \ud83d\ude80 Blazingly fast pipeline to run patch-based classification models on whole slide images.\n\n![Continuous Integration](https://github.com/kaczmarj/patch-classification-pipeline/actions/workflows/ci.yml/badge.svg)\n\n# Table of contents\n\n- [Available models](#available-models)\n- [Installation](#installation)\n  * [Pip](#pip)\n  * [Containers](#containers)\n    + [Containers for different classification tasks](#containers-for-different-classification-tasks)\n  * [Developers](#developers)\n- [Examples](#examples)\n  * [Setup directories and data](#setup-directories-and-data)\n  * [On \"bare metal\" (not inside a container)](#on-bare-metal-not-inside-a-container)\n  * [Run in an Apptainer container (formerly Singularity)](#run-in-an-apptainer-container-formerly-singularity)\n  * [Run in a Docker container](#run-in-a-docker-container)\n  * [Output](#output)\n  * [Convert to GeoJSON (for QuPath and other viewers)](#convert-to-geojson-for-qupath-and-other-viewers)\n  * [Convert to Stony Brook QuIP format](#convert-to-stony-brook-quip-format)\n\n# Available models\n\n| Classification task                     | Output classes                                           | Model           | Weights name | Reference                                                    |\n|-----------------------------------------|----------------------------------------------------------|-----------------|--------------|--------------------------------------------------------------|\n| Breast adenocarcinoma detection         | no-tumor, tumor                                          | inceptionv4     | TCGA-BRCA-v1 | [ref](https://doi.org/10.1016%2Fj.ajpath.2020.03.012)        |\n| Breast adenocarcinoma detection         | no-tumor, tumor                                          | resnet34        | TCGA-BRCA-v1 | [ref](https://doi.org/10.1016%2Fj.ajpath.2020.03.012)        |\n| Breast adenocarcinoma detection         | no-tumor, tumor                                          | vgg16_modified  | TCGA-BRCA-v1 | [ref](https://doi.org/10.1016%2Fj.ajpath.2020.03.012)        |\n| Lung adenocarcinoma detection           | lepidic, benign, acinar, micropapillary, mucinous, solid | resnet34        | TCGA-LUAD-v1 | [ref](https://github.com/SBU-BMI/quip_lung_cancer_detection) |\n| Pancreatic adenocarcinoma detection     | tumor-positive                                           | resnet34_preact | TCGA-PAAD-v1 | [ref](https://doi.org/10.1007/978-3-030-32239-7_60)          |\n| Prostate adenocarcinoma detection       | grade3, grade4+5, benign                                 | resnet34        | TCGA-PRAD-v1 | [ref](https://github.com/SBU-BMI/quip_prad_cancer_detection) |\n| Tumor-infiltrating lymphocyte detection | til-negative, til-positive                                             | inceptionv4     | TCGA-TILs-v1 | [ref](https://doi.org/10.3389/fonc.2021.806603)              |\n\n# Installation\n\n## Pip\n\nPip install this package from GitHub. First install `torch` and `torchvision`\n(please see [the PyTorch documentation](https://pytorch.org/get-started/locally/)).\nWe do not install these dependencies automatically because their installation can vary based\non a user's system. Then use the command below to install this package.\n\n```\npython -m pip install --find-links https://girder.github.io/large_image_wheels wsinfer\n```\n\nTo use the _bleed edge_, use\n\n```\npython -m pip install \\\n    --find-links https://girder.github.io/large_image_wheels \\\n    git+https://github.com/kaczmarj/patch-classification-pipeline.git\n```\n\n## Containers\n\nUse the Docker / Singularity / Apptainer image, which includes all of the dependencies and scripts.\nSee [DockerHub](https://hub.docker.com/r/kaczmarj/patch-classification-pipeline/tags) for\nthe available tags.\n\n- Apptainer / Singularity\n\n    Replace apptainer with singularity if you do not have apptainer\n\n    ```\n    apptainer pull docker://kaczmarj/patch-classification-pipeline\n    ```\n\n- Docker\n\n    ```\n    docker pull kaczmarj/patch-classification-pipeline\n    ```\n\n### Containers for different classification tasks\n\nWe distribute containers that include weights for different tasks, and these containers\nhave a simplified command-line interface of `command SLIDE_DIR OUTPUT_DIR`.\nSee [DockerHub](https://hub.docker.com/r/kaczmarj/patch-classification-pipeline/tags) for\nthe available tags. The Dockerfiles are in [`dockerfiles/`](/dockerfiles/) Here is an example:\n\n```\napptainer pull docker://kaczmarj/patch-classification-pipeline:v0.2.0-paad-resnet34\nCUDA_VISIBLE_DEVICES=0 apptainer run --nv --bind $(pwd) patch-classification-pipeline_v0.2.0-paad-resnet34.sif \\\n    --wsi-dir slides/ --results-dir results/\n```\n\n## Developers\n\nClone this GitHub repository and install the package (in editable mode with the `dev` extras).\n\n```\ngit clone https://github.com/kaczmarj/patch-classification-pipeline.git\ncd patch-classification-pipeline\npython -m pip install --editable .[dev] --find-links https://girder.github.io/large_image_wheels\n```\n\n# Examples\n\nHere we demonstrate running this pipeline on a sample image. Before going through this,\nplease install the package (see [Installation](#installation)).\n\n## Setup directories and data\n\nWe make a new directory to store this example, including data and results. Enter the\nfollowing commands into a terminal. This will download a sample whole slide image\n(170 MB). For this example, we only use one whole slide image, but you can apply this\npipeline to an arbitrary number of whole slide images &mdash; simply put them all in the\nsame directory.\n\n```\nmkdir -p example-wsi-inference\ncd example-wsi-inference\nmkdir -p sample-images\ncd sample-images\nwget -nc https://openslide.cs.cmu.edu/download/openslide-testdata/Aperio/CMU-1.svs\ncd ..\n```\n\n## List available models and weights\n\nWe use \"model\" as in architecture (like \"resnet50\"), and \"weights\" are the pretrained\nparameters that are loaded into the model for a particular task (like \"TCGA-BRCA-v1\"\nfor breast cancer tumor detection). Use the following command to list all available\nmodels and weights.\n\n```\nwsinfer list\n```\n\n\n## On \"bare metal\" (not inside a container)\n\nRun the pipeline (without a container). This will apply the pipeline to all of the\nimages in `sample-images/` (only 1 in this example) and will write results to\n`results/`. We set `CUDA_VISIBLE_DEVICES=0` to use the first GPU listed in\n`nvidia-smi`. If you do not have a GPU, model inference can take about 20 minutes.\n\n```\nCUDA_VISIBLE_DEVICES=0 wsinfer run \\\n    --wsi-dir sample-images/ \\\n    --results-dir results/ \\\n    --model resnet34 \\\n    --weights TCGA-BRCA-v1 \\\n    --num-workers 8\n```\n\n## Run in an Apptainer container (formerly Singularity)\n\nI use the commands `apptainer` here, but if you don't have `apptainer`, you can\nreplace that with `singularity`. The command line interfaces are the same (as of August 26, 2022).\n\n```\napptainer pull docker://kaczmarj/patch-classification-pipeline\n```\n\nRun the pipeline in Apptainer.\n\n```\nCUDA_VISIBLE_DEVICES=0 apptainer run \\\n    --nv \\\n    --bind $(pwd) \\\n    --pwd $(pwd) \\\n    patch-classification-pipeline_latest.sif run \\\n        --wsi-dir sample-images/ \\\n        --results-dir results/ \\\n        --model resnet34 \\\n        --weights TCGA-BRCA-v1 \\\n        --num-workers 8\n```\n\n## Run in a Docker container\n\nFirst, pull the Docker image.\n\n```\ndocker pull kaczmarj/patch-classification-pipeline\n```\n\nThis requires Docker `>=19.03` and the program `nvidia-container-runtime-hook`. Please see the\n[Docker documentation](https://docs.docker.com/config/containers/resource_constraints/#gpu)\nfor more information. If you do not have a GPU installed, you can use CPU by removing\n`--gpus all` from the command below.\n\nWe use `--user $(id -u):$(id -g)` to run the container as a non-root user (as ourself).\nThis way, the output files are owned by us. Without specifying this option, the output\nfiles would be owned by the root user.\n\nWhen mounting data, keep in mind that the workdir in the Docker container is `/work`\n(one can override this with `--workdir`). Relative paths must be relative to the workdir.\n\nNote: using `--num_workers > 0` will require a `--shm-size > 256mb`. If the shm size is\ntoo low, a \"bus error\" will be thrown.\n\n```\ndocker run --rm -it \\\n    --shm-size 512m \\\n    --gpus all \\\n    --env CUDA_VISIBLE_DEVICES=0 \\\n    --user $(id -u):$(id -g) \\\n    --mount type=bind,source=$(pwd),target=/work/ \\\n    kaczmarj/patch-classification-pipeline run \\\n        --wsi-dir sample-images/ \\\n        --results-dir results/ \\\n        --model resnet34 \\\n        --weights TCGA-BRCA-v1 \\\n        --num-workers 2\n```\n\n## Output\n\nThis will create the following directory structure\n\n```\nresults/\n\u251c\u2500\u2500 masks\n\u251c\u2500\u2500 model-outputs\n\u251c\u2500\u2500 patches\n\u2514\u2500\u2500 stitches\n```\n\n- masks contains PNGs of tissue masks\n- model-outputs contains CSVs of model outputs\n- patches contains HDF5 files of patch coordinates\n- stitches contains PNGs with patches stitched together\n\nThe output also contains a file `results/run_metadata.json` containing metadata about the run.\n\n## Convert to GeoJSON (for QuPath and other viewers)\n\nGeoJSON is a standardized format to represent geometry. The results of model inference\nare a type of geometric data structure. Popular whole slide image viewers like QuPath\nare able to load labels in GeoJSON format.\n\n```bash\nwsirun togeojson results/ geojson-results\n```\n\n## Convert to Stony Brook QuIP format\n\nThe Stony Brook QuIP format uses a combination of JSON and plain text files. Provide\na unique `--execution-id` that identifies this run. An example could be `tcga-brca-resnet34-tumor`.\nAlso provide a `--study-id`, which could be `TCGA-BRCA`. The option `--make-color-text` will\ncreate the `color-*` files that contain color information for each patch in the input slides.\nThis option is disabled by default because it adds significant processing time.\n\n```bash\nwsirun tosbu \\\n    --wsi-dir slides/ \\\n    --execution-id UNIQUE_ID_HERE \\\n    --study-id TCGA-BRCA \\\n    --make-color-text \\\n    --num-processes 16 \\\n    results/ \\\n    results/model-outputs-sbubmi/\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/kaczmarj/patch-classification-pipeline",
            "keywords": "",
            "license": "GNU General Public License v3 (GPLv3)",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsinfer",
            "package_url": "https://pypi.org/project/wsinfer/",
            "platform": null,
            "project_url": "https://pypi.org/project/wsinfer/",
            "project_urls": {
                "Homepage": "https://github.com/kaczmarj/patch-classification-pipeline"
            },
            "release_url": "https://pypi.org/project/wsinfer/0.3.1/",
            "requires_dist": [
                "click (<9,>=8.0)",
                "h5py",
                "large-image[openslide,tiff] (>=1.8.0)",
                "numpy",
                "opencv-python-headless (>=4.0.0)",
                "pandas",
                "pillow",
                "pyyaml",
                "timm",
                "tqdm",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "imagecodecs ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "pytest ; extra == 'dev'",
                "tifffile ; extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Run patch-based classification on pathology whole slide images.",
            "version": "0.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16206573,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "44b5923bc9ce34a76fe97d629af5412a",
                    "sha256": "24517c2f3964c8f0a81653d00c8a57a816e05c7ac81fcb221c12562e8dc01408"
                },
                "downloads": -1,
                "filename": "wsinfer-0.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "44b5923bc9ce34a76fe97d629af5412a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 71940,
                "upload_time": "2022-12-24T20:23:06",
                "upload_time_iso_8601": "2022-12-24T20:23:06.939784Z",
                "url": "https://files.pythonhosted.org/packages/0b/2f/ab5908de41cec988a492d95ef913cdf50d656229e7c90e85c55104fe5098/wsinfer-0.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c0367e861c15943d3787ad28a23b6b1c",
                    "sha256": "a6d24db618e5bc8687e58e9e01fa3f5ec7e66161ea56c3a843374e1cc859641b"
                },
                "downloads": -1,
                "filename": "wsinfer-0.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c0367e861c15943d3787ad28a23b6b1c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 78964,
                "upload_time": "2022-12-24T20:23:09",
                "upload_time_iso_8601": "2022-12-24T20:23:09.198764Z",
                "url": "https://files.pythonhosted.org/packages/a5/c3/da6b27a7566d430b9ca1a9124606b6d220648239fbc5b217940fd89cf3a6/wsinfer-0.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}