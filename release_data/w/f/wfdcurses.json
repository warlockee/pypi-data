{
    "22.11.13": {
        "info": {
            "author": "",
            "author_email": "Michael Bridak <michael.bridak@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console :: Curses",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Natural Language :: English",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3",
                "Topic :: Communications :: Ham Radio"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wfdcurses",
            "package_url": "https://pypi.org/project/wfdcurses/",
            "platform": null,
            "project_url": "https://pypi.org/project/wfdcurses/",
            "project_urls": {
                "Bug Tracker": "https://github.com/mbridak/wfd_py_logger/issues",
                "Homepage": "https://github.com/mbridak/wfd_py_logger"
            },
            "release_url": "https://pypi.org/project/wfdcurses/22.11.13/",
            "requires_dist": [
                "requests",
                "bs4",
                "lxml"
            ],
            "requires_python": ">=3.9",
            "summary": "Winter Field Day logger",
            "version": "22.11.13",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16167518,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2f0245dbd2590f8438c40faca42921c5",
                    "sha256": "338e2d5699b946843f1281c9a2903211d1cf736d71fd40b891b5904825917a9c"
                },
                "downloads": -1,
                "filename": "wfdcurses-22.11.13-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2f0245dbd2590f8438c40faca42921c5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 138985,
                "upload_time": "2022-12-16T13:59:21",
                "upload_time_iso_8601": "2022-12-16T13:59:21.230332Z",
                "url": "https://files.pythonhosted.org/packages/51/d5/d2cb5f4ecf8c796e11cb6b00f77e2faffe8513ec8ded1e8afa1aaeb25754/wfdcurses-22.11.13-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5b531347c5d817d21c5ca85bc6699c89",
                    "sha256": "fe136aaa33645ea335324956ab4d86d0caae26efe6da427fc364f13bf63a0118"
                },
                "downloads": -1,
                "filename": "wfdcurses-22.11.13.tar.gz",
                "has_sig": false,
                "md5_digest": "5b531347c5d817d21c5ca85bc6699c89",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 140998,
                "upload_time": "2022-12-16T13:59:23",
                "upload_time_iso_8601": "2022-12-16T13:59:23.070366Z",
                "url": "https://files.pythonhosted.org/packages/62/6e/b73fffb2be336c1adfe083dd4bd5d1d0bda6cefd7b5d33a07c7f4e6f8038/wfdcurses-22.11.13.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "22.12.17": {
        "info": {
            "author": "",
            "author_email": "Michael Bridak <michael.bridak@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console :: Curses",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Natural Language :: English",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3",
                "Topic :: Communications :: Ham Radio"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wfdcurses",
            "package_url": "https://pypi.org/project/wfdcurses/",
            "platform": null,
            "project_url": "https://pypi.org/project/wfdcurses/",
            "project_urls": {
                "Bug Tracker": "https://github.com/mbridak/wfd_py_logger/issues",
                "Homepage": "https://github.com/mbridak/wfd_py_logger"
            },
            "release_url": "https://pypi.org/project/wfdcurses/22.12.17/",
            "requires_dist": [
                "requests",
                "bs4",
                "lxml"
            ],
            "requires_python": ">=3.9",
            "summary": "Winter Field Day logger",
            "version": "22.12.17",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16167518,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0482c4db0eafd13a07ed097da5c1efa6",
                    "sha256": "fdc961aa392e225eb412e2013d723dff0540cbf141892c3e53d8809af7a14bf1"
                },
                "downloads": -1,
                "filename": "wfdcurses-22.12.17-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0482c4db0eafd13a07ed097da5c1efa6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 139090,
                "upload_time": "2022-12-17T20:43:59",
                "upload_time_iso_8601": "2022-12-17T20:43:59.341893Z",
                "url": "https://files.pythonhosted.org/packages/8d/8f/401acdebadc43b1a71c58381c7cbca710ed0505c1de1d904a769a7445ecf/wfdcurses-22.12.17-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f31f8e03831ce7e59e405c9e715f3d26",
                    "sha256": "a8cc4e5ce3ebcd0fa2cc0d0262b726905b627cdf815573c6a3deb19961d0ab1b"
                },
                "downloads": -1,
                "filename": "wfdcurses-22.12.17.tar.gz",
                "has_sig": false,
                "md5_digest": "f31f8e03831ce7e59e405c9e715f3d26",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 141110,
                "upload_time": "2022-12-17T20:44:00",
                "upload_time_iso_8601": "2022-12-17T20:44:00.925194Z",
                "url": "https://files.pythonhosted.org/packages/90/3b/4a9603877e142fc08b0dbd767723b460abfe09133d79024a94026b264685/wfdcurses-22.12.17.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "22.12.20": {
        "info": {
            "author": "",
            "author_email": "Michael Bridak <michael.bridak@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console :: Curses",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Natural Language :: English",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3",
                "Topic :: Communications :: Ham Radio"
            ],
            "description": "# K6GTE Winter Field Day logger (Curses)\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg?style=for-the-badge)](https://www.gnu.org/licenses/gpl-3.0) [![Python: 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg?logo=python&style=for-the-badge)](https://www.python.org/downloads/)  [![Made With: Ancient Technology](https://img.shields.io/badge/Made%20with-Ancient%20technology-red?style=for-the-badge)][def] ![PyPI - Downloads](https://img.shields.io/pypi/dm/wfdcurses?label=PYPI-Downloads&logo=pypi&style=for-the-badge)\n\nThe logger is written in Python 3, and uses the curses lib. It will work with Linux and Mac, but since the Windows curses lib is lacking it will not work properly in Windows.\n\nThe log is stored in an sqlite3 database file 'wfd.db'. If you need to wipe everything and start clean, just delete this file. The screen size expected by the program is an 80 x 24 character terminal.\n\nI decided to write this after the 2018 Winter Field Day when I couldn't find a simple Linux logger for the event. Just a simple logger with dup checking that could generate a cabrillo log for submission.\n\n![Alt text](pics/logger.png)\n\n## TOC\n\n- [K6GTE Winter Field Day logger (Curses)](#k6gte-winter-field-day-logger-curses)\n  - [TOC](#toc)\n  - [Installation and running](#installation-and-running)\n  - [Running from the source tree](#running-from-the-source-tree)\n  - [Requirements](#requirements)\n  - [Recent Changes](#recent-changes)\n  - [Caveats](#caveats)\n  - [Initial Setup](#initial-setup)\n  - [Commands](#commands)\n  - [Logging](#logging)\n  - [Features](#features)\n    - [Radio Polling via rigctld or flrig](#radio-polling-via-rigctld-or-flrig)\n    - [QRZ, HamQTH, HamDB](#qrz-hamqth-hamdb)\n    - [Cloudlog](#cloudlog)\n    - [Bearing to contact](#bearing-to-contact)\n    - [Editing an existing contact](#editing-an-existing-contact)\n    - [Super Check Partial](#super-check-partial)\n    - [Section partial check](#section-partial-check)\n    - [DUP checking](#dup-checking)\n    - [Autofill](#autofill)\n    - [CW Keying and Macros](#cw-keying-and-macros)\n    - [cwdaemon use](#cwdaemon-use)\n  - [TODO](#todo)\n\n## Installation and running\n\nThe project is now on pypi. So now to install and run the package, you would:\n\n```bash\n#install it with\npip install wfdcurses\n\n#run it with\nwfdcurses\n```\n\n## Running from the source tree\n\nIf you check out the code from github, you would call Python against the directory.\n\n```bash\npython wfdcurses\n```\n\n## Requirements\n\nIf running from source, you can install the needed Python libraries.\nIt requires Python3, BeautifulSoup (bs4), lxml and requests.\n\nIf you're using pip for dependencies you can:\n\n```bash\npip install -r requirements.txt\n```\n\nIf you use Debian/Ubuntu you can:\n\n```bash\nsudo apt install python3-requests python3-bs4 python3-lxml\n```\n\n## Recent Changes\n\n- The RAC sections have been updated for 2023\n- You can now install via `pip install wfdcurses`\n- Added CW macros\n- Support for cwdaemon and PyWinkeyer\n- Cleaned up directory structure.\n- Updated for 2023 WFD rules.\n\n## Caveats\n\nThis is a simple logger meant for a single op, it's not usable for clubs. There's no networking between logging machines etc.\n\n## Initial Setup\n\nAfter launching the program you may want to access the new Edit Settings screen by using the command listed in the next section. Here you can setup your call/class/section, CAT, callsign lookup, Cloudlog intigration, CW keyer.\n\n![Settings Screen](pics/settings.png)\n\nNavigate the screen by pressing either `TAB` or `Shift-TAB`. Settings with brackets `[_]` are boolean. `[_]` means disabled and `[X]` is enabled. They can either be toggled with the `SPACE` key, or pressing either one of these `XxYy1` to enable, or one of these `Nn0` to disable it.\n\nAfter you make your changes, either press the `Enter` key to save your changes, or the `Esc` key to abort any changes and exit the screen.\n\n## Commands\n\nCommands start with a period character in the callsign field and are immediately followed by any information needed by the command.\n\n```text\n.H displays a short list of commands.\n.Q Quit the program.\n.S Access the settings screen\n.P# Sets the power level, .P5 will set the power to 5 watts.\n.MCW .MPH .MDI Sets the mode. CW Morse, PH Phone, DI Digital.\n.B# sets the band, .B40 for 40 meters.\n.D# Deletes log entry. .D26 will delete the log line starting with 026.\n.E# Edits log entry. .E26 will edit the log line starting with 026.\n.L Generate Cabrillo log file for submission.\n\n[esc] abort input, clear all fields.\n```\n\nAfter the command is entered press the ENTER key to execute it.\n\n## Logging\n\nOkay you've made a contact. Enter the call in the call field. As you type it in, it will do a super check partial (see below). Press TAB or SPACE to advance to the next field. Once the call is complete it will do a DUP check (see below). It will try and Autofill the next fields (see below). When entering the section, it will do a section partial check (see below). Press the ENTER key to submit the contact to the log. If it's a busted call or a dup, press the ESC key to clear all inputs and start again.\n\n## Features\n\n### Radio Polling via rigctld or flrig\n\nYou can enable/disable the use of rigctld or flrig in the settings screen. The flrig default port is 12345, and the default rigctld port is 4532.\n\nThe radio will be polled for band/mode updates automatically. There is an indicator at the bottom of the logging window to indicate polling status. Dim if no connection or timeout, and highlighted if all okay.\n\n![Alt text](pics/rigctld.png)\n\n### QRZ, HamQTH, HamDB\n\nYou can enable callsign lookups by enabling them in the settings screen. If you choose either QRZ or HamQTH place you credentials for that service in the username and password fields provided.\n\n### Cloudlog\n\nYou can enable automatic logging to Cloudlog in the settings screen. Here you can enter your API key and URL to the service, along with a station ID if needed.\n\n### Bearing to contact\n\nOnce you put in your own call and choose a lookup provider, the program looks up your gridsquare. I did this because I didn't want to change the settings screen... I'm not kidding. After this, and after it looks up the grid for the other person, it'll show you the bearing and distance to the contact.  \n\n![screen clip of bearing](pics/bearing.png)\n\n### Editing an existing contact\n\nUse the Up/Down arrow keys or PageUp/PageDown to scroll the contact into view. Your mouse scroll wheel may work as well. Double left click on the contact to edit, or use the '.E' command. Use the TAB or Up/Down arrow keys to move between fields. Backspace to erase and retype what you need.\nOnce done press the Enter key to save, or the Escape key to exit.\n\n![Alt text](pics/editcontact.png)\n\n### Super Check Partial\n\nIf you type more than two characters in the callsign field the program will filter the input through a \"Super Check Partial\" routine and show you possible matches to known contesting call signs. Is this useful? Doubt it.\n\n![Alt text](pics/scp.png)\n\n### Section partial check\n\nAs you type the section abbreviation you are presented with a list of all possible sections that start with what you have typed.\n\n![Alt text](pics/sectioncheckpartial.png)\n\n### DUP checking\n\nOnce you type a complete callsign and press TAB or SPACE to advance to the next field. The callsign is checked against previous callsigns in your log. It will list any prior contact made showing the band and mode of the contact. If the band and mode are the same as the one you are currently using, the listing will be highlighted, the screen will flash, a bell will sound to alert you that this is a DUP. At this point you and the other OP can argue back and forth about who's wrong. In the end you'll put your big boy pants on and make a decision if you'll enter the call or not.\n\n![Alt text](pics/dupe_check.png)\n\n### Autofill\n\nIf you have worked this person before on another band/mode the program will load the class and section used previously for this call so you will not have to enter this info again.\n\n### CW Keying and Macros\n\nYou can use either cwdaemon or PyWinkeyer as a keying interface. After you run the program and choose your keyer interface you will find a file called cwmacros.txt in the base directory that you launched the logger from. The file has 12 lines, corresponding to the 12 function keys on most keyboards. The format of the file is simple:\n\nF1|CQ|CQ WFD {MYCALL} {MYCALL} WFD\n\nThree fields separated by a `|` character. The first field is the function key to map. The second is the name of the macro being sent. Which in this case does not make a whole lot of sense, because you can't see the name... Just go with it. The last field is the macro to send.\n\nThere are 4 substitution macros provided: {MYCALL} {HISCALL} {MYCLASS} {MYSECT}\nThey send pretty much excatly what you think it should send.\n\nSo if your're running, you might want a macro like:\n\nF2|exchange|{HISCALL} {MYCLASS} {MYSECT}\n\nWho knows... Go wild. The world is your very limited, Oddly specific oyster.\n\n### cwdaemon use\n\nIf you use cwdaemon for your keyer, you can use the plus and minus on the keyboard to increase/decrease the sending speed by 1 wpm each time you press it. Pressing Escape aborts the sending.\n\n## TODO\n\n- Enter a contact at a specific time.\n\nLet me know if you think of something else.\n\n[def]: https://en.wikipedia.org/wiki/Curses_%28programming_library%29\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wfdcurses",
            "package_url": "https://pypi.org/project/wfdcurses/",
            "platform": null,
            "project_url": "https://pypi.org/project/wfdcurses/",
            "project_urls": {
                "Bug Tracker": "https://github.com/mbridak/wfd_py_logger/issues",
                "Homepage": "https://github.com/mbridak/wfd_py_logger"
            },
            "release_url": "https://pypi.org/project/wfdcurses/22.12.20/",
            "requires_dist": [
                "bs4",
                "lxml",
                "requests"
            ],
            "requires_python": ">=3.9",
            "summary": "Winter Field Day logger",
            "version": "22.12.20",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16167518,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b76cb81279ee860b1c6f7a1789b4eae6",
                    "sha256": "e987cf5e2e439f7a01b1c89e0c620bab7813dd4fa7244f0948050c22229e9b19"
                },
                "downloads": -1,
                "filename": "wfdcurses-22.12.20-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b76cb81279ee860b1c6f7a1789b4eae6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 139532,
                "upload_time": "2022-12-21T00:41:25",
                "upload_time_iso_8601": "2022-12-21T00:41:25.855606Z",
                "url": "https://files.pythonhosted.org/packages/a0/4f/c251fe70559492a46d3d5d78905d732efcb3c5667bc5ff9a0c725036c035/wfdcurses-22.12.20-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a99518fbfb64922c6fe069ef7128b772",
                    "sha256": "479d9b8e64295cb5e99b9f240e3216584724bafc4f455dfe61f67780c3df631f"
                },
                "downloads": -1,
                "filename": "wfdcurses-22.12.20.tar.gz",
                "has_sig": false,
                "md5_digest": "a99518fbfb64922c6fe069ef7128b772",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 141564,
                "upload_time": "2022-12-21T00:41:27",
                "upload_time_iso_8601": "2022-12-21T00:41:27.585321Z",
                "url": "https://files.pythonhosted.org/packages/fc/c0/d720c39f252dd82432bf1848e4ba380b2527cbf56c8d08f9fdf4abdd1653/wfdcurses-22.12.20.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}