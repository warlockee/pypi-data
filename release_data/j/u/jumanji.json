{
    "0.1.0": {
        "info": {
            "author": "InstaDeep",
            "author_email": "hello@instadeep.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/instadeepai/jumanji/",
            "keywords": "reinforcement-learning python jax",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanji",
            "package_url": "https://pypi.org/project/jumanji/",
            "platform": null,
            "project_url": "https://pypi.org/project/jumanji/",
            "project_urls": {
                "Homepage": "https://github.com/instadeepai/jumanji/"
            },
            "release_url": "https://pypi.org/project/jumanji/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Industry-Driven Hardware-Accelerated RL Environments",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "b85da1356947b6671a215d982011896fd654d87fc2e12b5d85eaec3b5abdc86e",
                    "md5": "5d6990bc6e86e521b8ed4a16ff92f731",
                    "sha256": "04cce35f56bc14a33d18e2ca3db6c5528364eacf3b4d38fedd375d90326000b3"
                },
                "downloads": -1,
                "filename": "jumanji-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "5d6990bc6e86e521b8ed4a16ff92f731",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 72378,
                "upload_time": "2022-08-31T14:33:31",
                "upload_time_iso_8601": "2022-08-31T14:33:31.119665Z",
                "url": "https://files.pythonhosted.org/packages/b8/5d/a1356947b6671a215d982011896fd654d87fc2e12b5d85eaec3b5abdc86e/jumanji-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "InstaDeep",
            "author_email": "hello@instadeep.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/instadeepai/jumanji/",
            "keywords": "reinforcement-learning python jax",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanji",
            "package_url": "https://pypi.org/project/jumanji/",
            "platform": null,
            "project_url": "https://pypi.org/project/jumanji/",
            "project_urls": {
                "Homepage": "https://github.com/instadeepai/jumanji/"
            },
            "release_url": "https://pypi.org/project/jumanji/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Industry-Driven Hardware-Accelerated RL Environments",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "a501c3830a8702d0ff79b4c108ded211d6f7b575abf06aab5785a68269453270",
                    "md5": "815200112ef0bc26b5adba7ed0b08846",
                    "sha256": "567fbc1509e62c65b625edb8f211a4e442b2a89d813bed0ce32e78f52ae29501"
                },
                "downloads": -1,
                "filename": "jumanji-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "815200112ef0bc26b5adba7ed0b08846",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 72369,
                "upload_time": "2022-08-31T17:21:38",
                "upload_time_iso_8601": "2022-08-31T17:21:38.523346Z",
                "url": "https://files.pythonhosted.org/packages/a5/01/c3830a8702d0ff79b4c108ded211d6f7b575abf06aab5785a68269453270/jumanji-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "InstaDeep",
            "author_email": "hello@instadeep.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/instadeepai/jumanji/",
            "keywords": "reinforcement-learning python jax",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanji",
            "package_url": "https://pypi.org/project/jumanji/",
            "platform": null,
            "project_url": "https://pypi.org/project/jumanji/",
            "project_urls": {
                "Homepage": "https://github.com/instadeepai/jumanji/"
            },
            "release_url": "https://pypi.org/project/jumanji/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Industry-Driven Hardware-Accelerated RL Environments",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "1f37b1537b89b923111ee6e051199140c28dae53e4abd97ed270155b5c6f69e4",
                    "md5": "b18f8b81de55e28374f3f56f7da27d61",
                    "sha256": "6d0dfdc896c8df5b3ab00f383d9c5c06fa2b155a9faf92d5989b6982c5345de7"
                },
                "downloads": -1,
                "filename": "jumanji-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "b18f8b81de55e28374f3f56f7da27d61",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 76252,
                "upload_time": "2022-11-16T11:35:26",
                "upload_time_iso_8601": "2022-11-16T11:35:26.127860Z",
                "url": "https://files.pythonhosted.org/packages/1f/37/b1537b89b923111ee6e051199140c28dae53e4abd97ed270155b5c6f69e4/jumanji-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "InstaDeep",
            "author_email": "hello@instadeep.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/instadeepai/jumanji/",
            "keywords": "reinforcement-learning python jax",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanji",
            "package_url": "https://pypi.org/project/jumanji/",
            "platform": null,
            "project_url": "https://pypi.org/project/jumanji/",
            "project_urls": {
                "Homepage": "https://github.com/instadeepai/jumanji/"
            },
            "release_url": "https://pypi.org/project/jumanji/0.1.3/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Industry-Driven Hardware-Accelerated RL Environments",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "76be7cd16a158db17c62cb08e7230ceda1f40d2eb5eb4a6ad5b185dfb09ef47e",
                    "md5": "fde04d6b36e0e1ee0d0b7fd43148b45c",
                    "sha256": "53be805f79682b23161fc1cd31f5ac8b2aac301f8e0d44b38da251ced06ef548"
                },
                "downloads": -1,
                "filename": "jumanji-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "fde04d6b36e0e1ee0d0b7fd43148b45c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 76249,
                "upload_time": "2022-11-16T13:01:23",
                "upload_time_iso_8601": "2022-11-16T13:01:23.704555Z",
                "url": "https://files.pythonhosted.org/packages/76/be/7cd16a158db17c62cb08e7230ceda1f40d2eb5eb4a6ad5b185dfb09ef47e/jumanji-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "InstaDeep",
            "author_email": "hello@instadeep.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "<p align=\"center\">\n    <a href=\"docs/img/jumanji_logo.png\">\n        <img src=\"docs/img/jumanji_logo.png\" alt=\"Jumanji logo\" width=\"50%\"/>\n    </a>\n</p>\n\n[![Python Versions](https://img.shields.io/pypi/pyversions/jumanji.svg?style=flat-square)](https://www.python.org/doc/versions/)\n[![PyPI Version](https://badge.fury.io/py/jumanji.svg)](https://badge.fury.io/py/jumanji)\n[![Tests](https://github.com/instadeepai/jumanji/actions/workflows/tests_linters.yml/badge.svg)](https://github.com/instadeepai/jumanji/actions/workflows/tests_linters.yml)\n[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![MyPy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-orange.svg)](https://opensource.org/licenses/Apache-2.0)\n\n---\n[**Installation**](#installation-)\n| [**Quickstart**](#quickstart-)\n| [**Examples**](#examples-%EF%B8%8F)\n| [**Environments**](#environments-)\n| [**Citation**](#citing-jumanji-%EF%B8%8F)\n| [**See Also**](#see-also)\n| [**Reference Docs**](https://instadeepai.github.io/jumanji)\n\n\n<p float=\"left\" align=\"center\">\n  <img src=\"docs/img/snake.gif\" alt=\"Snake\" width=\"30%\" />\n  <img src=\"docs/img/binpack.gif\" alt=\"BinPack\" width=\"30%\" />\n  <img src=\"docs/img/routing.gif\" alt=\"Routing\" width=\"30%\" />\n</p>\n\n\n## Welcome to the Jungle! \ud83c\udf34\n\nJumanji is a suite of Reinforcement Learning (RL) environments written in JAX providing clean, hardware-accelerated\nenvironments for industry-driven research.\n\nJumanji is helping pioneer a new wave of hardware-accelerated research and development in the\nfield of RL. Jumanji's high-speed environments enable faster iteration and larger-scale experimentation\nwhile simultaneously reducing complexity. Originating in the Research Team at [InstaDeep](https://www.instadeep.com/),\nJumanji is now developed jointly with the open-source community.\nTo join us in these efforts, reach out, raise issues and read our [contribution guidelines](#contributing-) (or just star \ud83c\udf1f to stay up to date with the latest developments)!\n\n### Goals \ud83d\ude80\n\n1. Provide a simple, well-tested API for JAX-based environments.\n2. Make research in RL more accessible.\n3. Facilitate the research on RL for problems in the industry and\nhelp close the gap between research and industrial applications.\n\n### Overview \ud83e\udd9c\n\n- \ud83e\udd51 **Environment API**: core abstractions for JAX-based environments and their variations, e.g. multi-agent or turn-by-turn.\n- \ud83d\udd79\ufe0f **Environment Suite**: a list of RL environments ranging from simple games to complex NP-hard problems.\n- \ud83c\udf6c **Wrappers**: easily connect to your favourite RL frameworks and libraries such as [Acme](https://github.com/deepmind/acme), [Stable Baselines3](https://github.com/DLR-RM/stable-baselines3), [RLlib](https://docs.ray.io/en/latest/rllib/index.html), [OpenAI Gym](https://github.com/openai/gym), and [DeepMind-Env](https://github.com/deepmind/dm_env).\n- \ud83c\udf93 **Educational Examples and User Guides**: guides to facilitate Jumanji's adoption and highlight the added value of JAX-based environments.\n\n## Installation \ud83c\udfac\n\nYou can install the latest release of Jumanji from PyPI:\n```bash\npip install jumanji\n```\nor you can install the latest development version directly from GitHub:\n```bash\npip install git+https://github.com/instadeepai/jumanji.git\n```\nJumanji has been tested on Python 3.7, 3.8 and 3.9.\nNote that because the installation of JAX differs depending on your hardware accelerator,\nwe advise users to explicitly install the correct JAX version (see the [official installation guide](https://github.com/google/jax#installation)).\n\n**Rendering:** Matplotlib is used for rendering the `BinPack` and `Snake` environments.\nTo visualize the environments you will need a GUI backend.\nFor example, on Linux, you can install Tk via: `apt-get install python3-tk`, or using conda: `conda install tk`.\nCheck out [Matplotlib backends](https://matplotlib.org/stable/users/explain/backends.html) for a list of backends you could use.\n\n## Quickstart \u26a1\n\nPractitioners will find Jumanji's interface familiar\nas it combines the widely adopted [OpenAI Gym](https://github.com/openai/gym)\nand [DeepMind Environment](https://github.com/deepmind/dm_env) interfaces.\nFrom OpenAI Gym, we adopted the idea of a `registry` and the `render` method,\nwhile our `TimeStep` structure is inspired by `dm_env.TimeStep`.\n\n### Basic Usage \ud83e\uddd1\u200d\ud83d\udcbb\n\n```python\nimport jax\nimport jumanji\n\n# Instantiate a Jumanji environment using the registry\nenv = jumanji.make('Snake-6x6-v0')\n\n# Reset your (jit-able) environment\nkey = jax.random.PRNGKey(0)\nstate, timestep = jax.jit(env.reset)(key)\n\n# (Optional) Render the env state\nenv.render(state)\n\n# Interact with the (jit-able) environment\naction = env.action_spec().generate_value()          # Action selection (dummy value here)\nstate, timestep = jax.jit(env.step)(state, action)   # Take a step and observe the next state and time step\n```\nwhere:\n\n- `state` represents the internal state of an environment: it contains all the information required\nto take a step when executing an action. This should **not** be confused with the `observation` contained in the `timestep`,\nwhich is the information perceived by the agent.\n- `timestep` is a dataclass containing `step_type`, `reward`, `discount`, `observation`, and `extras`.\nThis structure is similar to [`dm_env.TimeStep`](https://github.com/deepmind/dm_env/blob/master/docs/index.md)\nexcept for the `extras` field that was added to allow users to retrieve information that is neither\npart of the agent's observation nor part of the environment's internal state.\n\n### Advanced Usage \ud83e\uddd1\u200d\ud83d\udd2c\nBeing written in JAX, Jumanji's environments benefit from many of its features including\nautomatic vectorization/parallelization (`jax.vmap`, `jax.pmap`) and JIT-compilation (`jax.jit`),\nwhich can be composed arbitrarily.\nWe provide an example of this below, where we use `jax.vmap` and `jax.lax.scan` to generate a batch\nof rollouts in the `Snake` environment.\n\n```python\nimport jax\n\nimport jumanji\nfrom jumanji.wrappers import AutoResetWrapper\n\nenv = jumanji.make(\"Snake-6x6-v0\")  # Creates the snake environment.\nenv = AutoResetWrapper(env)         # Automatically reset the environment when an episode terminates.\n\nbatch_size, rollout_length = 7, 5\nnum_actions = env.action_spec().num_values\n\nrandom_key = jax.random.PRNGKey(0)\nkey1, key2 = jax.random.split(random_key)\n\ndef step_fn(state, key):\n  action = jax.random.randint(key=key, minval=0, maxval=num_actions, shape=())\n  new_state, timestep = env.step(state, action)\n  return new_state, timestep\n\ndef run_n_step(state, key, n):\n  random_keys = jax.random.split(key, n)\n  state, rollout = jax.lax.scan(step_fn, state, random_keys)\n  return rollout\n\n# Instantiate a batch of environment states\nkeys = jax.random.split(key1, batch_size)\nstate, timestep = jax.vmap(env.reset)(keys)\n\n# Collect a batch of rollouts\nkeys = jax.random.split(key2, batch_size)\nrollout = jax.vmap(run_n_step, in_axes=(0, 0, None))(state, keys, rollout_length)\n\n# Shape and type of given rollout:\n# TimeStep(step_type=(7, 5), reward=(7, 5), discount=(7, 5), observation=(7, 5, 6, 6, 5), extras=None)\n```\n\n## Examples \ud83d\udd79\ufe0f\n\nFor more in-depth examples of running with Jumanji environments, check out our Colab notebooks:\n\n| Example           | Topic          | Colab |\n|-------------------|----------------|:-----:|\n| Online Q-Learning | RL Training ([Anakin](https://arxiv.org/abs/2104.06272)) | <a href=\"https://colab.research.google.com/github/instadeepai/jumanji/blob/main/examples/anakin_snake.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>    |\n\n\n## Environments \ud83c\udf0d\n\nJumanji implements different types of environments ranging from simple games to NP-hard problems,\nfrom single-agent to multi-agent and turn-by-turn games.\n\n| Environment                                    | Category      | Type         | Source                                                                                               | Description                                                         |\n|------------------------------------------------|---------------|--------------|------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------|\n| \ud83d\udc0d Snake                                       | Game          | Single-agent | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/games/snake)            | [doc](https://instadeepai.github.io/jumanji/environments/snake/)    |\n| 4\ufe0f\u20e3 Connect4                                   | Game          | Turn-by-turn | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/games/connect4)         | [doc](https://instadeepai.github.io/jumanji/environments/connect4/) |\n| \ud83d\udcec TSP (Travelling Salesman Problem)           | Combinatorial | Single-agent | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/combinatorial/tsp)      | [doc](https://instadeepai.github.io/jumanji/environments/tsp/)      |\n| \ud83c\udf92 Knapsack                                    | Combinatorial | Single-agent | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/combinatorial/knapsack) | [doc](https://instadeepai.github.io/jumanji/environments/knapsack/) |\n| \ud83e\udea2 Routing                                     | Combinatorial | Multi-agent  | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/combinatorial/routing)  | [doc](https://instadeepai.github.io/jumanji/environments/routing/)  |\n| \ud83d\udce6 BinPack (3D BinPacking Problem)             | Combinatorial | Single-agent | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/combinatorial/binpack)  | [doc](https://instadeepai.github.io/jumanji/environments/binpack/)  |\n| \ud83d\ude9a CVRP (Capacitated Vehicle Routing Problem)  | Combinatorial | Single-agent | [code](https://github.com/instadeepai/jumanji/tree/main/jumanji/environments/combinatorial/cvrp)     | [doc](https://instadeepai.github.io/jumanji/environments/cvrp/)     |\n\n\n### Registry and Versioning \ud83d\udcd6\n\nSimilarly to OpenAI Gym, Jumanji keeps a strict versioning of its environments for reproducibility reasons.\nWe maintain a registry of standard environments with their configuration.\nFor each environment, a version suffix is appended, e.g. `Snake-6x6-v0`.\nWhen changes are made to environments that might impact learning results,\nthe version number is incremented by one to prevent potential confusion.\nFor a full list of registered versions of each environment, check out [the documentation](https://instadeepai.github.io/jumanji/environments/tsp/).\n\n## Contributing \ud83e\udd1d\nContributions are welcome! See our issue tracker for [good first issues](https://github.com/instadeepai/jumanji/labels/good%20first%20issue).\nPlease read our [contributing guidelines](./CONTRIBUTING.md) for details on\nhow to submit pull requests, our Contributor License Agreement, and community guidelines.\n\n## Citing Jumanji \u270f\ufe0f\nIf you use Jumanji in your work, please cite the library using:\n```\n@software{jumanji2022github,\n  author = {Cl\u00e9ment Bonnet and Donal Byrne and Victor Le and Laurence Midgley\n        and Daniel Luo and Cemlyn Waters and Sasha Abramowitz and Edan Toledo\n        and Cyprien Courtot and Matthew Morris and Daniel Furelos-Blanco\n        and Nathan Grinsztajn and Thomas D. Barrett and Alexandre Laterre},\n  title = {Jumanji: Industry-Driven Hardware-Accelerated RL Environments},\n  url = {https://github.com/instadeepai/jumanji},\n  version = {0.1.4},\n  year = {2022},\n}\n```\n\n## See Also\nOther works have embraced the approach of writing RL environments in JAX.\nIn particular, we suggest users check out the following sister repositories:\n\n- \ud83e\uddbe [Brax](https://github.com/google/brax) is a differentiable physics engine that simulates environments made up of rigid bodies, joints, and actuators.\n- \ud83c\udfcb\ufe0f\u200d [Gymnax](https://github.com/RobertTLange/gymnax) implements classic environments including classic control, bsuite, MinAtar and a collection of meta RL tasks.\n- \ud83c\udf33 [Evojax](https://github.com/google/evojax) provides tools to enable neuroevolution algorithms to work with neural networks running across multiple TPU/GPUs.\n- \ud83e\udd16 [Qdax](https://github.com/adaptive-intelligent-robotics/QDax) is a library to accelerate Quality-Diversity and neuro-evolution algorithms through hardware accelerators and parallelization.\n\n## Acknowledgements \ud83d\ude4f\n\nThe development of this library was supported with Cloud TPUs\nfrom Google's [TPU Research Cloud](https://sites.research.google/trc/about/) (TRC) \ud83c\udf24.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/instadeepai/jumanji/",
            "keywords": "reinforcement-learning python jax",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanji",
            "package_url": "https://pypi.org/project/jumanji/",
            "platform": null,
            "project_url": "https://pypi.org/project/jumanji/",
            "project_urls": {
                "Homepage": "https://github.com/instadeepai/jumanji/"
            },
            "release_url": "https://pypi.org/project/jumanji/0.1.4/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Industry-Driven Hardware-Accelerated RL Environments",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16305085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "75f46bec66d9236de565de344fefc4d9d19ac578ed6c1bc44d339a591eea561e",
                    "md5": "d231fd72b44c673522b576d2225a9b36",
                    "sha256": "dd1771cb5e52f3c446ab067c741b25795232fd3225ea6b6492a3e234bb30c822"
                },
                "downloads": -1,
                "filename": "jumanji-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "d231fd72b44c673522b576d2225a9b36",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 77176,
                "upload_time": "2023-01-04T18:06:23",
                "upload_time_iso_8601": "2023-01-04T18:06:23.725377Z",
                "url": "https://files.pythonhosted.org/packages/75/f4/6bec66d9236de565de344fefc4d9d19ac578ed6c1bc44d339a591eea561e/jumanji-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}