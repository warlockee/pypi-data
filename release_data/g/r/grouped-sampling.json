{
    "1.0.1": {
        "info": {
            "author": "",
            "author_email": "Yoni Kremer <yoni.kremer@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "# Grouped Text Generation\n\nMy high school research project.\n## The research question:\n> Can we use generate n tokens using less than n calls to a causal language model with decoder only transformer architecture?\n> If yes, How? How the text generated in this way different from the text generated using n calls?\n> If no, Why?\n> I show that such an algorithm is possible,\n> and the text generated using this algorithm is different from the text generated using n calls.\n> I will also so significant improvement in the runtime of my algorithm.\n\n# Project OverView:\n\n## The project paper:\nIs written in Hebrew in [documents\\\u05d4\u05e2\u05d1\u05d5\u05d3\u05d4 \u05e2\u05e6\u05de\u05d4.docx](documents\\\u05d4\u05e2\u05d1\u05d5\u05d3\u05d4%20\u05e2\u05e6\u05de\u05d4.docx)\n\n## The code:\n\n### Before running any of the code:\nPlease make sure U have python 3 (3.9 is recommended) installed in your system and Internet connection.\ninstall the requirements using `python -m pip install -r requirements.txt`\n\n### The Algorithm Itself:\nIs implemented in the 'text_generator.py', 'sampling_generator.py' and 'tree_generator.py' files.\nTo use it:\nimport sampling_generator\\tree_generator\ncreate SamplingGenerator\\TreeGenerator object and call the '__call__' method.\n\n### The Web App:\nIs implemented in the web_app folder.\nTo use it:\ninstall the requirements using `python -m pip install -r requirements.txt` and `python -m pip install -r web_app/web_app_requirements.txt`\nrun the app locally using `python open_web_app.py`\n\n### The demos\nAre a simple user interfaces for the algorithm.\nto run the demo on colab:\nenter [This Link](https://colab.research.google.com/github/yonikremer/final_project/blob/master/colab_demo.ipynb) and run all the cells.\nto run it locally:\ninstall the requirements using `python -m pip install -r \\mercury_demo\\mercury_demo_requirements.txt`\nrun the demo using `python open_mercury_demo.py`\n\n### Evaluation:\nAs of today, the evaluation is only checking the [bertscore](https://arxiv.org/abs/1904.09675) on the [news commentary dataset](https://opus.nlpl.eu/News-Commentary.php).\nMore evaluation options will be added in the future.\nIs implemented in the evaluation folder.\nTo evaluate the algorithm:\nmake sure you have an account in [comet machine learning](https://www.comet.com/site/)\ncreate a project called 'grouped-sampling-evaluation'\ncopy your api key to the 'evaluation\\comet_api_key.txt' file\ninstall the requirements using `python -m pip install -r evaluation/evaluation_requirements.txt`\nrun the evaluation using `python evaluation\\evaluate_translation.py`\n\n### Training Causal Language Models:\nThe code for training the NORMAL causal language models is in the 'model' folder.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "GPT,NLP,cuasal-language-model,cuasal-text-generation,gpt,language-model,natural-language-processing,nlp,text-generation",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "grouped-sampling",
            "package_url": "https://pypi.org/project/grouped-sampling/",
            "platform": null,
            "project_url": "https://pypi.org/project/grouped-sampling/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/grouped-sampling/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A faster algorithem for generating texts with cuasal language models",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16301682,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "3a96e7a04e1757bc0bec38925da58c190036e3ff48fa68afe5c9009879165f6a",
                    "md5": "39db1d1b320be22ea3b84d142eeee1b4",
                    "sha256": "c4978bbacd021931de87650a2d09bd7c3046f53a6d53e3df73bd64cb46f3b7ec"
                },
                "downloads": -1,
                "filename": "grouped_sampling-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "39db1d1b320be22ea3b84d142eeee1b4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 18747,
                "upload_time": "2023-01-04T12:09:22",
                "upload_time_iso_8601": "2023-01-04T12:09:22.504907Z",
                "url": "https://files.pythonhosted.org/packages/3a/96/e7a04e1757bc0bec38925da58c190036e3ff48fa68afe5c9009879165f6a/grouped_sampling-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "b68a39d58dc90326f0c823d73cec5c0510168d2ee51703cbed671c569dd32576",
                    "md5": "c3dcdadefbbaaec093e7f827823b7db4",
                    "sha256": "dea5381f3d5adc6dbd5f3a383db9532d3d6242815baaec2fb9cb5b53dcaa6242"
                },
                "downloads": -1,
                "filename": "grouped_sampling-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c3dcdadefbbaaec093e7f827823b7db4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 25949348,
                "upload_time": "2023-01-04T12:09:33",
                "upload_time_iso_8601": "2023-01-04T12:09:33.889390Z",
                "url": "https://files.pythonhosted.org/packages/b6/8a/39d58dc90326f0c823d73cec5c0510168d2ee51703cbed671c569dd32576/grouped_sampling-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}