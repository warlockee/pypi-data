{
    "1.0.0": {
        "info": {
            "author": "ETH Zurich",
            "author_email": "gridtools@cscs.ch",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Environment :: GPU :: NVIDIA CUDA",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: POSIX",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Topic :: Scientific/Engineering :: Atmospheric Science",
                "Topic :: Scientific/Engineering :: Mathematics",
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description": "GT4Py: GridTools for Python\n===========================\n\nPython library for generating high-performance implementations of stencil kernels for weather and climate modeling from a domain-specific language (DSL).\n\n|tox| |format|\n\n.. |tox| image:: https://github.com/GridTools/gt4py/workflows/Tox%20(CPU%20only)/badge.svg?event=schedule\n   :alt:\n.. |format| image:: https://github.com/GridTools/gt4py/workflows/Formatting%20&%20compliance/badge.svg?branch=main\n   :alt:\n\n\u26a1\ufe0f Quick Start\n---------------\n\nGT4Py requires Python 3.8+ and uses the standard Python packaging method, so can be installed using `pip`.\n\nIt is recommended to install the package in a virtual environment. For example:\n\n.. code-block:: bash\n\n    python -m venv venv\n    source venv/bin/activate\n    # For the CUDA backends add the '[cudaXXX]' optional dependency\n    pip install gt4py[cuda11x]\n\n\n\ud83d\udcd6 Description\n--------------\n\nGT4Py is a Python library for expressing computational motifs as found in weather and climate applications. These computations are expressed in a domain specific language (GTScript) which is translated to high-performance implementations for CPUs and GPUs.\n\nThe DSL expresses computations on a 3-dimensional Cartesian grid. The horizontal axes (``I``, ``J``) are always computed in parallel, while the vertical (``K``) can be iterated in sequential, forward or backward, order. Cartesian offsets are expressed relative to a center index.\n\nIn addition, GT4Py provides functions to allocate arrays with memory layout suited for a particular backend.\n\nThe following backends are supported:\n\n- ``numpy``: Pure-Python backend\n- ``gt:cpu_ifirst``: GridTools C++ CPU backend using ``I``-first data ordering\n- ``gt:cpu_kfirst``: GridTools C++ CPU backend using ``K``-first data ordering\n- ``gt:gpu``: GridTools backend for CUDA\n- ``cuda``: CUDA backend minimally using utilities from GridTools\n- ``dace:cpu``: Dace code-generated CPU backend\n- ``dace:gpu``: Dace code-generated GPU backend\n\n\ud83d\ude9c Installation\n---------------\n\nFor testing GT4Py with the ``numpy`` backend, all dependencies are included in the ``setup.cfg`` and are automatically installed. The performance backends also require\n\n1. the `Boost <https://www.boost.org/>`__ library, a dependency of GridTools C++, which needs to be installed by the user.\n\nOptions\n~~~~~~~\n\nIf GridTools or Boost are not found in the compiler's standard include path, or a custom version is desired, then a couple configuration environment variables will allow the compiler to use them:\n\n- ``GT_INCLUDE_PATH``: Path to the GridTools installation.\n- ``BOOST_ROOT``: Path to a boost installation.\n\nOther commonly used environment variables are:\n\n- ``CUDA_ARCH``: Set the compute capability of the NVIDIA GPU if it is not detected automatically by ``cupy``.\n- ``CXX``: Set the C++ compiler.\n- ``GT_CACHE_DIR_NAME``: Name of the compiler's cache directory (defaults to ``.gt_cache``)\n- ``GT_CACHE_ROOT``: Path to the compiler cache (defaults to ``./``)\n\nMore options and details in `config.py <https://github.com/GridTools/gt4py/blob/main/src/gt4py/cartesian/config.py>`__.\n\n\nDocumentation\n~~~~~~~~~~~~~\n\nGT4Py uses Sphinx documentation. To build the documentation install the dependencies in ``requirements-dev.txt``\n\n.. code-block:: bash\n\n   pip install -r ./gt4py/requirements-dev.txt\n\nand then build the docs with\n\n.. code-block:: bash\n\n   cd gt4py/docs\n   make html  # run 'make help' for a list of targets\n\n\nDevelopment\n~~~~~~~~~~~\n\nFor developing GT4Py we recommend to clone the repository and use an *editable* installation of GT4Py:\n\n.. code-block:: bash\n\n   git clone https://github.com/gridtools/gt4py.git\n   pip install -e ./     # pip install -e ./[cudaXX] for GPU support\n   pip install -r requirements-dev.txt\n   pre-commit install-hooks\n\nDependencies for running tests locally and for linting and formatting source are listed in `requirements-dev.txt`.\n\nThere are notebooks in the `examples/ <https://github.com/GridTools/gt4py/tree/main/examples/cartesian>`__ folder that can be run using IPython notebooks on Jupyter.\n\n.. code-block:: bash\n\n   pip install jupyterlab matplotlib\n   jupyter-lab\n\nThere are two options to run the unit and integration tests in ``tests/``:\n\n1. Use tox: ``pip install tox && tox -r -e py39-all-cpu``.\n2. Install the development requirements: ``pip install -r requirements-dev.txt``, then ``pytest`` can execute the tests directly.\n\n\n\u2696\ufe0f License\n----------\n\nGT4Py is licensed under the terms of the `GPLv3 <https://github.com/GridTools/gt4py/blob/main/LICENSE.txt>`__.\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gridtools.github.io/gt4py",
            "keywords": "",
            "license": "GPL-3.0-or-later",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gt4py",
            "package_url": "https://pypi.org/project/gt4py/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/gt4py/",
            "project_urls": {
                "Documentation": "https://gridtools.github.io/gt4py",
                "Homepage": "https://gridtools.github.io/",
                "Repository": "https://github.com/GridTools/gt4py"
            },
            "release_url": "https://pypi.org/project/gt4py/1.0.0/",
            "requires_dist": [
                "attrs (>=21.3)",
                "black (>=22.3)",
                "cached-property (>=1.5)",
                "click (>=7.1)",
                "gridtools-cpp (==2.*,>=2.2.2)",
                "jinja2 (>=2.10)",
                "numpy (<1.24,>=1.15)",
                "scipy (>=1.4)",
                "packaging (>=20.0)",
                "pybind11 (>=2.5)",
                "setuptools (>=60.6)",
                "tabulate (>=0.8)",
                "typing-extensions (>=4.2)",
                "boltons (>=20.0)",
                "cytoolz (>=0.11)",
                "devtools (>=0.6)",
                "deepdiff (>=5.8)",
                "frozendict (>=2.3)",
                "mako (>=1.1)",
                "networkx (>=2.4)",
                "toolz (>=0.11)",
                "typing-inspect (>=0.6.0)",
                "xxhash (<3.1.0,>=1.4.4)",
                "astunparse (>=1.6.3) ; python_version < \"3.9\"",
                "cupy ; extra == 'cuda'",
                "cupy-cuda110 ; extra == 'cuda110'",
                "cupy-cuda111 ; extra == 'cuda111'",
                "cupy-cuda112 ; extra == 'cuda112'",
                "cupy-cuda113 ; extra == 'cuda113'",
                "cupy-cuda114 ; extra == 'cuda114'",
                "cupy-cuda115 ; extra == 'cuda115'",
                "cupy-cuda116 ; extra == 'cuda116'",
                "cupy-cuda117 ; extra == 'cuda117'",
                "cupy-cuda11x ; extra == 'cuda11x'",
                "dace (<0.15,>=0.14.1) ; extra == 'dace'",
                "sympy ; extra == 'dace'",
                "clang-format (>=9.0) ; extra == 'formatting'",
                "hypothesis (>=4.14) ; extra == 'testing'",
                "pytest (~=6.1) ; extra == 'testing'",
                "tox (~=3.14) ; extra == 'testing'"
            ],
            "requires_python": ">=3.8",
            "summary": "Python library for generating high-performance implementations of stencil kernels for weather and climate modeling from a domain-specific language (DSL)",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16175359,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fc6113e492b91f162a7905afeaabe668",
                    "sha256": "cf950ee62b7b601c76423e5abc1cbd22cf11ef19ce50f77ee08c366f1e6aed58"
                },
                "downloads": -1,
                "filename": "gt4py-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fc6113e492b91f162a7905afeaabe668",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 356202,
                "upload_time": "2022-12-21T16:35:28",
                "upload_time_iso_8601": "2022-12-21T16:35:28.158463Z",
                "url": "https://files.pythonhosted.org/packages/f1/09/7cb7a5c975f7ce9eb2b8f94f002cf206ff930cecd92c14f7f68b6a90cfa4/gt4py-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3fac122911b1948ab16f97f7be12b540",
                    "sha256": "8e26e003355410fb7daff064413c6a7e191e9b6446e403f08aa7bf6175d60110"
                },
                "downloads": -1,
                "filename": "gt4py-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "3fac122911b1948ab16f97f7be12b540",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 298120,
                "upload_time": "2022-12-21T16:35:31",
                "upload_time_iso_8601": "2022-12-21T16:35:31.520707Z",
                "url": "https://files.pythonhosted.org/packages/c6/d3/b6a5844413d6b91ed4e4115bfff897b45c61e9ff807280eab987ca00038b/gt4py-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}