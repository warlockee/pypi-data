{
    "0.0.1": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": "",
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1ab32dd5b572bc1bc27d379204ba6290",
                    "sha256": "b09b9b873be1849052809a0c1615c21bd9150a0df6125becdc15669f899fd619"
                },
                "downloads": -1,
                "filename": "caep-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "1ab32dd5b572bc1bc27d379204ba6290",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 4397,
                "upload_time": "2020-03-11T11:43:18",
                "upload_time_iso_8601": "2020-03-11T11:43:18.863906Z",
                "url": "https://files.pythonhosted.org/packages/a7/18/dc31e3d2ddc6c471e036eef53c5cf5578731d361a2886cff5be7faa069de/caep-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": "",
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2adeda95bea06f842f2add400e807baf",
                    "sha256": "47bc8ae6ac382f19010343d4e927737fc731f7b25e7788219b135101023b1870"
                },
                "downloads": -1,
                "filename": "caep-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "2adeda95bea06f842f2add400e807baf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 4445,
                "upload_time": "2020-06-17T06:02:34",
                "upload_time_iso_8601": "2020-06-17T06:02:34.311958Z",
                "url": "https://files.pythonhosted.org/packages/0e/50/82ae5b0aeca83dffe60d71ebc6e35a6739a9b84f648d85aeb9947ba5e906/caep-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": "",
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "844ef2fb15e6151ff3c2aff4c429a93e",
                    "sha256": "6c2aa370345328ff27a607e633790b38bb4da96480a16e3f3d2e65cd69343983"
                },
                "downloads": -1,
                "filename": "caep-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "844ef2fb15e6151ff3c2aff4c429a93e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 4506,
                "upload_time": "2020-07-01T16:43:46",
                "upload_time_iso_8601": "2020-07-01T16:43:46.561742Z",
                "url": "https://files.pythonhosted.org/packages/62/c1/3f7dfc618feb2de0f54df96bc358da1ff57db07a1ba27762004e5621384b/caep-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": "",
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.0.4/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6b0e2d34841367700e0c7538dc1f8a2d",
                    "sha256": "ec4e6dc31f748e59b2c8eae2c287c44ba9553eff97c71965dc384948145f7d4b"
                },
                "downloads": -1,
                "filename": "caep-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "6b0e2d34841367700e0c7538dc1f8a2d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 4529,
                "upload_time": "2020-08-10T08:47:20",
                "upload_time_iso_8601": "2020-08-10T08:47:20.927532Z",
                "url": "https://files.pythonhosted.org/packages/f5/e1/f7e6f89e185576563f8861daac2baaa80922bb03a75ea90f4fea98fd3ba1/caep-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": null,
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.0.5/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "12afe154850e72719c1963b6dab7b874",
                    "sha256": "ea2041cb5a80c1c3cc54a316a0f3019ebe611f4988ad57818c9a665f3f4a3ae7"
                },
                "downloads": -1,
                "filename": "caep-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "12afe154850e72719c1963b6dab7b874",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 5266,
                "upload_time": "2022-12-05T13:00:37",
                "upload_time_iso_8601": "2022-12-05T13:00:37.673482Z",
                "url": "https://files.pythonhosted.org/packages/16/68/3b24c357926a720a9e68e53e0d82a69f8062dce7e34534cd2554e0f6277a/caep-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": null,
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2009ac486e276c27d78dc15793189c1b",
                    "sha256": "fe72be833e74c4fcabc27251e22b9ee8d1962cbcd84ce4bef8bd85440d67840d"
                },
                "downloads": -1,
                "filename": "caep-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "2009ac486e276c27d78dc15793189c1b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 12337,
                "upload_time": "2023-01-02T09:23:41",
                "upload_time_iso_8601": "2023-01-02T09:23:41.004982Z",
                "url": "https://files.pythonhosted.org/packages/1c/e0/56960a2c65bd4381cb1f284ebea0d40e7f8cf4e6cb63c9bafced05d50dec/caep-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "mnemonic AS",
            "author_email": "opensource@mnemonic.no",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: ISC License (ISCL)",
                "Topic :: Utilities"
            ],
            "description": "# CAEP\n\nConfiguration library that supports loading configuration from ini, environment variables\nand arguments into a [pydantic](https://docs.pydantic.dev/) schema.\n\nWith the pydantic schema you will have a fully typed configuration object that is parsed\nat load time.\n\n# Example\n\n```python\n#!/usr/bin/env python3\nfrom typing import List\n\nfrom pydantic import BaseModel, Field\n\nimport caep\n\n\nclass Config(BaseModel):\n\n    text: str = Field(description=\"Required String Argument\")\n    number: int = Field(default=1, description=\"Integer with default value\")\n    switch: bool = Field(description=\"Boolean with default value\")\n    intlist: List[int] = Field(description=\"Space separated list of ints\", split=\" \")\n\n\n# Config/section options below will only be used if loading configuration\n# from ini file (under ~/.config)\nconfig = caep.load(\n    Config,\n    \"CAEP Example\",\n    \"caep\",  # Find .ini file under ~/.config/caep\n    \"caep.ini\",  # Find .ini file name caep.ini\n    \"section\",  # Load settings from [section] (default to [DEFATULT]\n)\n\nprint(config)\n```\n\nSample output with a `intlist` read from environment and `switch` from command line:\n\n```bash\n$ export INTLIST=\"1 2 3\"\n$ ./example.py --text \"My value\" --switch\ntext='My value' number=1 switch=True intlist=[1, 2, 3]\n```\n\n# Pydantic field types\n\nPydantic fields should be defined using `Field` and include the `description` parameter\nto specify help text for the commandline.\n\nUnless the `Field` has a `default` value, it is a required field that needs to be\nspecified in the environment, configuration file or on the command line.\n\nMany of the types described in [https://docs.pydantic.dev/usage/types/](https://docs.pydantic.dev/usage/types/)\nshould be supported, but not all of them are tested. However,  nested schemas\nare *not* supported.\n\nTested types:\n\n### `str`\n\nStandard string argument.\n\n### `int`\n\nValues parsed as integer.\n\n### `float`\n\nValue parsed as float.\n\n### `pathlib.Path`\n\nValue parsed as Path.\n\n### `ipaddress.IPv4Address`\n\nValues parsed and validated as IPv4Address.\n\n### `ipaddress.IPv4Network`\n\nValues parsed and validated as IPv4Network.\n\n### `bool`\n\nValue parsed as booleans. Booleans will default to False, if no default value is set.\nExamples:\n\n\n| Field                                                      | Input     | Configuration |\n| -                                                          | -         | -             |\n| `enable: bool = Field(description=\"Enable\")`               | <NOT SET> | False         |\n| `enable: bool = Field(value=False, description=\"Enable\")`  | `yes`     | True          |\n| `enable: bool = Field(value=False, description=\"Enable\")`  | `true`    | True          |\n| `disable: bool = Field(value=True, description=\"Disable\")` | <NOT SET> | True          |\n| `disable: bool = Field(value=True, description=\"Disable\")` | `yes`     | False         |\n| `disable: bool = Field(value=True, description=\"Disable\")` | `true`    | False         |\n\n### `List[str]` (`list[str]` for python >= 3.9)\n\nList of strings, split by specified character (default = comma, argument=`split`).\n\nSome examples:\n\n| Field                                              | Input   | Configuration |\n| -                                                  | -       | -             |\n| `List[int] = Field(description=\"Ints\", split=\" \")` | `1 2`   | [1, 2]        |\n| `List[str] = Field(description=\"Strs\")`            | `ab,bc` | [\"ab\", \"bc\"]  |\n\nThe argument `min_size` can be used to specify the minimum size of the list:\n\n| Field                                               | Input | Configuration     |\n| -                                                   | -     | -                 |\n| `List[str] = Field(description=\"Strs\", min_size=1)` | ``    | Raises FieldError |\n\n### `Set[str]` (`set[str]` for python >= 3.9)\n\nSet, split by specified character (default = comma, argument=`split`).\n\nSome examples:\n\n| Field                                             | Input      | Configuration |\n| -                                                 | -          | -             |\n| `Set[int] = Field(description=\"Ints\", split=\" \")` | `1 2 2`    | {1, 2}        |\n| `Set[str] = Field(description=\"Strs\")`            | `ab,ab,xy` | {\"ab\", \"xy\"}  |\n\nThe argument `min_size` can be used to specify the minimum size of the set:\n\n| Field                                               | Input | Configuration     |\n| -                                                   | -     | -                 |\n| `Set[str] = Field(description=\"Strs\", min_size=1)`  | ``    | Raises FieldError |\n\n\n### `Dict[str, <TYPE>]` (`dict[str, <TYPE>]` for python >= 3.9)\n\nDictioray of strings, split by specified character (default = comma, argument=`split` for\nsplitting items and colon for splitting key/value).\n\nSome examples:\n\n| Field                                                | Input                | Configuration            |\n| -                                                    | -                    | -                        |\n| `Dict[str, str] = Field(description=\"Dict\")`         | `x:a,y:b`            | {\"x\": \"a\", \"y\": \"b\"}     |\n| `Dict[str, int] = Field(description=\"Dict of ints\")` | `a b c:1, d e f:2`   | {\"a b c\": 1, \"d e f\": 2} |\n\nThe argument `min_size` can be used to specify the minimum numer of keys in the dictionary:\n\n| Field                                                    | Input | Configuration     |\n| -                                                        | -     | -                 |\n| `Dict[str, str] = Field(description=\"Strs\", min_size=1)` | ``    | Raises FieldError |\n\n\n# Configuration\n\nArguments are parsed in two phases. First, it will look for the optional argument `--config`\nwhich can be used to specify an alternative location for the ini file. If not `--config` argument\nis given it will look for an optional ini file in the following locations\n(`~/.config has presedence`):\n\n- `~/.config/<CONFIG_ID>/<CONFIG_FILE_NAME>` (or directory specified by `$XDG_CONFIG_HOME`)\n- `/etc/<CONFIG_FILE_NAME>`\n\nThe ini file can contain a `[DEFAULT]` section that will be used for all configurations.\nIn addition it can have a section that corresponds with `<SECTION_NAME>` that for\nspecific configuration, that will over override config from `[DEFAULT]`\n\n# Environment variables\n\nThe configuration step will also look for environment variables in uppercase and\nwith `-` replaced with `_`. For the example below it will lookup the following environment\nvariables:\n\n- $NUMBER\n- $BOOL\n- $STR_ARG\n\nThe configuration presedence are (from lowest to highest):\n* argparse default\n* ini file\n* environment variable\n* command line argument\n\n## Validation\n\n## XDG\n\nHelper functions to use [XDG Base Directories](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) are included in `caep.xdg`:\n\nIt will look up `XDG` environment variables like `$XDG_CONFIG_HOME` and use\ndefaults if not specified.\n\n### `get_xdg_dir`\n\nGeneric function to get a `XDG` directory.\n\nThe following example with will return a path object to ~/.config/myprog\n(if `$XDG_CONFIG_HOME` is not set) and create the directoy if it does not\nexist.\n\n```python\nget_xdg_dir(\"myprog\", \"XDG_CONFIG_HOME\", \".config\", True)\n```\n\n### `get_config_dir`\n\nShortcut for `get_xdg_dir(\"CONFIG\")`.\n\n### `get_cache_dir`\n\nShortcut for `get_xdg_dir(\"CACHE\")`.\n\n## CAEP Legacy usage\n\nPrior to version `0.1.0` the recommend usage was to add parser objects manually. This is\nstill supported, but with this approac you will not get the validation from pydantic:\n\n```python\n>>> import caep\n>>> import argparse\n>>> parser = argparse.ArgumentParser(\"test argparse\")\n>>> parser.add_argument('--number', type=int, default=1)\n>>> parser.add_argument('--bool', action='store_true')\n>>> parser.add_argument('--str-arg')\n>>> args = caep.config.handle_args(parser, <CONFIG_ID>, <CONFIG_FILE_NAME>, <SECTION_NAME>)\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mnemonic-no/caep",
            "keywords": "mnemonic",
            "license": "ISC",
            "maintainer": "",
            "maintainer_email": "",
            "name": "caep",
            "package_url": "https://pypi.org/project/caep/",
            "platform": null,
            "project_url": "https://pypi.org/project/caep/",
            "project_urls": {
                "Homepage": "https://github.com/mnemonic-no/caep"
            },
            "release_url": "https://pypi.org/project/caep/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.6, <4",
            "summary": "Config Argument Env Parser (CAEP)",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16278846,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "65eb4236b0b8f75b4d4c4ccee16e157e",
                    "sha256": "b3fad2dc8d695b4f5e050e0283e6db1625642020edbbc2723e1312f29077d878"
                },
                "downloads": -1,
                "filename": "caep-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "65eb4236b0b8f75b4d4c4ccee16e157e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6, <4",
                "size": 12356,
                "upload_time": "2023-01-02T13:07:17",
                "upload_time_iso_8601": "2023-01-02T13:07:17.213705Z",
                "url": "https://files.pythonhosted.org/packages/c2/f0/7deea4aadc6cfa734acab4d218a5808a95f73e6c93e48fbb15f04d353c54/caep-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}