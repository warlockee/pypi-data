{
    "0.1.0": {
        "info": {
            "author": null,
            "author_email": null,
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Programming Language :: Rust"
            ],
            "description": "# cairo-rs-py\n[![rust](https://github.com/lambdaclass/cairo-rs-py/actions/workflows/rust.yml/badge.svg)](https://github.com/lambdaclass/cairo-rs/actions/workflows/rust.yml) [![codecov](https://codecov.io/gh/lambdaclass/cairo-rs-py/branch/main/graph/badge.svg)](https://codecov.io/gh/lambdaclass/cairo-rs-py)\n\ncairo-rs-py adds Python bindings to the [cairo-rs](https://github.com/lambdaclass/cairo-rs) Cairo VM.\n\n## Dependencies\n- Rust and Cargo\n- Pyenv and Python 3.9\n- GMP\n- make\n\n## Using cairo-rs-py\nTo setup the Python environment, and install necessary Python libraries, run `make deps`.\n\nFinally, install into the python environment with `maturin develop --release`.\n\nAfter that, you can access the cairo-rs VM from Python code. As an example, after compiling the program `array_sum` into `cairo_programs/array_sum.json`, you can run it with the VM using:\n\n```python\nimport cairo_rs_py\n\nwith open(f\"cairo_programs/array_sum.json\") as file:\n    runner = cairo_rs_py.CairoRunner(file.read(), \"main\", \"all\", False)\n    runner.cairo_run(True)\n```\n\n## Testing\nTo run the test suite:\n```bash\nmake full-test\n```\n\n## Script to try out `cairo-rs-py`\n\nThe `build_envs.sh` script will build two Python virtual environments:\n- `cairo-lang` containing a pristine install of `cairo-lang==0.10.3`;\n- `cairo-rs-py` containing a patched install of `cairo-lang==0.10.3` that uses `cairo-rs-py` as dependency.\nIt will also install the required dependencies automatically in Debian-based distributions, CentOs, Fedora and OSX. \nIf you use another OS you can check how to install them manually below.\n\nTo run the script:\n```shell\n./scripts/build_envs.sh\n```\n\nBoth virtualenvs will be created under the `/scripts` directory.\n\nTo actually use any of the implementations you would have to activate the environment you want. For example to use the cairo-rs-py integration you need to run:\n\n```shell\nsource activate scripts/cairo-rs-py/bin/activate\n```\n\nAfter activating the cairo-rs-py virtualenv you can try out any Cairo project and it will use cairo-rs.\n\nNote that the script assumes you have a Rust toolchain, Python 3.9 and the `venv` program installed.\n\n### How to manually install the script dependencies\n\n`cairo-lang` requires the `gmp` library to build.\nYou can install it on Debian-based GNU/Linux distributions with:\n```shell\nsudo apt install -y libgmp3-dev\n```\n\nIn Mac you can use Homebrew:\n```shell\nbrew install gmp\n```\n\nIn Mac you'll also need to tell the script where to find the gmp lib:\n```shell\nexport CFLAGS=-I/opt/homebrew/opt/gmp/include LDFLAGS=-L/opt/homebrew/opt/gmp/lib\nsh build_envs.sh\n```\n\n",
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "cairo-rs-py",
            "package_url": "https://pypi.org/project/cairo-rs-py/",
            "platform": null,
            "project_url": "https://pypi.org/project/cairo-rs-py/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/cairo-rs-py/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": null,
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16188746,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "2020871bca79228369a6bf08a4151432",
                    "sha256": "35c6d478a859972f6703957af3b9c9d34912a6725255d0bdf5e8c9c5de26d342"
                },
                "downloads": -1,
                "filename": "cairo_rs_py-0.1.0-cp39-cp39-manylinux_2_34_x86_64.whl",
                "has_sig": false,
                "md5_digest": "2020871bca79228369a6bf08a4151432",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.7",
                "size": 998860,
                "upload_time": "2022-12-22T18:49:36",
                "upload_time_iso_8601": "2022-12-22T18:49:36.064813Z",
                "url": "https://files.pythonhosted.org/packages/f6/18/296524aba2b912ee4e80c20bf00e0b4722e9b44121e23877dc1ddc9352e0/cairo_rs_py-0.1.0-cp39-cp39-manylinux_2_34_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "bb14d5da5a75020172a0ea6edf2c9530",
                    "sha256": "363d11bcc5184c97a9643e440cb0a6a18443720a5c179b63a08946c7c928dea3"
                },
                "downloads": -1,
                "filename": "cairo_rs_py-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "bb14d5da5a75020172a0ea6edf2c9530",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 96428304,
                "upload_time": "2022-12-22T18:50:20",
                "upload_time_iso_8601": "2022-12-22T18:50:20.428619Z",
                "url": "https://files.pythonhosted.org/packages/a3/38/f30486c3ccbdd4c5c25bf6b023cef6d3080d538f9b79c427ec7080f9039d/cairo_rs_py-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}