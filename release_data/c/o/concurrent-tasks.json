{
    "0.1.0": {
        "info": {
            "author": "Gabriel Pajot",
            "author_email": "gab@les-cactus.co",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/gpajot/asyncio-concurrent-tasks",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "concurrent-tasks",
            "package_url": "https://pypi.org/project/concurrent-tasks/",
            "platform": null,
            "project_url": "https://pypi.org/project/concurrent-tasks/",
            "project_urls": {
                "Homepage": "https://github.com/gpajot/asyncio-concurrent-tasks",
                "Repository": "https://github.com/gpajot/asyncio-concurrent-tasks"
            },
            "release_url": "https://pypi.org/project/concurrent-tasks/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7,<3.12",
            "summary": "Tools to run asyncio tasks concurrently.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16185852,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "afebb8f392d441e72f1b3402dabc0cdb",
                    "sha256": "7e947b25006a0266e27e9012217124c66192969b22cad24c65c0eae6ba845a03"
                },
                "downloads": -1,
                "filename": "concurrent_tasks-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "afebb8f392d441e72f1b3402dabc0cdb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<3.12",
                "size": 7940,
                "upload_time": "2022-12-22T13:22:42",
                "upload_time_iso_8601": "2022-12-22T13:22:42.059058Z",
                "url": "https://files.pythonhosted.org/packages/9a/fb/f56d021b2f69e148af7242be397e29a09ed92599293c434b366e566965f8/concurrent_tasks-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "12c0570bdc70aa54da9944e47fafd0f7",
                    "sha256": "f3c91fa79ce7f39b9c93495d9e6c6d8eb350b5880ba5cc9d2ee7c85c46ac2d64"
                },
                "downloads": -1,
                "filename": "concurrent_tasks-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "12c0570bdc70aa54da9944e47fafd0f7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<3.12",
                "size": 6123,
                "upload_time": "2022-12-22T13:22:43",
                "upload_time_iso_8601": "2022-12-22T13:22:43.627801Z",
                "url": "https://files.pythonhosted.org/packages/fa/ef/aba432fa2f3d0d14d306768132c6ea5dbb842d2df52071e9f2afb0506378/concurrent_tasks-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0": {
        "info": {
            "author": "Gabriel Pajot",
            "author_email": "gab@les-cactus.co",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# asyncio-concurrent-tasks\n\n[![tests](https://github.com/gpajot/asyncio-concurrent-tasks/workflows/Test/badge.svg?branch=main&event=push)](https://github.com/gpajot/asyncio-concurrent-tasks/actions?query=workflow%3ATest+branch%3Amain+event%3Apush)\n[![version](https://img.shields.io/pypi/v/concurrent_tasks?label=stable)](https://pypi.org/project/concurrent_tasks/)\n[![python](https://img.shields.io/pypi/pyversions/concurrent_tasks)](https://pypi.org/project/concurrent_tasks/)\n\nTooling to run asyncio tasks.\n\n## Background task\nTask that is running in the background until cancelled.\nCan be used as a context manager.\n\nExample usage:\n\n```python\nimport asyncio\nfrom typing import Callable, Awaitable\nfrom concurrent_tasks import BackgroundTask\n\n\nclass HeartBeat(BackgroundTask):\n    def __init__(self, interval: float, func: Callable[[], None]):\n        super().__init__(self._run, interval, func)\n\n    async def _run(self, interval: float, func: Callable[[], Awaitable]) -> None:\n        while True:\n            await func()\n            await asyncio.sleep(interval)\n```\n\n## Threaded task pool\nRun async tasks in a dedicated thread. It will have its own event loop.\n\nParameters:\n- `name` will be used as the thread's name.\n- `size` can be a positive integer to limit the number of tasks concurrently running.\n- `timeout` can be set to define a maximum running time for each time after which it will be cancelled.\nNote: this excludes time spent waiting to be started (time spent in the buffer).\n- `context_manager` can be optional context managers that will be entered when the loop has started\nand exited before the loop is stopped.\n\n> \ud83d\udca1 All tasks will be completed when the pool is stopped.\n\n> \ud83d\udca1Blocking and async version are the same, prefer the async version if client code is async.\n\n### Blocking\nThis can be used to run async functions in a dedicated event loop, while keeping it running to handle background tasks\n\nExample usage:\n\n```python\nfrom concurrent_tasks import BlockingThreadedTaskPool\n\n\nasync def func():\n    ...\n\n\nwith BlockingThreadedTaskPool() as pool:\n    # Create and run the task.\n    result = pool.run(func())\n    # Create a task, the future will hold information about completion.\n    future = pool.create_task(func())\n```\n\n### Async\nThreads can be useful in cooperation with asyncio to let the OS guarantee fair resource distribution between threads.\nThis is especially useful in case you cannot know if called code will properly cooperate with the event loop.\n\nExample usage:\n\n```python\nfrom concurrent_tasks import AsyncThreadedTaskPool\n\n\nasync def func():\n    ...\n\n\nasync with AsyncThreadedTaskPool() as pool:\n    # Create and run the task.\n    result = await pool.run(func())\n    # Create a task, the future will hold information about completion.\n    future = pool.create_task(func())\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/gpajot/asyncio-concurrent-tasks",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "concurrent-tasks",
            "package_url": "https://pypi.org/project/concurrent-tasks/",
            "platform": null,
            "project_url": "https://pypi.org/project/concurrent-tasks/",
            "project_urls": {
                "Homepage": "https://github.com/gpajot/asyncio-concurrent-tasks",
                "Repository": "https://github.com/gpajot/asyncio-concurrent-tasks"
            },
            "release_url": "https://pypi.org/project/concurrent-tasks/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.7,<3.12",
            "summary": "Tools to run asyncio tasks concurrently.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16185852,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d24ba3b193c8987100ff39f1ba54f026",
                    "sha256": "daa7c889e2f0d3dab6cbc6844287410caf8502c0b236afc0bfe03c35f8c1f5b5"
                },
                "downloads": -1,
                "filename": "concurrent_tasks-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d24ba3b193c8987100ff39f1ba54f026",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<3.12",
                "size": 7947,
                "upload_time": "2022-12-22T13:29:47",
                "upload_time_iso_8601": "2022-12-22T13:29:47.302994Z",
                "url": "https://files.pythonhosted.org/packages/40/1d/235ddf001c71bb166f97a41116fa59f204f9eb5f698e2128976cad111071/concurrent_tasks-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2b7ba0c64bbf3c19c61c2a99c85b41b0",
                    "sha256": "7d3b195b09642fa6449ef1b446350f094859f5d36916435e24fe17368ea83003"
                },
                "downloads": -1,
                "filename": "concurrent_tasks-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "2b7ba0c64bbf3c19c61c2a99c85b41b0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<3.12",
                "size": 5994,
                "upload_time": "2022-12-22T13:29:48",
                "upload_time_iso_8601": "2022-12-22T13:29:48.406331Z",
                "url": "https://files.pythonhosted.org/packages/ac/27/928ba36a1e77c4b4c3aa0991963baadb00cc6fb73d37ecbd34277d15b3b5/concurrent_tasks-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}