{
    "0.0.1": {
        "info": {
            "author": "Antonio Cheong",
            "author_email": "acheong@student.dalat.org",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Lightweight version of ChatGPT\nUses API by [Pawan](https://github.com/PawanOsman/)\n\n# Usage:\n```\nusage: ChatGPT-lite [-h] [--session_token SESSION_TOKEN] [--bypass_node BYPASS_NODE (optional)] [--async_mode]\n```\n\n## Getting session token\nCheck https://github.com/acheong08/ChatGPT/wiki/Setup\n\n## Example development usage:\n```python\nimport argparse\nimport sys\nimport asyncio\nfrom ChatGPT_lite.ChatGPT import Chatbot\n\n\nasync def async_main(args):\n    if args.session_token is None:\n        print(\"Please provide a session token\")\n        sys.exit(1)\n\n    chat = Chatbot(args.session_token, args.bypass_node)\n    await asyncio.gather(chat.wait_for_ready())\n\n    while True:\n        try:\n            prompt = input(\"You: \")\n            if prompt == \"!exit\":\n                break\n            response = await chat.ask(prompt)\n            print(f\"\\nBot: {response['answer']}\\n\")\n        except KeyboardInterrupt:\n            break\n    # Close sockets\n    chat.close()\n    # exit\n    sys.exit(0)\n\n\ndef sync_main(args):\n    chat = Chatbot(args.session_token, args.bypass_node)\n    # Create loop\n    loop = asyncio.new_event_loop()\n    # Set\n    asyncio.set_event_loop(loop)\n    # Run\n    loop.run_until_complete(chat.wait_for_ready())\n    while True:\n        try:\n            prompt = input(\"You: \")\n            if prompt == \"!exit\":\n                break\n            response = loop.run_until_complete(chat.ask(prompt))\n            print(f\"\\nBot: {response['answer']}\\n\")\n        except KeyboardInterrupt:\n            break\n    # Close sockets\n    chat.close()\n    # stop asyncio event loop\n    loop.stop()\n    # exit\n    sys.exit(0)\n\n\ndef main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--session_token', type=str, default=None)\n    parser.add_argument('--bypass_node', type=str,\n                        default=\"https://gpt.pawan.krd\")\n    parser.add_argument('--async_mode', action='store_true')\n    args = parser.parse_args()\n\n    if args.session_token is None:\n        print(\"Please provide a session token\")\n        sys.exit(1)\n\n    print(\"Starting. Please wait...\")\n    if args.async_mode:\n        asyncio.run(async_main(args))\n    else:\n        sync_main(args)\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n# Privacy concerns:\n@PawanOsman can see everything you do\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/acheong08/ChatGPT-lite",
            "keywords": "",
            "license": "GNU General Public License v2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ChatGPT-lite",
            "package_url": "https://pypi.org/project/ChatGPT-lite/",
            "platform": null,
            "project_url": "https://pypi.org/project/ChatGPT-lite/",
            "project_urls": {
                "Homepage": "https://github.com/acheong08/ChatGPT-lite"
            },
            "release_url": "https://pypi.org/project/ChatGPT-lite/0.0.1/",
            "requires_dist": [
                "asyncio",
                "python-socketio"
            ],
            "requires_python": "",
            "summary": "ChatGPT is a reverse engineering of OpenAI's ChatGPT API",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16273542,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4787ed6176ec9885b0668791e4ee79ac",
                    "sha256": "4f9a296b17631f6a988453c41f25a68599de8438343d8e6347689978f6737b32"
                },
                "downloads": -1,
                "filename": "ChatGPT_lite-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4787ed6176ec9885b0668791e4ee79ac",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4843,
                "upload_time": "2023-01-01T18:05:19",
                "upload_time_iso_8601": "2023-01-01T18:05:19.620273Z",
                "url": "https://files.pythonhosted.org/packages/63/5d/bb4d3200ccd04e5b5e136d5563afbfb18110465f26cf3e073d7f638110f9/ChatGPT_lite-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b982247e05f86b3a61a41cbee92b0b2e",
                    "sha256": "660559ad077b7168b992f3b53fcddfe32c88711caa6166dffb44b5eaac6b7a85"
                },
                "downloads": -1,
                "filename": "ChatGPT_lite-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b982247e05f86b3a61a41cbee92b0b2e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3911,
                "upload_time": "2023-01-01T18:05:21",
                "upload_time_iso_8601": "2023-01-01T18:05:21.501539Z",
                "url": "https://files.pythonhosted.org/packages/78/94/ecb3ce3d5166b973eba6d769d8aa9878b0a46d23c24879ebb4bb751b8b6a/ChatGPT_lite-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}